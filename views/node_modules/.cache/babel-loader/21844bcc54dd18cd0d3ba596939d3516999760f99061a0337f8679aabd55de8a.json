{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\Desktop\\\\picdiary\\\\views\\\\src\\\\components\\\\diet\\\\DietListComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useLayoutEffect, useState } from \"react\";\nimport { Link, Navigate, useNavigate, useSearchParams } from \"react-router-dom\";\nimport \"../layout/stylesCalendar.css\";\nimport Image from \"react-bootstrap/Image\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Card from \"react-bootstrap/Card\";\nimport useCustomDiet from \"../../hooks/useCustomDiet\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { getDietList } from \"../../api/dietApi\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst chooseReturn = number => {\n  console.log(\"DietListComponent.js chooseReturn() 진입 매개변수 => \", number);\n  let result = \"\";\n  for (let n of number) {\n    switch (n) {\n      case \"1\":\n        return result = \"🥦아침\";\n      case \"2\":\n        return result = \"🍄점심\";\n      case \"3\":\n        return result = \"🧅저녁\";\n      case \"4\":\n        return result = \"🧄간식\";\n      default:\n        return null;\n    }\n  }\n  console.log(result);\n};\nconst makeCalendar = d => {\n  console.log(\"makeCalendar() 진입 매개변수 확인 => \", d);\n  let date = new Date(d);\n  const currentYear = new Date(date).getFullYear();\n  console.log(\"makeCalendar() 진입 currentYear -> \", currentYear);\n  const currentMonth = new Date(date).getMonth() + 1;\n  console.log(\"makeCalendar() 진입 currentMonth -> \", currentMonth);\n  const firstDay = new Date(date.setDate(1)).getDay();\n  console.log(\"makeCalendar() 진입 firstDay -> \", firstDay);\n\n  //현재 달력첫째날\n  let calfirst = \"\";\n  function getCalfirst() {\n    calfirst += `${currentYear}-`;\n    if (currentMonth < 10) {\n      calfirst += `0${currentMonth}`;\n    } else {\n      calfirst += `${currentMonth}`;\n    }\n    //calfirst += `01`\n    return calfirst;\n  } //calfirst 현재달력첫날\n\n  const lastDay = new Date(currentYear, currentMonth, 0).getDate();\n  console.log(\"lastDay값 ->\" + lastDay); //30\n  const limitDay = firstDay + lastDay;\n  console.log(\"limitDay값 ->\" + limitDay); //31\n  const nextDay = Math.ceil(limitDay / 7) * 7;\n  console.log(\"nextDay값 ->\" + nextDay); //35 35-31=4칸 빈칸만들어진다.\n\n  return {\n    firstDay,\n    lastDay,\n    limitDay,\n    nextDay\n  };\n};\nconst CalendarItem = props => {\n  console.log(\"DietListComponent.js 진입\");\n\n  //UserId, content ,createdAt ,id , picture\n  const {\n    diet,\n    dateobject\n  } = props.i; //api서버후 db에서 받은값\n  console.log(\"DietListComponent.js props diet=> \", diet);\n  console.log(\"DietListComponent.js props dateobject=> \", dateobject);\n\n  // console.log(\"props.i.diet[0] \", props.i.diet[0]);\n  //console.log(\"props.i \", props.i);\n  return diet.map(i => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: i.id ? i.choose ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `../read/${i.choose}/${dateobject}`,\n        style: {\n          textDecoration: \"none\",\n          color: \"black\"\n        },\n        children: chooseReturn(i.choose)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) //없는경우\n    : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) //없는경우\n  }, i.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this));\n};\n_c = CalendarItem;\nconst DietListComponent = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const {\n    moveToCreate\n  } = useCustomMove();\n  const {\n    effectException\n  } = useCustomLogin();\n  const navigate = useNavigate();\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [currentYear, setCurrentYear] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [fullcurrentDate, setFullCurrentDate] = useState(\"\");\n  const [diet, setDiet] = useState([]);\n  const [searchMonth, setSearchMonth] = useState(0);\n  const [searchYear, setSearchYear] = useState(0);\n  const [beforeDateItemArray, setBeforeDateItemArray] = useState([]);\n  const [afterDateItemArray, setAfterDateItemArray] = useState([]);\n  const [dateItem, setDateItem] = useState([]);\n  const [lastDay, setLastDay] = useState(\"\");\n  const [firstDay, setFirstDay] = useState(\"\");\n  const [nextDay, setNextDay] = useState(\"\");\n  const [limitDay, setLimitDay] = useState(\"\");\n  useEffect(() => {\n    console.log(\"useEffect() 진입 axios 비동기요청 \");\n    //  callbackStateMake();\n    //callbackCalendarMake();\n    if (currentDate !== \"\") {\n      console.log(\"useEffect() 진입 axios 비동기요청 currentDate 존재할경우 ->\", currentDate);\n      const getDietListEI = async () => {\n        await getDietList({\n          currentDate\n        }).then(result => {\n          console.log(\"useEffect() then()진입 \", result);\n          setDiet(result);\n        }).catch(err => {\n          console.log(\"useEffect() catch()진입 \", err);\n          effectException(err);\n          //navigate(\"/\");\n        });\n      }; //getDiet\n      getDietListEI();\n    } //if\n  }, [currentDate]);\n\n  //const callbackStateMake = useCallback(() => {\n  //console.log(\"useCallback() callbackStateMake() 진입\");\n  let date = new Date();\n  let basicYear = date.getFullYear();\n  let basicMonth = date.getMonth() + 1;\n  basicMonth = basicMonth < 10 ? \"0\" + basicMonth : basicMonth;\n  date = `${basicYear}-${basicMonth}-01`;\n  let searchParamsYear = searchParams.get(\"year\");\n  let searchParamsMonth = searchParams.get(\"month\");\n  if (searchParamsYear !== null && searchParamsMonth !== null) {\n    console.log(\"쿼리파라미터 존재할경우 진입 -> \", searchParamsYear);\n    console.log(\"쿼리파라미터 존재할경우 진입 -> \", searchParamsMonth);\n    setSearchMonth(() => Number(searchParamsMonth));\n    setSearchYear(() => searchParamsYear);\n    const ifsearchMonth = searchMonth < 10 ? \"0\" + searchMonth : searchMonth;\n    date = new Date(`${searchYear}-${ifsearchMonth}-01`);\n  }\n  setCurrentDate(date);\n  date = new Date(date);\n  setCurrentYear(\"\" + date.getFullYear());\n  setCurrentMonth(date.getMonth() + 1);\n  setFullCurrentDate(date);\n  //console.log(\"useCallback() callbackStateMake() 진입 date-> \", date);\n\n  if (fullcurrentDate !== \"\") {\n    console.log(\"fullcurrentDate 존재할경우 =>  \", fullcurrentDate);\n    const {\n      firstDay,\n      nextDay,\n      limitDay,\n      lastDay\n    } = makeCalendar(fullcurrentDate);\n    setLastDay(lastDay);\n    setFirstDay(firstDay);\n    setNextDay(nextDay);\n    setLimitDay(limitDay);\n  } //if\n  //}, [searchMonth, searchYear]);\n\n  //달력에서 이전빈칸\n  //const callbackCalendarMake = useCallback(() => {\n  //console.log(\"useCallback() callbackCalendarMake() 진입\");\n\n  for (let i = 1, j = 0; i <= lastDay; i++, j++) {\n    console.log(\"달력div for문 진입\");\n    let currentYear = new Date(fullcurrentDate).getFullYear();\n    let currentMonth = new Date(fullcurrentDate).getMonth() + 1;\n    currentMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\n    let ichange = i < 10 ? \"0\" + i : i;\n    let dateobject = `${currentYear}-${currentMonth}-${ichange}`;\n    dateItem[j] = {\n      dateitem: i,\n      dateobject: dateobject,\n      diet: diet.filter(a => a.dateobject === dateobject)\n    };\n  }\n  setDateItem(() => dateItem);\n  const beforeDateItem = firstDay - 0;\n  //let beforeDateItemArray = [];\n\n  if (beforeDateItem !== 0) {\n    for (let i = 1, j = 0; i <= beforeDateItem; i++, j++) {\n      beforeDateItemArray[j] = i;\n    }\n  }\n  setBeforeDateItemArray(() => beforeDateItemArray);\n\n  //달력에서 이후빈칸\n  const afterDateItem = nextDay - limitDay;\n  //let afterDateItemArray = [];\n\n  if (afterDateItem !== 0) {\n    for (let i = 1, j = 0; i <= afterDateItem; i++, j++) {\n      afterDateItemArray[j] = i;\n    }\n  }\n  setAfterDateItemArray(() => afterDateItemArray);\n\n  //let dateItem = [];\n\n  //}, [diet]);\n\n  // 이전달 이동\n  const BeforeMonthMove = currentDate => {\n    console.log(\"BeforeMonthMove() 진입  => \", currentDate);\n    const tempdate = new Date(currentDate);\n    let beforechangeDate = new Date(tempdate.setMonth(tempdate.getMonth() - 1));\n    let beforecurrentYear = new Date(beforechangeDate).getFullYear();\n    console.log(\"BeforeMonthMove() 진입 beforecurrentYear => \", beforecurrentYear);\n    let beforechangeMonth = new Date(beforechangeDate).getMonth() + 1;\n    beforechangeMonth = beforechangeMonth < 10 ? \"0\" + beforechangeMonth : beforechangeMonth;\n    console.log(\"BeforeMonthMove() 진입 beforechangeMonth => \", beforechangeMonth);\n    navigate(`?year=${beforecurrentYear}&month=${beforechangeMonth}`);\n\n    // makeCalendar(new Date(tempdate.setMonth(tempdate.getMonth() - 1)));\n  };\n\n  //다음달이동\n  const NextMonthMove = currentDate => {\n    console.log(\"NextMonthMove() 진입 currentDate ->\", currentDate);\n    const tempdate = new Date(currentDate);\n    let afterchangeDate = new Date(tempdate.setMonth(tempdate.getMonth()));\n    console.log(\"NextMonthMove() 진입 afterchangeDate ->\", afterchangeDate);\n    let aftercurrentYear = new Date(afterchangeDate).getFullYear();\n    console.log(\"NextMonthMove() 진입 aftercurrentYear ->\", aftercurrentYear);\n    let afterchangeMonth = new Date(afterchangeDate).getMonth() + 1;\n    afterchangeMonth = afterchangeMonth < 10 ? \"0\" + afterchangeMonth : afterchangeMonth;\n    console.log(\"NextMonthMove() 진입 afterchangeMonth ->\", afterchangeMonth);\n    const conveyNext = `${aftercurrentYear}-${afterchangeMonth}-01`;\n    navigate(`?year=${aftercurrentYear}&month=${afterchangeMonth}`);\n\n    //makeCalendar(conveyNext);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calrap\",\n        style: {\n          margin: \"0 auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calheader\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calbtn calprevDay\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => BeforeMonthMove(currentDate),\n              children: \"\\uC774\\uC804\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"caldateTitle\",\n            children: [currentYear, \"\\uB144 \", currentMonth, \"\\uC6D4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calbtn calnextDay\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => NextMonthMove(currentDate),\n              children: \"\\uC774\\uD6C4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          style: {\n            textAlign: \"right\",\n            color: \"tomato\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"\\uC77C\\uC790 \\uD074\\uB9AD\\uC2DC \\uC2DD\\uB2E8\\uB4F1\\uB85D\\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calgrid caldateHead\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uC77C\"\n          }, \"0\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uC6D4\"\n          }, \"1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uD654\"\n          }, \"2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uC218\"\n          }, \"3\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uBAA9\"\n          }, \"4\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uAE08\"\n          }, \"5\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uD1A0\"\n          }, \"6\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calgrid caldateBoard\",\n          children: [beforeDateItemArray.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)), dateItem.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: i.diet.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `../create/${i.dateobject}`,\n                style: {\n                  textDecoration: \"none\",\n                  color: \"inherit\"\n                },\n                children: i.dateitem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                to: `../readall/${i.dateobject}`,\n                style: {\n                  textDecoration: \"none\",\n                  color: \"black\"\n                },\n                children: \"\\xA0\\xA0\\uBAA8\\uB450\\uBCF4\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CalendarItem, {\n                i: i\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Link, {\n              to: `../create/${i.dateobject}`,\n              style: {\n                textDecoration: \"none\",\n                color: \"inherit\"\n              },\n              children: i.dateitem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)), afterDateItemArray.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(DietListComponent, \"HzcDfyC8YgpHr5q+EDRuwrMusGM=\", false, function () {\n  return [useSearchParams, useCustomMove, useCustomLogin, useNavigate];\n});\n_c2 = DietListComponent;\nexport default DietListComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarItem\");\n$RefreshReg$(_c2, \"DietListComponent\");","map":{"version":3,"names":["React","useCallback","useEffect","useLayoutEffect","useState","Link","Navigate","useNavigate","useSearchParams","Image","useCustomMove","Card","useCustomDiet","useCustomLogin","getDietList","jsxDEV","_jsxDEV","Fragment","_Fragment","chooseReturn","number","console","log","result","n","makeCalendar","d","date","Date","currentYear","getFullYear","currentMonth","getMonth","firstDay","setDate","getDay","calfirst","getCalfirst","lastDay","getDate","limitDay","nextDay","Math","ceil","CalendarItem","props","diet","dateobject","i","map","children","id","choose","fileName","_jsxFileName","lineNumber","columnNumber","to","style","textDecoration","color","_c","DietListComponent","_s","searchParams","moveToCreate","effectException","navigate","setCurrentMonth","setCurrentYear","currentDate","setCurrentDate","fullcurrentDate","setFullCurrentDate","setDiet","searchMonth","setSearchMonth","searchYear","setSearchYear","beforeDateItemArray","setBeforeDateItemArray","afterDateItemArray","setAfterDateItemArray","dateItem","setDateItem","setLastDay","setFirstDay","setNextDay","setLimitDay","getDietListEI","then","catch","err","basicYear","basicMonth","searchParamsYear","get","searchParamsMonth","Number","ifsearchMonth","j","ichange","dateitem","filter","a","beforeDateItem","afterDateItem","BeforeMonthMove","tempdate","beforechangeDate","setMonth","beforecurrentYear","beforechangeMonth","NextMonthMove","afterchangeDate","aftercurrentYear","afterchangeMonth","conveyNext","className","margin","onClick","textAlign","index","length","_c2","$RefreshReg$"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/components/diet/DietListComponent.js"],"sourcesContent":["import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { Link, Navigate, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport \"../layout/stylesCalendar.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport useCustomDiet from \"../../hooks/useCustomDiet\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { getDietList } from \"../../api/dietApi\";\r\n\r\nconst chooseReturn = (number) => {\r\n  console.log(\"DietListComponent.js chooseReturn() 진입 매개변수 => \", number);\r\n  let result = \"\";\r\n  for (let n of number) {\r\n    switch (n) {\r\n      case \"1\":\r\n        return (result = \"🥦아침\");\r\n      case \"2\":\r\n        return (result = \"🍄점심\");\r\n      case \"3\":\r\n        return (result = \"🧅저녁\");\r\n      case \"4\":\r\n        return (result = \"🧄간식\");\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  console.log(result);\r\n};\r\n\r\nconst makeCalendar = (d) => {\r\n  console.log(\"makeCalendar() 진입 매개변수 확인 => \", d);\r\n  let date = new Date(d);\r\n  const currentYear = new Date(date).getFullYear();\r\n  console.log(\"makeCalendar() 진입 currentYear -> \", currentYear);\r\n\r\n  const currentMonth = new Date(date).getMonth() + 1;\r\n  console.log(\"makeCalendar() 진입 currentMonth -> \", currentMonth);\r\n  const firstDay = new Date(date.setDate(1)).getDay();\r\n  console.log(\"makeCalendar() 진입 firstDay -> \", firstDay);\r\n\r\n  //현재 달력첫째날\r\n  let calfirst = \"\";\r\n  function getCalfirst() {\r\n    calfirst += `${currentYear}-`;\r\n\r\n    if (currentMonth < 10) {\r\n      calfirst += `0${currentMonth}`;\r\n    } else {\r\n      calfirst += `${currentMonth}`;\r\n    }\r\n    //calfirst += `01`\r\n    return calfirst;\r\n  } //calfirst 현재달력첫날\r\n\r\n  const lastDay = new Date(currentYear, currentMonth, 0).getDate();\r\n  console.log(\"lastDay값 ->\" + lastDay); //30\r\n  const limitDay = firstDay + lastDay;\r\n  console.log(\"limitDay값 ->\" + limitDay); //31\r\n  const nextDay = Math.ceil(limitDay / 7) * 7;\r\n  console.log(\"nextDay값 ->\" + nextDay); //35 35-31=4칸 빈칸만들어진다.\r\n\r\n  return { firstDay, lastDay, limitDay, nextDay };\r\n};\r\n\r\nconst CalendarItem = (props) => {\r\n  console.log(\"DietListComponent.js 진입\");\r\n\r\n  //UserId, content ,createdAt ,id , picture\r\n  const { diet, dateobject } = props.i; //api서버후 db에서 받은값\r\n  console.log(\"DietListComponent.js props diet=> \", diet);\r\n  console.log(\"DietListComponent.js props dateobject=> \", dateobject);\r\n\r\n  // console.log(\"props.i.diet[0] \", props.i.diet[0]);\r\n  //console.log(\"props.i \", props.i);\r\n  return diet.map((i) => (\r\n    <React.Fragment key={i.id}>\r\n      {i.id ? (\r\n        i.choose ? (\r\n          <>\r\n            <br />\r\n            <Link\r\n              to={`../read/${i.choose}/${dateobject}`}\r\n              style={{ textDecoration: \"none\", color: \"black\" }}\r\n            >\r\n              {chooseReturn(i.choose)}\r\n              {/* <Image\r\n                src={`http://localhost:8001/img/${i.picture}`}\r\n                rounded\r\n                variant=\"top\"\r\n                style={{\r\n                  display: \"block\",\r\n                  margin: \"0 auto\",\r\n                  maxWidth: \"50px\",\r\n                  maxHeight: \"50px\",\r\n                  objectFit: \"contain\",\r\n                }}\r\n              /> */}\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <></> //없는경우\r\n        )\r\n      ) : (\r\n        <></> //없는경우\r\n      )}\r\n    </React.Fragment>\r\n  ));\r\n};\r\n\r\nconst DietListComponent = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const { moveToCreate } = useCustomMove();\r\n  const { effectException } = useCustomLogin();\r\n  const navigate = useNavigate();\r\n\r\n  const [currentMonth, setCurrentMonth] = useState(\"\");\r\n  const [currentYear, setCurrentYear] = useState(\"\");\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [fullcurrentDate, setFullCurrentDate] = useState(\"\");\r\n\r\n  const [diet, setDiet] = useState([]);\r\n\r\n  const [searchMonth, setSearchMonth] = useState(0);\r\n  const [searchYear, setSearchYear] = useState(0);\r\n  const [beforeDateItemArray, setBeforeDateItemArray] = useState([]);\r\n  const [afterDateItemArray, setAfterDateItemArray] = useState([]);\r\n  const [dateItem, setDateItem] = useState([]);\r\n  const [lastDay, setLastDay] = useState(\"\");\r\n  const [firstDay, setFirstDay] = useState(\"\");\r\n  const [nextDay, setNextDay] = useState(\"\");\r\n  const [limitDay, setLimitDay] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect() 진입 axios 비동기요청 \");\r\n    //  callbackStateMake();\r\n    //callbackCalendarMake();\r\n    if (currentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() 진입 axios 비동기요청 currentDate 존재할경우 ->\",\r\n        currentDate\r\n      );\r\n\r\n      const getDietListEI = async () => {\r\n        await getDietList({ currentDate })\r\n          .then((result) => {\r\n            console.log(\"useEffect() then()진입 \", result);\r\n            setDiet(result);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"useEffect() catch()진입 \", err);\r\n            effectException(err);\r\n            //navigate(\"/\");\r\n          });\r\n      }; //getDiet\r\n      getDietListEI();\r\n    } //if\r\n  }, [currentDate]);\r\n\r\n  //const callbackStateMake = useCallback(() => {\r\n  //console.log(\"useCallback() callbackStateMake() 진입\");\r\n  let date = new Date();\r\n\r\n  let basicYear = date.getFullYear();\r\n  let basicMonth = date.getMonth() + 1;\r\n  basicMonth = basicMonth < 10 ? \"0\" + basicMonth : basicMonth;\r\n  date = `${basicYear}-${basicMonth}-01`;\r\n  let searchParamsYear = searchParams.get(\"year\");\r\n  let searchParamsMonth = searchParams.get(\"month\");\r\n\r\n  if (searchParamsYear !== null && searchParamsMonth !== null) {\r\n    console.log(\"쿼리파라미터 존재할경우 진입 -> \", searchParamsYear);\r\n    console.log(\"쿼리파라미터 존재할경우 진입 -> \", searchParamsMonth);\r\n    setSearchMonth(() => Number(searchParamsMonth));\r\n    setSearchYear(() => searchParamsYear);\r\n\r\n    const ifsearchMonth = searchMonth < 10 ? \"0\" + searchMonth : searchMonth;\r\n\r\n    date = new Date(`${searchYear}-${ifsearchMonth}-01`);\r\n  }\r\n  setCurrentDate(date);\r\n  date = new Date(date);\r\n  setCurrentYear(\"\" + date.getFullYear());\r\n  setCurrentMonth(date.getMonth() + 1);\r\n  setFullCurrentDate(date);\r\n  //console.log(\"useCallback() callbackStateMake() 진입 date-> \", date);\r\n\r\n  if (fullcurrentDate !== \"\") {\r\n    console.log(\"fullcurrentDate 존재할경우 =>  \", fullcurrentDate);\r\n\r\n    const { firstDay, nextDay, limitDay, lastDay } =\r\n      makeCalendar(fullcurrentDate);\r\n\r\n    setLastDay(lastDay);\r\n    setFirstDay(firstDay);\r\n    setNextDay(nextDay);\r\n    setLimitDay(limitDay);\r\n  } //if\r\n  //}, [searchMonth, searchYear]);\r\n\r\n  //달력에서 이전빈칸\r\n  //const callbackCalendarMake = useCallback(() => {\r\n  //console.log(\"useCallback() callbackCalendarMake() 진입\");\r\n\r\n  for (let i = 1, j = 0; i <= lastDay; i++, j++) {\r\n    console.log(\"달력div for문 진입\");\r\n\r\n    let currentYear = new Date(fullcurrentDate).getFullYear();\r\n    let currentMonth = new Date(fullcurrentDate).getMonth() + 1;\r\n    currentMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\r\n    let ichange = i < 10 ? \"0\" + i : i;\r\n    let dateobject = `${currentYear}-${currentMonth}-${ichange}`;\r\n\r\n    dateItem[j] = {\r\n      dateitem: i,\r\n      dateobject: dateobject,\r\n      diet: diet.filter((a) => a.dateobject === dateobject),\r\n    };\r\n  }\r\n  setDateItem(() => dateItem);\r\n\r\n  const beforeDateItem = firstDay - 0;\r\n  //let beforeDateItemArray = [];\r\n\r\n  if (beforeDateItem !== 0) {\r\n    for (let i = 1, j = 0; i <= beforeDateItem; i++, j++) {\r\n      beforeDateItemArray[j] = i;\r\n    }\r\n  }\r\n  setBeforeDateItemArray(() => beforeDateItemArray);\r\n\r\n  //달력에서 이후빈칸\r\n  const afterDateItem = nextDay - limitDay;\r\n  //let afterDateItemArray = [];\r\n\r\n  if (afterDateItem !== 0) {\r\n    for (let i = 1, j = 0; i <= afterDateItem; i++, j++) {\r\n      afterDateItemArray[j] = i;\r\n    }\r\n  }\r\n  setAfterDateItemArray(() => afterDateItemArray);\r\n\r\n  //let dateItem = [];\r\n\r\n  //}, [diet]);\r\n\r\n  // 이전달 이동\r\n  const BeforeMonthMove = (currentDate) => {\r\n    console.log(\"BeforeMonthMove() 진입  => \", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n    let beforechangeDate = new Date(tempdate.setMonth(tempdate.getMonth() - 1));\r\n    let beforecurrentYear = new Date(beforechangeDate).getFullYear();\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforecurrentYear => \",\r\n      beforecurrentYear\r\n    );\r\n\r\n    let beforechangeMonth = new Date(beforechangeDate).getMonth() + 1;\r\n    beforechangeMonth =\r\n      beforechangeMonth < 10 ? \"0\" + beforechangeMonth : beforechangeMonth;\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforechangeMonth => \",\r\n      beforechangeMonth\r\n    );\r\n\r\n    navigate(`?year=${beforecurrentYear}&month=${beforechangeMonth}`);\r\n\r\n    // makeCalendar(new Date(tempdate.setMonth(tempdate.getMonth() - 1)));\r\n  };\r\n\r\n  //다음달이동\r\n  const NextMonthMove = (currentDate) => {\r\n    console.log(\"NextMonthMove() 진입 currentDate ->\", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n\r\n    let afterchangeDate = new Date(tempdate.setMonth(tempdate.getMonth()));\r\n    console.log(\"NextMonthMove() 진입 afterchangeDate ->\", afterchangeDate);\r\n\r\n    let aftercurrentYear = new Date(afterchangeDate).getFullYear();\r\n    console.log(\"NextMonthMove() 진입 aftercurrentYear ->\", aftercurrentYear);\r\n\r\n    let afterchangeMonth = new Date(afterchangeDate).getMonth() + 1;\r\n    afterchangeMonth =\r\n      afterchangeMonth < 10 ? \"0\" + afterchangeMonth : afterchangeMonth;\r\n    console.log(\"NextMonthMove() 진입 afterchangeMonth ->\", afterchangeMonth);\r\n\r\n    const conveyNext = `${aftercurrentYear}-${afterchangeMonth}-01`;\r\n    navigate(`?year=${aftercurrentYear}&month=${afterchangeMonth}`);\r\n\r\n    //makeCalendar(conveyNext);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {\" \"}\r\n      <section className=\"py-5\">\r\n        <div className=\"calrap\" style={{ margin: \"0 auto\" }}>\r\n          <div className=\"calheader\">\r\n            <div className=\"calbtn calprevDay\">\r\n              <button onClick={() => BeforeMonthMove(currentDate)}>이전</button>\r\n            </div>\r\n            <h2 className=\"caldateTitle\">\r\n              {currentYear}년 {currentMonth}월\r\n            </h2>\r\n            <div className=\"calbtn calnextDay\">\r\n              <button onClick={() => NextMonthMove(currentDate)}>이후</button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <h6 style={{ textAlign: \"right\", color: \"tomato\" }}>\r\n            <i>일자 클릭시 식단등록페이지로 이동합니다!</i>\r\n          </h6>\r\n          <br />\r\n\r\n          <div className=\"calgrid caldateHead\">\r\n            <div key={\"0\"}>일</div>\r\n            <div key={\"1\"}>월</div>\r\n            <div key={\"2\"}>화</div>\r\n            <div key={\"3\"}>수</div>\r\n            <div key={\"4\"}>목</div>\r\n            <div key={\"5\"}>금</div>\r\n            <div key={\"6\"}>토</div>\r\n          </div>\r\n\r\n          <div className=\"calgrid caldateBoard\">\r\n            {beforeDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n\r\n            {dateItem.map((i, index) => (\r\n              <div key={index}>\r\n                {i.diet.length !== 0 ? (\r\n                  <>\r\n                    <Link\r\n                      to={`../create/${i.dateobject}`}\r\n                      style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                    >\r\n                      {i.dateitem}\r\n                    </Link>\r\n                    &nbsp;\r\n                    <Link\r\n                      to={`../readall/${i.dateobject}`}\r\n                      style={{ textDecoration: \"none\", color: \"black\" }}\r\n                    >\r\n                      &nbsp;&nbsp;모두보기\r\n                    </Link>\r\n                    <CalendarItem key={index} i={i} />\r\n                  </>\r\n                ) : (\r\n                  <Link\r\n                    to={`../create/${i.dateobject}`}\r\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  >\r\n                    {i.dateitem}\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            ))}\r\n            {afterDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DietListComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}