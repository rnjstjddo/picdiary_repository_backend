{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getExerciseListAsync, postExerciseAsync, patchExerciseAsync, deleteExerciseAsync } from \"../slices/exerciseSlice\";\nimport { replace, useNavigate } from \"react-router-dom\";\nconst useCustomExercise = () => {\n  _s();\n  const exerciseState = useSelector(state => state.exerciseSlice);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const postExerciseC = ({\n    diaryParam,\n    picture\n  }) => {\n    const payload = dispatch(postExerciseAsync({\n      diaryParam,\n      picture\n    }));\n    return payload; //thunk후 액션\n  };\n\n  //\n  const getExerciseListC = async () => {\n    await dispatch(getExerciseListAsync());\n  };\n\n  //수정\n  const patchExerciseC = ({\n    exerciseParam\n  }) => {\n    const payload = dispatch(patchExerciseAsync({\n      exerciseParam\n    }));\n    return payload; //thunk에서 받은 액션결과전달\n  };\n  const moveToExerciseRead = dateobject => {\n    navigate({\n      pathname: `../read/${dateobject}`\n    });\n  };\n  const moveToExerciseList = () => {\n    navigate({\n      pathname: \"../\",\n      replace: \"true\"\n    });\n  };\n  const moveToExerciseModify = ({\n    dateobject,\n    whenchoose\n  }) => {\n    navigate({\n      pathname: `../modify/${dateobject}/${whenchoose}`\n    });\n  };\n  const moveToExerciseCreate = dateobject => {\n    navigate({\n      pathname: `../create/${dateobject}`,\n      replace: \"true\"\n    });\n  };\n  const deleteExerciseC = id => {\n    const payload = dispatch(deleteExerciseAsync(id));\n    return payload;\n  };\n  return {\n    exerciseState,\n    postExerciseC,\n    deleteExerciseC,\n    patchExerciseC,\n    moveToExerciseRead,\n    moveToExerciseModify,\n    moveToExerciseCreate,\n    getExerciseListC,\n    moveToExerciseList\n  };\n};\n_s(useCustomExercise, \"tAMCS8fFOcHXbocCw+lqL4sfvn0=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\nexport default useCustomExercise;","map":{"version":3,"names":["useDispatch","useSelector","getExerciseListAsync","postExerciseAsync","patchExerciseAsync","deleteExerciseAsync","replace","useNavigate","useCustomExercise","_s","exerciseState","state","exerciseSlice","dispatch","navigate","postExerciseC","diaryParam","picture","payload","getExerciseListC","patchExerciseC","exerciseParam","moveToExerciseRead","dateobject","pathname","moveToExerciseList","moveToExerciseModify","whenchoose","moveToExerciseCreate","deleteExerciseC","id"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/hooks/useCustomExercise.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getExerciseListAsync,\r\n  postExerciseAsync,\r\n  patchExerciseAsync,\r\n  deleteExerciseAsync,\r\n} from \"../slices/exerciseSlice\";\r\nimport { replace, useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomExercise = () => {\r\n  const exerciseState = useSelector((state) => state.exerciseSlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const postExerciseC = ({ diaryParam, picture }) => {\r\n    const payload = dispatch(postExerciseAsync({ diaryParam, picture }));\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getExerciseListC = async () => {\r\n    await dispatch(getExerciseListAsync());\r\n  };\r\n\r\n  //수정\r\n  const patchExerciseC = ({ exerciseParam }) => {\r\n    const payload = dispatch(patchExerciseAsync({ exerciseParam }));\r\n    return payload; //thunk에서 받은 액션결과전달\r\n  };\r\n\r\n  const moveToExerciseRead = (dateobject) => {\r\n    navigate({ pathname: `../read/${dateobject}` });\r\n  };\r\n\r\n  const moveToExerciseList = () => {\r\n    navigate({ pathname: \"../\", replace: \"true\" });\r\n  };\r\n\r\n  const moveToExerciseModify = ({ dateobject, whenchoose }) => {\r\n    navigate({ pathname: `../modify/${dateobject}/${whenchoose}` });\r\n  };\r\n\r\n  const moveToExerciseCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}`, replace: \"true\" });\r\n  };\r\n\r\n  const deleteExerciseC = (id) => {\r\n    const payload = dispatch(deleteExerciseAsync(id));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    exerciseState,\r\n    postExerciseC,\r\n    deleteExerciseC,\r\n    patchExerciseC,\r\n    moveToExerciseRead,\r\n    moveToExerciseModify,\r\n    moveToExerciseCreate,\r\n    getExerciseListC,\r\n    moveToExerciseList,\r\n  };\r\n};\r\n\r\nexport default useCustomExercise;\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,oBAAoB,EACpBC,iBAAiB,EACjBC,kBAAkB,EAClBC,mBAAmB,QACd,yBAAyB;AAChC,SAASC,OAAO,EAAEC,WAAW,QAAQ,kBAAkB;AAEvD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,aAAa,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,aAAa,CAAC;EAEjE,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,aAAa,GAAGA,CAAC;IAAEC,UAAU;IAAEC;EAAQ,CAAC,KAAK;IACjD,MAAMC,OAAO,GAAGL,QAAQ,CAACV,iBAAiB,CAAC;MAAEa,UAAU;MAAEC;IAAQ,CAAC,CAAC,CAAC;IACpE,OAAOC,OAAO,CAAC,CAAC;EAClB,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMN,QAAQ,CAACX,oBAAoB,CAAC,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAMkB,cAAc,GAAGA,CAAC;IAAEC;EAAc,CAAC,KAAK;IAC5C,MAAMH,OAAO,GAAGL,QAAQ,CAACT,kBAAkB,CAAC;MAAEiB;IAAc,CAAC,CAAC,CAAC;IAC/D,OAAOH,OAAO,CAAC,CAAC;EAClB,CAAC;EAED,MAAMI,kBAAkB,GAAIC,UAAU,IAAK;IACzCT,QAAQ,CAAC;MAAEU,QAAQ,EAAE,WAAWD,UAAU;IAAG,CAAC,CAAC;EACjD,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/BX,QAAQ,CAAC;MAAEU,QAAQ,EAAE,KAAK;MAAElB,OAAO,EAAE;IAAO,CAAC,CAAC;EAChD,CAAC;EAED,MAAMoB,oBAAoB,GAAGA,CAAC;IAAEH,UAAU;IAAEI;EAAW,CAAC,KAAK;IAC3Db,QAAQ,CAAC;MAAEU,QAAQ,EAAE,aAAaD,UAAU,IAAII,UAAU;IAAG,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,oBAAoB,GAAIL,UAAU,IAAK;IAC3CT,QAAQ,CAAC;MAAEU,QAAQ,EAAE,aAAaD,UAAU,EAAE;MAAEjB,OAAO,EAAE;IAAO,CAAC,CAAC;EACpE,CAAC;EAED,MAAMuB,eAAe,GAAIC,EAAE,IAAK;IAC9B,MAAMZ,OAAO,GAAGL,QAAQ,CAACR,mBAAmB,CAACyB,EAAE,CAAC,CAAC;IACjD,OAAOZ,OAAO;EAChB,CAAC;EAED,OAAO;IACLR,aAAa;IACbK,aAAa;IACbc,eAAe;IACfT,cAAc;IACdE,kBAAkB;IAClBI,oBAAoB;IACpBE,oBAAoB;IACpBT,gBAAgB;IAChBM;EACF,CAAC;AACH,CAAC;AAAChB,EAAA,CAvDID,iBAAiB;EAAA,QACCP,WAAW,EAEhBD,WAAW,EAEXO,WAAW;AAAA;AAoD9B,eAAeC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}