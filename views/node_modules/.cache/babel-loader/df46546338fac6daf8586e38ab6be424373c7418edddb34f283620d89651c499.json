{"ast":null,"code":"import axios from \"axios\";\nimport { dfs_xy_conv } from \"../utils/xy\";\n\n//const URL = \"http://apis.data.go.kr/B551182/\";\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0\nconst URL = \"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\";\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\n//?serviceKey=인증키&numOfRows=10&pageNo=1\n//&base_date=20210628&base_time=0600&nx=55&ny=127\n\nconst apiKey = process.env.REACT_APP_API_KEY;\nconsole.log(apiKey);\nexport const weatherapi = async () => {\n  if (navigator.geolocation) {\n    var latitude = null;\n    var longitude = null;\n    function fnresult() {\n      navigator.geolocation.getCurrentPosition(function (pos) {\n        console.log(pos);\n        latitude = pos.coords.latitude;\n        longitude = pos.coords.longitude;\n      });\n      const result = {\n        latitude,\n        longitude\n      };\n      console.log(\"navigator 결과 ->\", result);\n      return result;\n    }\n    latitude = fnresult().latitude;\n    longitude = fnresult().longitude;\n  }\n  if (latitude !== null && longitude !== null) {\n    const xyresult = dfs_xy_conv(\"toXY\", latitude, longitude);\n    var weatherapiresult = null;\n    console.log(\"위경도를 xy변경후 : \", xyresult);\n    const aaAxios = async () => {\n      await axios.get(URL, {\n        params: {\n          serviceKey: apiKey,\n          numOfRows: 10,\n          pageNo: 1,\n          dataType: \"JSON\",\n          base_date: \"20250310\",\n          base_time: \"0600\",\n          nx: xyresult.x,\n          ny: xyresult.y\n        }\n      }).then(result => {\n        console.log(\"openAPI axios 결과\", result);\n        weatherapiresult = result.data.response.body.items.item;\n        console.log(\"openAPI axios weatherapiresult\", weatherapiresult);\n        return weatherapiresult;\n      }).catch(e => {\n        console.log(\"openAPI axios 에러발생\", e);\n      });\n    }; //aaAxios\n    aaAxios();\n  } //if\n};","map":{"version":3,"names":["axios","dfs_xy_conv","URL","apiKey","process","env","REACT_APP_API_KEY","console","log","weatherapi","navigator","geolocation","latitude","longitude","fnresult","getCurrentPosition","pos","coords","result","xyresult","weatherapiresult","aaAxios","get","params","serviceKey","numOfRows","pageNo","dataType","base_date","base_time","nx","x","ny","y","then","data","response","body","items","item","catch","e"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/api/openApi.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { dfs_xy_conv } from \"../utils/xy\";\r\n\r\n//const URL = \"http://apis.data.go.kr/B551182/\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0\r\nconst URL =\r\n  \"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\r\n//?serviceKey=인증키&numOfRows=10&pageNo=1\r\n//&base_date=20210628&base_time=0600&nx=55&ny=127\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\nconsole.log(apiKey);\r\n\r\nexport const weatherapi = async () => {\r\n  if (navigator.geolocation) {\r\n    var latitude = null;\r\n    var longitude = null;\r\n\r\n    function fnresult() {\r\n      navigator.geolocation.getCurrentPosition(function (pos) {\r\n        console.log(pos);\r\n        latitude = pos.coords.latitude;\r\n        longitude = pos.coords.longitude;\r\n      });\r\n      const result = {\r\n        latitude,\r\n        longitude,\r\n      };\r\n      console.log(\"navigator 결과 ->\", result);\r\n      return result;\r\n    }\r\n    latitude = fnresult().latitude;\r\n    longitude = fnresult().longitude;\r\n  }\r\n\r\n  if (latitude !== null && longitude !== null) {\r\n    const xyresult = dfs_xy_conv(\"toXY\", latitude, longitude);\r\n    var weatherapiresult = null;\r\n\r\n    console.log(\"위경도를 xy변경후 : \", xyresult);\r\n    const aaAxios = async () => {\r\n      await axios\r\n        .get(URL, {\r\n          params: {\r\n            serviceKey: apiKey,\r\n            numOfRows: 10,\r\n            pageNo: 1,\r\n            dataType: \"JSON\",\r\n            base_date: \"20250310\",\r\n            base_time: \"0600\",\r\n            nx: xyresult.x,\r\n            ny: xyresult.y,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          console.log(\"openAPI axios 결과\", result);\r\n          weatherapiresult = result.data.response.body.items.item;\r\n          console.log(\"openAPI axios weatherapiresult\", weatherapiresult);\r\n          return weatherapiresult;\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"openAPI axios 에러발생\", e);\r\n        });\r\n    }; //aaAxios\r\n    aaAxios();\r\n  } //if\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;;AAEzC;AACA;AACA,MAAMC,GAAG,GACP,0EAA0E;AAC5E;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC5CC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;AAEnB,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAIC,SAAS,CAACC,WAAW,EAAE;IACzB,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAIC,SAAS,GAAG,IAAI;IAEpB,SAASC,QAAQA,CAAA,EAAG;MAClBJ,SAAS,CAACC,WAAW,CAACI,kBAAkB,CAAC,UAAUC,GAAG,EAAE;QACtDT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;QAChBJ,QAAQ,GAAGI,GAAG,CAACC,MAAM,CAACL,QAAQ;QAC9BC,SAAS,GAAGG,GAAG,CAACC,MAAM,CAACJ,SAAS;MAClC,CAAC,CAAC;MACF,MAAMK,MAAM,GAAG;QACbN,QAAQ;QACRC;MACF,CAAC;MACDN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEU,MAAM,CAAC;MACtC,OAAOA,MAAM;IACf;IACAN,QAAQ,GAAGE,QAAQ,CAAC,CAAC,CAACF,QAAQ;IAC9BC,SAAS,GAAGC,QAAQ,CAAC,CAAC,CAACD,SAAS;EAClC;EAEA,IAAID,QAAQ,KAAK,IAAI,IAAIC,SAAS,KAAK,IAAI,EAAE;IAC3C,MAAMM,QAAQ,GAAGlB,WAAW,CAAC,MAAM,EAAEW,QAAQ,EAAEC,SAAS,CAAC;IACzD,IAAIO,gBAAgB,GAAG,IAAI;IAE3Bb,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEW,QAAQ,CAAC;IACtC,MAAME,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMrB,KAAK,CACRsB,GAAG,CAACpB,GAAG,EAAE;QACRqB,MAAM,EAAE;UACNC,UAAU,EAAErB,MAAM;UAClBsB,SAAS,EAAE,EAAE;UACbC,MAAM,EAAE,CAAC;UACTC,QAAQ,EAAE,MAAM;UAChBC,SAAS,EAAE,UAAU;UACrBC,SAAS,EAAE,MAAM;UACjBC,EAAE,EAAEX,QAAQ,CAACY,CAAC;UACdC,EAAE,EAAEb,QAAQ,CAACc;QACf;MACF,CAAC,CAAC,CACDC,IAAI,CAAEhB,MAAM,IAAK;QAChBX,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEU,MAAM,CAAC;QACvCE,gBAAgB,GAAGF,MAAM,CAACiB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,IAAI;QACvDhC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEY,gBAAgB,CAAC;QAC/D,OAAOA,gBAAgB;MACzB,CAAC,CAAC,CACDoB,KAAK,CAAEC,CAAC,IAAK;QACZlC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEiC,CAAC,CAAC;MACtC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;IACHpB,OAAO,CAAC,CAAC;EACX,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}