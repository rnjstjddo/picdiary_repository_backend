{"ast":null,"code":"import React,{useCallback,useEffect,useLayoutEffect,useState}from\"react\";import{Link,Navigate,useNavigate,useSearchParams}from\"react-router-dom\";import\"../layout/stylesCalendar.css\";import Image from\"react-bootstrap/Image\";import useCustomMove from\"../../hooks/useCustomMove\";import Card from\"react-bootstrap/Card\";import useCustomDiet from\"../../hooks/useCustomDiet\";import useCustomLogin from\"../../hooks/useCustomLogin\";import{getDietList}from\"../../api/dietApi\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const chooseReturn=number=>{console.log(\"DietListComponent.js chooseReturn() 진입 매개변수 => \",number);let result=\"\";for(let n of number){switch(n){case\"1\":return result=\"🥦아침\";case\"2\":return result=\"🍄점심\";case\"3\":return result=\"🧅저녁\";case\"4\":return result=\"🧄간식\";default:return null;}}console.log(result);};const makeCalendar=d=>{console.log(\"makeCalendar() 진입 매개변수 확인 => \",d);let date=new Date(d);const currentYear=new Date(date).getFullYear();console.log(\"makeCalendar() 진입 currentYear -> \",currentYear);const currentMonth=new Date(date).getMonth()+1;console.log(\"makeCalendar() 진입 currentMonth -> \",currentMonth);const firstDay=new Date(date.setDate(1)).getDay();console.log(\"makeCalendar() 진입 firstDay -> \",firstDay);//현재 달력첫째날\nlet calfirst=\"\";function getCalfirst(){calfirst+=`${currentYear}-`;if(currentMonth<10){calfirst+=`0${currentMonth}`;}else{calfirst+=`${currentMonth}`;}//calfirst += `01`\nreturn calfirst;}//calfirst 현재달력첫날\nconst lastDay=new Date(currentYear,currentMonth,0).getDate();console.log(\"lastDay값 ->\"+lastDay);//30\nconst limitDay=firstDay+lastDay;console.log(\"limitDay값 ->\"+limitDay);//31\nconst nextDay=Math.ceil(limitDay/7)*7;console.log(\"nextDay값 ->\"+nextDay);//35 35-31=4칸 빈칸만들어진다.\nreturn{firstDay,lastDay,limitDay,nextDay};};const CalendarItem=props=>{console.log(\"CalendarItem() 진입\");//UserId, content ,createdAt ,id , picture\nconst{diet,dateobject}=props.i;//api서버후 db에서 받은값\nconsole.log(\"DietListComponent.js props diet=> \",diet);console.log(\"DietListComponent.js props dateobject=> \",dateobject);// console.log(\"props.i.diet[0] \", props.i.diet[0]);\n//console.log(\"props.i \", props.i);\nreturn diet.map(i=>/*#__PURE__*/_jsxs(React.Fragment,{children:[i.id&&i.choose===\"1\"&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Link,{to:`../read/${i.choose}/${dateobject}`,style:{textDecoration:\"none\",color:\"black\"},children:[/*#__PURE__*/_jsx(Image,{src:\"/img/cabbage.png\",style:{height:\"20px\",width:\"20px\"}}),\"\\uC544\\uCE68\",/*#__PURE__*/_jsx(\"br\",{})]})}),i.id&&i.choose===\"2\"&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Link,{to:`../read/${i.choose}/${dateobject}`,style:{textDecoration:\"none\",color:\"black\"},children:[/*#__PURE__*/_jsx(Image,{src:\"/img/carrot.png\",style:{height:\"20px\",width:\"20px\"}}),\"\\uC810\\uC2EC\",/*#__PURE__*/_jsx(\"br\",{})]})}),i.id&&i.choose===\"3\"&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Link,{to:`../read/${i.choose}/${dateobject}`,style:{textDecoration:\"none\",color:\"black\"},children:[/*#__PURE__*/_jsx(Image,{src:\"/img/eggplant.png\",style:{height:\"20px\",width:\"20px\"}}),\"\\uC800\\uB141\",/*#__PURE__*/_jsx(\"br\",{})]})}),i.id&&i.choose===\"4\"&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Link,{to:`../read/${i.choose}/${dateobject}`,style:{textDecoration:\"none\",color:\"black\"},children:[/*#__PURE__*/_jsx(Image,{src:\"/img/tomato.png\",style:{height:\"20px\",width:\"20px\"}}),\"\\uAC04\\uC2DD\",/*#__PURE__*/_jsx(\"br\",{})]})})]},i.id));};console.log(\"컴포넌트 밖\");const DietListComponent=()=>{const[searchParams]=useSearchParams();const{moveToCreate}=useCustomMove();const{effectException}=useCustomLogin();const navigate=useNavigate();const[currentMonth,setCurrentMonth]=useState(\"\");const[currentYear,setCurrentYear]=useState(\"\");const[currentDate,setCurrentDate]=useState(\"\");const[fullcurrentDate,setFullCurrentDate]=useState(\"\");const[diet,setDiet]=useState([]);const[searchMonth,setSearchMonth]=useState(0);const[searchYear,setSearchYear]=useState(0);const[beforeDateItemArray,setBeforeDateItemArray]=useState([]);const[afterDateItemArray,setAfterDateItemArray]=useState([]);const[dateItem,setDateItem]=useState([]);const[lastDay,setLastDay]=useState(\"\");const[firstDay,setFirstDay]=useState(\"\");const[nextDay,setNextDay]=useState(\"\");const[limitDay,setLimitDay]=useState(\"\");const[check,setCheck]=useState(0);const[make,setMake]=useState(false);console.log(\"컴포넌트 시작\");let searchParamsYear=searchParams.get(\"year\");let searchParamsMonth=searchParams.get(\"month\");useLayoutEffect(()=>{console.log(\"useLayoutEffect()  진입\");setDateItem(()=>[]);setMake(()=>false);let date=new Date();let basicYear=date.getFullYear();let basicMonth=date.getMonth()+1;basicMonth=basicMonth<10?\"0\"+basicMonth:basicMonth;date=`${basicYear}-${basicMonth}-01`;if(searchParamsYear!==null&&searchParamsMonth!==null){console.log(\"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",searchParamsYear);console.log(\"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",searchParamsMonth);setSearchMonth(()=>Number(searchParamsMonth));setSearchYear(()=>searchParamsYear);date=new Date(`${searchParamsYear}-${searchParamsMonth}-01`);console.log(\"date-> \",date);}console.log(\"useLayoutEffect()  setCurrentDate 넣기전-> \",date);setCurrentDate(()=>date);//2025-03-25\nconst longdate=new Date(date);setCurrentYear(\"\"+longdate.getFullYear());setCurrentMonth(longdate.getMonth()+1);setFullCurrentDate(()=>longdate);//Sat Mar 01 2025 09:00:00 GMT+0900 (한국 표준시)\n},[searchParamsYear,searchParamsMonth]);useEffect(()=>{if(fullcurrentDate!==\"\"){console.log(\"useEffect() fullcurrentDate 존재할경우 =>  \",fullcurrentDate);const{firstDay,nextDay,limitDay,lastDay}=makeCalendar(fullcurrentDate);setLastDay(lastDay);setFirstDay(firstDay);setNextDay(nextDay);setLimitDay(limitDay);}//if\nreturn()=>{console.log(\"useEffect() makeCalendar() 반환변수들 초기화\");setLastDay(()=>\"\");setFirstDay(()=>\"\");setNextDay(()=>\"\");setLimitDay(()=>\"\");};},[fullcurrentDate]);//달력에서 이전빈칸\nuseEffect(()=>{console.log(\"useEffect() 달력 데이터넣기 진입\");if(make===true){console.log(\"useEffect() 달력 데이터넣기 진입 make상태가 true진입\");let dateItem=[];for(let i=1,j=0;i<=lastDay;i++,j++){console.log(\"useEffect() 달력 데이터넣기 for문 진입\");let currentYear=new Date(fullcurrentDate).getFullYear();let currentMonth=new Date(fullcurrentDate).getMonth()+1;currentMonth=currentMonth<10?\"0\"+currentMonth:currentMonth;let ichange=i<10?\"0\"+i:i;let dateobject=`${currentYear}-${currentMonth}-${ichange}`;dateItem[j]={dateitem:i,dateobject:dateobject,diet:diet.filter(a=>a.dateobject===dateobject)};}setDateItem(()=>dateItem);const beforeDateItem=firstDay-0;let beforeDateItemArray=[];if(beforeDateItem!==0){for(let i=1,j=0;i<=beforeDateItem;i++,j++){beforeDateItemArray[j]=i;}}setBeforeDateItemArray(()=>beforeDateItemArray);//달력에서 이후빈칸\nconst afterDateItem=nextDay-limitDay;let afterDateItemArray=[];if(afterDateItem!==0){for(let i=1,j=0;i<=afterDateItem;i++,j++){afterDateItemArray[j]=i;}}setAfterDateItemArray(()=>afterDateItemArray);}},[make]);useEffect(()=>{console.log(\"useEffect() 진입 axios 비동기요청 \");if(currentDate!==\"\"){console.log(\"useEffect() 진입 axios 비동기요청 currentDate 존재할경우 ->\",currentDate);const getDietListEI=async()=>{await getDietList({currentDate}).then(result=>{console.log(\"useEffect() then()진입 \",result);if(result){setDiet(()=>result);}setMake(()=>true);}).catch(err=>{console.log(\"useEffect() catch()진입 \",err);effectException(err);});};//getDiet\ngetDietListEI();}//if\n},[currentDate]);// 이전달 이동\nconst BeforeMonthMove=currentDate=>{console.log(\"BeforeMonthMove() 진입  => \",currentDate);const tempdate=new Date(currentDate);let beforechangeDate=new Date(tempdate.setMonth(tempdate.getMonth()-1));let beforecurrentYear=new Date(beforechangeDate).getFullYear();console.log(\"BeforeMonthMove() 진입 beforecurrentYear => \",beforecurrentYear);let beforechangeMonth=new Date(beforechangeDate).getMonth()+1;beforechangeMonth=beforechangeMonth<10?\"0\"+beforechangeMonth:beforechangeMonth;console.log(\"BeforeMonthMove() 진입 beforechangeMonth => \",beforechangeMonth);navigate(`?year=${beforecurrentYear}&month=${beforechangeMonth}`);};//다음달이동\nconst NextMonthMove=currentDate=>{console.log(\"NextMonthMove() 진입 currentDate ->\",currentDate);const tempdate=new Date(currentDate);let afterchangeDate=new Date(tempdate.setMonth(tempdate.getMonth()));console.log(\"NextMonthMove() 진입 afterchangeDate ->\",afterchangeDate);let aftercurrentYear=new Date(afterchangeDate).getFullYear();console.log(\"NextMonthMove() 진입 aftercurrentYear ->\",aftercurrentYear);let afterchangeMonth=new Date(afterchangeDate).getMonth()+2;afterchangeMonth=afterchangeMonth<10?\"0\"+afterchangeMonth:afterchangeMonth;console.log(\"NextMonthMove() 진입 afterchangeMonth ->\",afterchangeMonth);navigate(`?year=${aftercurrentYear}&month=${afterchangeMonth}`);};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"section\",{className:\"py-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"calrap\",style:{margin:\"0 auto\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"calheader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"calbtn calprevDay\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>BeforeMonthMove(currentDate),children:\"\\uC774\\uC804\"})}),/*#__PURE__*/_jsxs(\"h2\",{className:\"caldateTitle\",children:[currentYear,\"\\uB144 \",currentMonth,\"\\uC6D4\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"calbtn calnextDay\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>NextMonthMove(currentDate),children:\"\\uC774\\uD6C4\"})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h6\",{style:{textAlign:\"right\",color:\"tomato\"},children:/*#__PURE__*/_jsx(\"i\",{children:\"\\uC77C\\uC790 \\uD074\\uB9AD\\uC2DC \\uC2DD\\uB2E8\\uB4F1\\uB85D\\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4!\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"calgrid caldateHead\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\uC77C\"},\"0\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uC6D4\"},\"1\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uD654\"},\"2\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uC218\"},\"3\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uBAA9\"},\"4\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uAE08\"},\"5\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uD1A0\"},\"6\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"calgrid caldateBoard\",children:[beforeDateItemArray.map((i,index)=>/*#__PURE__*/_jsx(\"div\",{},index)),dateItem.map((i,index)=>/*#__PURE__*/_jsx(\"div\",{children:i.diet.length!==0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:`../create/${i.dateobject}`,style:{textDecoration:\"none\",color:\"inherit\"},children:i.dateitem}),\"\\xA0\",/*#__PURE__*/_jsx(Link,{to:`../readall/${i.dateobject}`,style:{textDecoration:\"none\",color:\"black\"},children:\"\\xA0\\xA0\\uBAA8\\uB450\\uBCF4\\uAE30\"}),/*#__PURE__*/_jsx(CalendarItem,{i:i},index)]}):/*#__PURE__*/_jsx(Link,{to:`../create/${i.dateobject}`,style:{textDecoration:\"none\",color:\"inherit\"},children:i.dateitem})},index)),afterDateItemArray.map((i,index)=>/*#__PURE__*/_jsx(\"div\",{},index))]})]})})});};export default DietListComponent;","map":{"version":3,"names":["React","useCallback","useEffect","useLayoutEffect","useState","Link","Navigate","useNavigate","useSearchParams","Image","useCustomMove","Card","useCustomDiet","useCustomLogin","getDietList","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","chooseReturn","number","console","log","result","n","makeCalendar","d","date","Date","currentYear","getFullYear","currentMonth","getMonth","firstDay","setDate","getDay","calfirst","getCalfirst","lastDay","getDate","limitDay","nextDay","Math","ceil","CalendarItem","props","diet","dateobject","i","map","children","id","choose","to","style","textDecoration","color","src","height","width","DietListComponent","searchParams","moveToCreate","effectException","navigate","setCurrentMonth","setCurrentYear","currentDate","setCurrentDate","fullcurrentDate","setFullCurrentDate","setDiet","searchMonth","setSearchMonth","searchYear","setSearchYear","beforeDateItemArray","setBeforeDateItemArray","afterDateItemArray","setAfterDateItemArray","dateItem","setDateItem","setLastDay","setFirstDay","setNextDay","setLimitDay","check","setCheck","make","setMake","searchParamsYear","get","searchParamsMonth","basicYear","basicMonth","Number","longdate","j","ichange","dateitem","filter","a","beforeDateItem","afterDateItem","getDietListEI","then","catch","err","BeforeMonthMove","tempdate","beforechangeDate","setMonth","beforecurrentYear","beforechangeMonth","NextMonthMove","afterchangeDate","aftercurrentYear","afterchangeMonth","className","margin","onClick","textAlign","index","length"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/components/diet/DietListComponent.js"],"sourcesContent":["import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { Link, Navigate, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport \"../layout/stylesCalendar.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport useCustomDiet from \"../../hooks/useCustomDiet\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { getDietList } from \"../../api/dietApi\";\r\n\r\nconst chooseReturn = (number) => {\r\n  console.log(\"DietListComponent.js chooseReturn() 진입 매개변수 => \", number);\r\n  let result = \"\";\r\n  for (let n of number) {\r\n    switch (n) {\r\n      case \"1\":\r\n        return (result = \"🥦아침\");\r\n      case \"2\":\r\n        return (result = \"🍄점심\");\r\n      case \"3\":\r\n        return (result = \"🧅저녁\");\r\n      case \"4\":\r\n        return (result = \"🧄간식\");\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  console.log(result);\r\n};\r\n\r\nconst makeCalendar = (d) => {\r\n  console.log(\"makeCalendar() 진입 매개변수 확인 => \", d);\r\n  let date = new Date(d);\r\n  const currentYear = new Date(date).getFullYear();\r\n  console.log(\"makeCalendar() 진입 currentYear -> \", currentYear);\r\n\r\n  const currentMonth = new Date(date).getMonth() + 1;\r\n  console.log(\"makeCalendar() 진입 currentMonth -> \", currentMonth);\r\n  const firstDay = new Date(date.setDate(1)).getDay();\r\n  console.log(\"makeCalendar() 진입 firstDay -> \", firstDay);\r\n\r\n  //현재 달력첫째날\r\n  let calfirst = \"\";\r\n  function getCalfirst() {\r\n    calfirst += `${currentYear}-`;\r\n\r\n    if (currentMonth < 10) {\r\n      calfirst += `0${currentMonth}`;\r\n    } else {\r\n      calfirst += `${currentMonth}`;\r\n    }\r\n    //calfirst += `01`\r\n    return calfirst;\r\n  } //calfirst 현재달력첫날\r\n\r\n  const lastDay = new Date(currentYear, currentMonth, 0).getDate();\r\n  console.log(\"lastDay값 ->\" + lastDay); //30\r\n  const limitDay = firstDay + lastDay;\r\n  console.log(\"limitDay값 ->\" + limitDay); //31\r\n  const nextDay = Math.ceil(limitDay / 7) * 7;\r\n  console.log(\"nextDay값 ->\" + nextDay); //35 35-31=4칸 빈칸만들어진다.\r\n\r\n  return { firstDay, lastDay, limitDay, nextDay };\r\n};\r\n\r\nconst CalendarItem = (props) => {\r\n  console.log(\"CalendarItem() 진입\");\r\n\r\n  //UserId, content ,createdAt ,id , picture\r\n  const { diet, dateobject } = props.i; //api서버후 db에서 받은값\r\n  console.log(\"DietListComponent.js props diet=> \", diet);\r\n  console.log(\"DietListComponent.js props dateobject=> \", dateobject);\r\n\r\n  // console.log(\"props.i.diet[0] \", props.i.diet[0]);\r\n  //console.log(\"props.i \", props.i);\r\n  return diet.map((i) => (\r\n    <React.Fragment key={i.id}>\r\n      {i.id && i.choose === \"1\" && (\r\n        <>\r\n          <Link\r\n            to={`../read/${i.choose}/${dateobject}`}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n          >\r\n            <Image\r\n              src=\"/img/cabbage.png\"\r\n              style={{ height: \"20px\", width: \"20px\" }}\r\n            />\r\n            아침\r\n            <br />\r\n          </Link>\r\n        </>\r\n      )}\r\n      {i.id && i.choose === \"2\" && (\r\n        <>\r\n          <Link\r\n            to={`../read/${i.choose}/${dateobject}`}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n          >\r\n            <Image\r\n              src=\"/img/carrot.png\"\r\n              style={{ height: \"20px\", width: \"20px\" }}\r\n            />\r\n            점심\r\n            <br />\r\n          </Link>\r\n        </>\r\n      )}\r\n      {i.id && i.choose === \"3\" && (\r\n        <>\r\n          <Link\r\n            to={`../read/${i.choose}/${dateobject}`}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n          >\r\n            <Image\r\n              src=\"/img/eggplant.png\"\r\n              style={{ height: \"20px\", width: \"20px\" }}\r\n            />\r\n            저녁\r\n            <br />\r\n          </Link>\r\n        </>\r\n      )}\r\n      {i.id && i.choose === \"4\" && (\r\n        <>\r\n          <Link\r\n            to={`../read/${i.choose}/${dateobject}`}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n          >\r\n            <Image\r\n              src=\"/img/tomato.png\"\r\n              style={{ height: \"20px\", width: \"20px\" }}\r\n            />\r\n            간식\r\n            <br />\r\n          </Link>\r\n        </>\r\n      )}\r\n    </React.Fragment>\r\n  ));\r\n};\r\nconsole.log(\"컴포넌트 밖\");\r\n\r\nconst DietListComponent = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const { moveToCreate } = useCustomMove();\r\n  const { effectException } = useCustomLogin();\r\n  const navigate = useNavigate();\r\n\r\n  const [currentMonth, setCurrentMonth] = useState(\"\");\r\n  const [currentYear, setCurrentYear] = useState(\"\");\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [fullcurrentDate, setFullCurrentDate] = useState(\"\");\r\n\r\n  const [diet, setDiet] = useState([]);\r\n\r\n  const [searchMonth, setSearchMonth] = useState(0);\r\n  const [searchYear, setSearchYear] = useState(0);\r\n  const [beforeDateItemArray, setBeforeDateItemArray] = useState([]);\r\n  const [afterDateItemArray, setAfterDateItemArray] = useState([]);\r\n  const [dateItem, setDateItem] = useState([]);\r\n  const [lastDay, setLastDay] = useState(\"\");\r\n  const [firstDay, setFirstDay] = useState(\"\");\r\n  const [nextDay, setNextDay] = useState(\"\");\r\n  const [limitDay, setLimitDay] = useState(\"\");\r\n  const [check, setCheck] = useState(0);\r\n  const [make, setMake] = useState(false);\r\n\r\n  console.log(\"컴포넌트 시작\");\r\n\r\n  let searchParamsYear = searchParams.get(\"year\");\r\n  let searchParamsMonth = searchParams.get(\"month\");\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(\"useLayoutEffect()  진입\");\r\n    setDateItem(() => []);\r\n    setMake(() => false);\r\n    let date = new Date();\r\n\r\n    let basicYear = date.getFullYear();\r\n    let basicMonth = date.getMonth() + 1;\r\n    basicMonth = basicMonth < 10 ? \"0\" + basicMonth : basicMonth;\r\n    date = `${basicYear}-${basicMonth}-01`;\r\n\r\n    if (searchParamsYear !== null && searchParamsMonth !== null) {\r\n      console.log(\r\n        \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n        searchParamsYear\r\n      );\r\n      console.log(\r\n        \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n        searchParamsMonth\r\n      );\r\n      setSearchMonth(() => Number(searchParamsMonth));\r\n      setSearchYear(() => searchParamsYear);\r\n\r\n      date = new Date(`${searchParamsYear}-${searchParamsMonth}-01`);\r\n      console.log(\"date-> \", date);\r\n    }\r\n    console.log(\"useLayoutEffect()  setCurrentDate 넣기전-> \", date);\r\n\r\n    setCurrentDate(() => date); //2025-03-25\r\n    const longdate = new Date(date);\r\n    setCurrentYear(\"\" + longdate.getFullYear());\r\n    setCurrentMonth(longdate.getMonth() + 1);\r\n    setFullCurrentDate(() => longdate); //Sat Mar 01 2025 09:00:00 GMT+0900 (한국 표준시)\r\n  }, [searchParamsYear, searchParamsMonth]);\r\n\r\n  useEffect(() => {\r\n    if (fullcurrentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() fullcurrentDate 존재할경우 =>  \",\r\n        fullcurrentDate\r\n      );\r\n\r\n      const { firstDay, nextDay, limitDay, lastDay } =\r\n        makeCalendar(fullcurrentDate);\r\n\r\n      setLastDay(lastDay);\r\n      setFirstDay(firstDay);\r\n      setNextDay(nextDay);\r\n      setLimitDay(limitDay);\r\n    } //if\r\n\r\n    return () => {\r\n      console.log(\"useEffect() makeCalendar() 반환변수들 초기화\");\r\n\r\n      setLastDay(() => \"\");\r\n      setFirstDay(() => \"\");\r\n      setNextDay(() => \"\");\r\n      setLimitDay(() => \"\");\r\n    };\r\n  }, [fullcurrentDate]);\r\n\r\n  //달력에서 이전빈칸\r\n  useEffect(() => {\r\n    console.log(\"useEffect() 달력 데이터넣기 진입\");\r\n\r\n    if (make === true) {\r\n      console.log(\"useEffect() 달력 데이터넣기 진입 make상태가 true진입\");\r\n\r\n      let dateItem = [];\r\n\r\n      for (let i = 1, j = 0; i <= lastDay; i++, j++) {\r\n        console.log(\"useEffect() 달력 데이터넣기 for문 진입\");\r\n\r\n        let currentYear = new Date(fullcurrentDate).getFullYear();\r\n        let currentMonth = new Date(fullcurrentDate).getMonth() + 1;\r\n        currentMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\r\n        let ichange = i < 10 ? \"0\" + i : i;\r\n        let dateobject = `${currentYear}-${currentMonth}-${ichange}`;\r\n\r\n        dateItem[j] = {\r\n          dateitem: i,\r\n          dateobject: dateobject,\r\n          diet: diet.filter((a) => a.dateobject === dateobject),\r\n        };\r\n      }\r\n      setDateItem(() => dateItem);\r\n\r\n      const beforeDateItem = firstDay - 0;\r\n      let beforeDateItemArray = [];\r\n\r\n      if (beforeDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= beforeDateItem; i++, j++) {\r\n          beforeDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setBeforeDateItemArray(() => beforeDateItemArray);\r\n\r\n      //달력에서 이후빈칸\r\n      const afterDateItem = nextDay - limitDay;\r\n      let afterDateItemArray = [];\r\n\r\n      if (afterDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= afterDateItem; i++, j++) {\r\n          afterDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setAfterDateItemArray(() => afterDateItemArray);\r\n    }\r\n  }, [make]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect() 진입 axios 비동기요청 \");\r\n    if (currentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() 진입 axios 비동기요청 currentDate 존재할경우 ->\",\r\n        currentDate\r\n      );\r\n\r\n      const getDietListEI = async () => {\r\n        await getDietList({ currentDate })\r\n          .then((result) => {\r\n            console.log(\"useEffect() then()진입 \", result);\r\n\r\n            if (result) {\r\n              setDiet(() => result);\r\n            }\r\n            setMake(() => true);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"useEffect() catch()진입 \", err);\r\n            effectException(err);\r\n          });\r\n      }; //getDiet\r\n      getDietListEI();\r\n    } //if\r\n  }, [currentDate]);\r\n\r\n  // 이전달 이동\r\n  const BeforeMonthMove = (currentDate) => {\r\n    console.log(\"BeforeMonthMove() 진입  => \", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n    let beforechangeDate = new Date(tempdate.setMonth(tempdate.getMonth() - 1));\r\n    let beforecurrentYear = new Date(beforechangeDate).getFullYear();\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforecurrentYear => \",\r\n      beforecurrentYear\r\n    );\r\n\r\n    let beforechangeMonth = new Date(beforechangeDate).getMonth() + 1;\r\n    beforechangeMonth =\r\n      beforechangeMonth < 10 ? \"0\" + beforechangeMonth : beforechangeMonth;\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforechangeMonth => \",\r\n      beforechangeMonth\r\n    );\r\n\r\n    navigate(`?year=${beforecurrentYear}&month=${beforechangeMonth}`);\r\n  };\r\n\r\n  //다음달이동\r\n  const NextMonthMove = (currentDate) => {\r\n    console.log(\"NextMonthMove() 진입 currentDate ->\", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n\r\n    let afterchangeDate = new Date(tempdate.setMonth(tempdate.getMonth()));\r\n    console.log(\"NextMonthMove() 진입 afterchangeDate ->\", afterchangeDate);\r\n\r\n    let aftercurrentYear = new Date(afterchangeDate).getFullYear();\r\n    console.log(\"NextMonthMove() 진입 aftercurrentYear ->\", aftercurrentYear);\r\n\r\n    let afterchangeMonth = new Date(afterchangeDate).getMonth() + 2;\r\n    afterchangeMonth =\r\n      afterchangeMonth < 10 ? \"0\" + afterchangeMonth : afterchangeMonth;\r\n    console.log(\"NextMonthMove() 진입 afterchangeMonth ->\", afterchangeMonth);\r\n\r\n    navigate(`?year=${aftercurrentYear}&month=${afterchangeMonth}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {}\r\n      <section className=\"py-5\">\r\n        <div className=\"calrap\" style={{ margin: \"0 auto\" }}>\r\n          <div className=\"calheader\">\r\n            <div className=\"calbtn calprevDay\">\r\n              <button onClick={() => BeforeMonthMove(currentDate)}>이전</button>\r\n            </div>\r\n            <h2 className=\"caldateTitle\">\r\n              {currentYear}년 {currentMonth}월\r\n            </h2>\r\n            <div className=\"calbtn calnextDay\">\r\n              <button onClick={() => NextMonthMove(currentDate)}>이후</button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <h6 style={{ textAlign: \"right\", color: \"tomato\" }}>\r\n            <i>일자 클릭시 식단등록페이지로 이동합니다!</i>\r\n          </h6>\r\n          <br />\r\n\r\n          <div className=\"calgrid caldateHead\">\r\n            <div key={\"0\"}>일</div>\r\n            <div key={\"1\"}>월</div>\r\n            <div key={\"2\"}>화</div>\r\n            <div key={\"3\"}>수</div>\r\n            <div key={\"4\"}>목</div>\r\n            <div key={\"5\"}>금</div>\r\n            <div key={\"6\"}>토</div>\r\n          </div>\r\n\r\n          <div className=\"calgrid caldateBoard\">\r\n            {beforeDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n\r\n            {dateItem.map((i, index) => (\r\n              <div key={index}>\r\n                {i.diet.length !== 0 ? (\r\n                  <>\r\n                    <Link\r\n                      to={`../create/${i.dateobject}`}\r\n                      style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                    >\r\n                      {i.dateitem}\r\n                    </Link>\r\n                    &nbsp;\r\n                    <Link\r\n                      to={`../readall/${i.dateobject}`}\r\n                      style={{ textDecoration: \"none\", color: \"black\" }}\r\n                    >\r\n                      &nbsp;&nbsp;모두보기\r\n                    </Link>\r\n                    <CalendarItem key={index} i={i} />\r\n                  </>\r\n                ) : (\r\n                  <Link\r\n                    to={`../create/${i.dateobject}`}\r\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  >\r\n                    {i.dateitem}\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            ))}\r\n            {afterDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DietListComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}