{"ast":null,"code":"import{useDispatch,useSelector}from\"react-redux\";import{createSearchParams,Navigate,useNavigate}from\"react-router-dom\";import{joinPostAsync,loginPostAsync,logout,logoutGetAsync,forSessionAsync}from\"../slices/loginSlice\";import{removeCookie}from\"../util/cookieUtil\";import{jsx as _jsx}from\"react/jsx-runtime\";const useCustomLogin=()=>{const navigate=useNavigate();const dispatch=useDispatch();const loginState=useSelector(state=>state.loginSlice);//  console.log(\"loginState -> \", loginState);\nconst isLogin=loginState.email!==\"\"?true:false;const forSession=async()=>{const result=await dispatch(forSessionAsync());//리듀서함수에서 return값\nreturn result;};const doLogin=async loginParam=>{const action=await dispatch(loginPostAsync(loginParam));console.log(\"useCustomLogin커스텀훅의 doLogin() 진입후 axios 비동기 후 액션데이터 => \",action.payload);return action.payload;};const doJoin=async joinParam=>{const action=await dispatch(joinPostAsync(joinParam));console.log(\"useCustomLogin커스텀훅의 doJoin() 진입후 axios 비동기 후 액션데이터 => \",action.payload);return action.payload;//리듀서로이동\n};const doLogout=async()=>{//    dispatch(logout());\ndispatch(logoutGetAsync());};const moveToPath=path=>{navigate({pathname:path},{replace:true});};const moveToLogin=()=>{navigate({pathname:\"/member/login\"},{replace:true});};const moveToJoin=()=>{navigate({pathname:\"/member/join\"},{replace:true});};const moveToLoginReturn=()=>{return/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/member/login\"});};//useEffect에서 로그인하지 않아서 에러시\nconst effectException=ex=>{console.log(\"useCustomLogin.js effectException 함수 진입 \",ex);};//추가\nconst exceptionHandle=ex=>{console.log(\"exceptionHandle() \",ex);if(!isLogin){removeCookie(\"member\");removeCookie(\"accessToken\");return navigate({pathname:\"/login\"},{replace:true});}if(ex.response&&ex.response.data){const errorMsg=ex.response.data.error;const errorStr=createSearchParams({error:errorMsg}).toString();// if (\n//   errorMsg === \"REQUIRE_LOGIN\" ||\n//   errorMsg === \"ERROR_ACCESS_TOKEN\" ||\n//   ex.response.data.code === 401\n// ) {\n//   alert(\"로그인이 필요합니다.\");\n//   removeCookie(\"member\");\n//   removeCookie(\"accessToken\");\n//   navigate({ pathname: \"/login\", search: errorStr });\n//   return;\n// }\n// if (ex.response.data.error === \"ERROR_ACCESSDENIED\") {\n//   alert(\"권한이 없습니다.\");\n//   removeCookie(\"member\");\n//   removeCookie(\"accessToken\");\n//   navigate({ pathname: \"/login\", search: errorStr });\n//   return;\n// }\n}//추가\nif(ex.name===\"ERR_BAD_RESPONSE\"||ex.code===\"AxiosError\"||ex.code===\"ERR_BAD_RESPONSE\"||ex.message===\"Network Error\"){navigate({pathname:\"/\"},{replace:true});return;}if(isLogin&&ex!==null){navigate({pathname:\"/\"},{replace:true});return;}};return{loginState,isLogin,doLogin,doLogout,moveToPath,moveToLogin,moveToLoginReturn,moveToJoin,doJoin,exceptionHandle,//useEffect내에서 jwt에러\neffectException,//세션생성\nforSession};};export default useCustomLogin;","map":{"version":3,"names":["useDispatch","useSelector","createSearchParams","Navigate","useNavigate","joinPostAsync","loginPostAsync","logout","logoutGetAsync","forSessionAsync","removeCookie","jsx","_jsx","useCustomLogin","navigate","dispatch","loginState","state","loginSlice","isLogin","email","forSession","result","doLogin","loginParam","action","console","log","payload","doJoin","joinParam","doLogout","moveToPath","path","pathname","replace","moveToLogin","moveToJoin","moveToLoginReturn","to","effectException","ex","exceptionHandle","response","data","errorMsg","error","errorStr","toString","name","code","message"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/hooks/useCustomLogin.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { createSearchParams, Navigate, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  joinPostAsync,\r\n  loginPostAsync,\r\n  logout,\r\n  logoutGetAsync,\r\n  forSessionAsync,\r\n} from \"../slices/loginSlice\";\r\nimport { removeCookie } from \"../util/cookieUtil\";\r\n\r\nconst useCustomLogin = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const loginState = useSelector((state) => state.loginSlice);\r\n\r\n  //  console.log(\"loginState -> \", loginState);\r\n  const isLogin = loginState.email !== \"\" ? true : false;\r\n\r\n  const forSession = async () => {\r\n    const result = await dispatch(forSessionAsync()); //리듀서함수에서 return값\r\n    return result;\r\n  };\r\n\r\n  const doLogin = async (loginParam) => {\r\n    const action = await dispatch(loginPostAsync(loginParam));\r\n    console.log(\r\n      \"useCustomLogin커스텀훅의 doLogin() 진입후 axios 비동기 후 액션데이터 => \",\r\n      action.payload\r\n    );\r\n    return action.payload;\r\n  };\r\n\r\n  const doJoin = async (joinParam) => {\r\n    const action = await dispatch(joinPostAsync(joinParam));\r\n    console.log(\r\n      \"useCustomLogin커스텀훅의 doJoin() 진입후 axios 비동기 후 액션데이터 => \",\r\n      action.payload\r\n    );\r\n    return action.payload; //리듀서로이동\r\n  };\r\n  const doLogout = async () => {\r\n    //    dispatch(logout());\r\n    dispatch(logoutGetAsync());\r\n  };\r\n\r\n  const moveToPath = (path) => {\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    navigate({ pathname: \"/member/login\" }, { replace: true });\r\n  };\r\n\r\n  const moveToJoin = () => {\r\n    navigate({ pathname: \"/member/join\" }, { replace: true });\r\n  };\r\n\r\n  const moveToLoginReturn = () => {\r\n    return <Navigate replace to=\"/member/login\" />;\r\n  };\r\n\r\n  //useEffect에서 로그인하지 않아서 에러시\r\n  const effectException = (ex) => {\r\n    console.log(\"useCustomLogin.js effectException 함수 진입 \", ex);\r\n  };\r\n\r\n  //추가\r\n  const exceptionHandle = (ex) => {\r\n    console.log(\"exceptionHandle() \", ex);\r\n\r\n    if (!isLogin) {\r\n      removeCookie(\"member\");\r\n      removeCookie(\"accessToken\");\r\n\r\n      return navigate({ pathname: \"/login\" }, { replace: true });\r\n    }\r\n\r\n    if (ex.response && ex.response.data) {\r\n      const errorMsg = ex.response.data.error;\r\n\r\n      const errorStr = createSearchParams({ error: errorMsg }).toString();\r\n\r\n      // if (\r\n      //   errorMsg === \"REQUIRE_LOGIN\" ||\r\n      //   errorMsg === \"ERROR_ACCESS_TOKEN\" ||\r\n      //   ex.response.data.code === 401\r\n      // ) {\r\n      //   alert(\"로그인이 필요합니다.\");\r\n      //   removeCookie(\"member\");\r\n      //   removeCookie(\"accessToken\");\r\n      //   navigate({ pathname: \"/login\", search: errorStr });\r\n      //   return;\r\n      // }\r\n\r\n      // if (ex.response.data.error === \"ERROR_ACCESSDENIED\") {\r\n      //   alert(\"권한이 없습니다.\");\r\n      //   removeCookie(\"member\");\r\n      //   removeCookie(\"accessToken\");\r\n\r\n      //   navigate({ pathname: \"/login\", search: errorStr });\r\n      //   return;\r\n      // }\r\n    }\r\n\r\n    //추가\r\n    if (\r\n      ex.name === \"ERR_BAD_RESPONSE\" ||\r\n      ex.code === \"AxiosError\" ||\r\n      ex.code === \"ERR_BAD_RESPONSE\" ||\r\n      ex.message === \"Network Error\"\r\n    ) {\r\n      navigate({ pathname: \"/\" }, { replace: true });\r\n      return;\r\n    }\r\n\r\n    if (isLogin && ex !== null) {\r\n      navigate({ pathname: \"/\" }, { replace: true });\r\n      return;\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    doLogin,\r\n    doLogout,\r\n    moveToPath,\r\n    moveToLogin,\r\n    moveToLoginReturn,\r\n    moveToJoin,\r\n    doJoin,\r\n    exceptionHandle,\r\n    //useEffect내에서 jwt에러\r\n    effectException,\r\n    //세션생성\r\n    forSession,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}