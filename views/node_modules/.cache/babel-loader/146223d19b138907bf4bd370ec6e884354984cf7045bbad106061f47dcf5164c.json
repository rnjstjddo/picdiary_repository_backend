{"ast":null,"code":"/** 위도, 경도를 x,y 격자 포인트로 변경 */var RE=6371.00877;// 지구 반경(km)\nvar GRID=5.0;// 격자 간격(km)\nvar SLAT1=30.0;// 투영 위도1(degree)\nvar SLAT2=60.0;// 투영 위도2(degree)\nvar OLON=126.0;// 기준점 경도(degree)\nvar OLAT=38.0;// 기준점 위도(degree)\nvar XO=43;// 기준점 X좌표(GRID)\nvar YO=136;// 기1준점 Y좌표(GRID)\n// LCC DFS 좌표변환 ( code : \"toXY\"(위경도->좌표, v1:위도, v2:경도), \"toLL\"(좌표->위경도,v1:x, v2:y) )\nexport const dfs_xy_conv=(code,v1,v2)=>{// LCC DFS 좌표변환을 위한 기초 자료\nconsole.log(\" dfs_xy_conv 함수진입\");var DEGRAD=Math.PI/180.0;var RADDEG=180.0/Math.PI;var re=RE/GRID;var slat1=SLAT1*DEGRAD;var slat2=SLAT2*DEGRAD;var olon=OLON*DEGRAD;var olat=OLAT*DEGRAD;var sn=Math.tan(Math.PI*0.25+slat2*0.5)/Math.tan(Math.PI*0.25+slat1*0.5);sn=Math.log(Math.cos(slat1)/Math.cos(slat2))/Math.log(sn);var sf=Math.tan(Math.PI*0.25+slat1*0.5);sf=Math.pow(sf,sn)*Math.cos(slat1)/sn;var ro=Math.tan(Math.PI*0.25+olat*0.5);ro=re*sf/Math.pow(ro,sn);var rs={};if(code==\"toXY\"){rs[\"lat\"]=v1;rs[\"lng\"]=v2;var ra=Math.tan(Math.PI*0.25+v1*DEGRAD*0.5);ra=re*sf/Math.pow(ra,sn);var theta=v2*DEGRAD-olon;if(theta>Math.PI)theta-=2.0*Math.PI;if(theta<-Math.PI)theta+=2.0*Math.PI;theta*=sn;rs[\"x\"]=Math.floor(ra*Math.sin(theta)+XO+0.5);rs[\"y\"]=Math.floor(ro-ra*Math.cos(theta)+YO+0.5);}else{rs[\"x\"]=v1;rs[\"y\"]=v2;var xn=v1-XO;var yn=ro-v2+YO;ra=Math.sqrt(xn*xn+yn*yn);if(sn<0.0)return-ra;var alat=Math.pow(re*sf/ra,1.0/sn);alat=2.0*Math.atan(alat)-Math.PI*0.5;if(Math.abs(xn)<=0.0){theta=0.0;}else{if(Math.abs(yn)<=0.0){theta=Math.PI*0.5;if(xn<0.0)return-theta;}else theta=Math.atan2(xn,yn);}var alon=theta/sn+olon;rs[\"lat\"]=alat*RADDEG;rs[\"lng\"]=alon*RADDEG;}return rs;};","map":{"version":3,"names":["RE","GRID","SLAT1","SLAT2","OLON","OLAT","XO","YO","dfs_xy_conv","code","v1","v2","console","log","DEGRAD","Math","PI","RADDEG","re","slat1","slat2","olon","olat","sn","tan","cos","sf","pow","ro","rs","ra","theta","floor","sin","xn","yn","sqrt","alat","atan","abs","atan2","alon"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/utils/xy.js"],"sourcesContent":["/** 위도, 경도를 x,y 격자 포인트로 변경 */\r\nvar RE = 6371.00877; // 지구 반경(km)\r\nvar GRID = 5.0; // 격자 간격(km)\r\nvar SLAT1 = 30.0; // 투영 위도1(degree)\r\nvar SLAT2 = 60.0; // 투영 위도2(degree)\r\nvar OLON = 126.0; // 기준점 경도(degree)\r\nvar OLAT = 38.0; // 기준점 위도(degree)\r\nvar XO = 43; // 기준점 X좌표(GRID)\r\nvar YO = 136; // 기1준점 Y좌표(GRID)\r\n\r\n// LCC DFS 좌표변환 ( code : \"toXY\"(위경도->좌표, v1:위도, v2:경도), \"toLL\"(좌표->위경도,v1:x, v2:y) )\r\nexport const dfs_xy_conv = (code, v1, v2) => {\r\n  // LCC DFS 좌표변환을 위한 기초 자료\r\n  console.log(\" dfs_xy_conv 함수진입\");\r\n  var DEGRAD = Math.PI / 180.0;\r\n  var RADDEG = 180.0 / Math.PI;\r\n\r\n  var re = RE / GRID;\r\n  var slat1 = SLAT1 * DEGRAD;\r\n  var slat2 = SLAT2 * DEGRAD;\r\n  var olon = OLON * DEGRAD;\r\n  var olat = OLAT * DEGRAD;\r\n\r\n  var sn =\r\n    Math.tan(Math.PI * 0.25 + slat2 * 0.5) /\r\n    Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\r\n  var sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sf = (Math.pow(sf, sn) * Math.cos(slat1)) / sn;\r\n  var ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\r\n  ro = (re * sf) / Math.pow(ro, sn);\r\n  var rs = {};\r\n  if (code == \"toXY\") {\r\n    rs[\"lat\"] = v1;\r\n    rs[\"lng\"] = v2;\r\n    var ra = Math.tan(Math.PI * 0.25 + v1 * DEGRAD * 0.5);\r\n    ra = (re * sf) / Math.pow(ra, sn);\r\n    var theta = v2 * DEGRAD - olon;\r\n    if (theta > Math.PI) theta -= 2.0 * Math.PI;\r\n    if (theta < -Math.PI) theta += 2.0 * Math.PI;\r\n    theta *= sn;\r\n    rs[\"x\"] = Math.floor(ra * Math.sin(theta) + XO + 0.5);\r\n    rs[\"y\"] = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\r\n  } else {\r\n    rs[\"x\"] = v1;\r\n    rs[\"y\"] = v2;\r\n    var xn = v1 - XO;\r\n    var yn = ro - v2 + YO;\r\n    ra = Math.sqrt(xn * xn + yn * yn);\r\n    if (sn < 0.0) return -ra;\r\n    var alat = Math.pow((re * sf) / ra, 1.0 / sn);\r\n    alat = 2.0 * Math.atan(alat) - Math.PI * 0.5;\r\n\r\n    if (Math.abs(xn) <= 0.0) {\r\n      theta = 0.0;\r\n    } else {\r\n      if (Math.abs(yn) <= 0.0) {\r\n        theta = Math.PI * 0.5;\r\n        if (xn < 0.0) return -theta;\r\n      } else theta = Math.atan2(xn, yn);\r\n    }\r\n    var alon = theta / sn + olon;\r\n    rs[\"lat\"] = alat * RADDEG;\r\n    rs[\"lng\"] = alon * RADDEG;\r\n  }\r\n  return rs;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}