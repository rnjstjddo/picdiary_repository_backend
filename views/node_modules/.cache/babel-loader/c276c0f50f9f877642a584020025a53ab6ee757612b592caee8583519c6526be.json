{"ast":null,"code":"import axios from \"axios\";\nimport { dfs_xy_conv } from \"../utils/xy\";\n\n//const URL = \"http://apis.data.go.kr/B551182/\";\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0\nconst URL = \"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\";\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\n//?serviceKey=인증키&numOfRows=10&pageNo=1\n//&base_date=20210628&base_time=0600&nx=55&ny=127\n\nconst apiKey = process.env.REACT_APP_API_KEY;\nconsole.log(apiKey);\nexport const weatherapi = async () => {\n  var weatherapiresult = null;\n  var latitude = null;\n  var longitude = null;\n  if (navigator.geolocation) {\n    const naviResult = navigator.geolocation.getCurrentPosition(function (pos) {\n      console.log(pos);\n      latitude = Math.floor(pos.coords.latitude);\n      longitude = Math.floor(pos.coords.longitude);\n    });\n    console.log(\"naviResult =>\", naviResult);\n  }\n  console.log(\"현재 위치는 : \" + latitude + \", \" + longitude);\n  if (latitude !== null && longitude !== null) {\n    const xyresult = dfs_xy_conv(\"toXY\", latitude, longitude);\n    console.log(\"위경도를 xy변경후 : \", xyresult);\n    const aaAxios = async () => {\n      await axios.get(URL, {\n        params: {\n          serviceKey: apiKey,\n          numOfRows: 10,\n          pageNo: 1,\n          dataType: \"JSON\",\n          base_date: \"20250310\",\n          base_time: \"0600\",\n          nx: xyresult.x,\n          ny: xyresult.y\n        }\n      }).then(result => {\n        console.log(\"openAPI axios 결과\", result);\n        weatherapiresult = result.data.response.body.items.item;\n        console.log(\"openAPI axios weatherapiresult\", weatherapiresult);\n      }).catch(e => {\n        console.log(\"openAPI axios 에러발생\", e);\n      });\n    }; //aaAxios\n    aaAxios();\n  } //if\n};","map":{"version":3,"names":["axios","dfs_xy_conv","URL","apiKey","process","env","REACT_APP_API_KEY","console","log","weatherapi","weatherapiresult","latitude","longitude","navigator","geolocation","naviResult","getCurrentPosition","pos","Math","floor","coords","xyresult","aaAxios","get","params","serviceKey","numOfRows","pageNo","dataType","base_date","base_time","nx","x","ny","y","then","result","data","response","body","items","item","catch","e"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/api/openApi.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { dfs_xy_conv } from \"../utils/xy\";\r\n\r\n//const URL = \"http://apis.data.go.kr/B551182/\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0\r\nconst URL =\r\n  \"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\r\n//?serviceKey=인증키&numOfRows=10&pageNo=1\r\n//&base_date=20210628&base_time=0600&nx=55&ny=127\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\nconsole.log(apiKey);\r\n\r\nexport const weatherapi = async () => {\r\n  var weatherapiresult = null;\r\n\r\n  var latitude = null;\r\n  var longitude = null;\r\n\r\n  if (navigator.geolocation) {\r\n    const naviResult = navigator.geolocation.getCurrentPosition(function (pos) {\r\n      console.log(pos);\r\n      latitude = Math.floor(pos.coords.latitude);\r\n      longitude = Math.floor(pos.coords.longitude);\r\n    });\r\n    console.log(\"naviResult =>\", naviResult);\r\n  }\r\n  console.log(\"현재 위치는 : \" + latitude + \", \" + longitude);\r\n\r\n  if (latitude !== null && longitude !== null) {\r\n    const xyresult = dfs_xy_conv(\"toXY\", latitude, longitude);\r\n\r\n    console.log(\"위경도를 xy변경후 : \", xyresult);\r\n    const aaAxios = async () => {\r\n      await axios\r\n        .get(URL, {\r\n          params: {\r\n            serviceKey: apiKey,\r\n            numOfRows: 10,\r\n            pageNo: 1,\r\n            dataType: \"JSON\",\r\n            base_date: \"20250310\",\r\n            base_time: \"0600\",\r\n            nx: xyresult.x,\r\n            ny: xyresult.y,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          console.log(\"openAPI axios 결과\", result);\r\n          weatherapiresult = result.data.response.body.items.item;\r\n          console.log(\"openAPI axios weatherapiresult\", weatherapiresult);\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"openAPI axios 에러발생\", e);\r\n        });\r\n    }; //aaAxios\r\n    aaAxios();\r\n  } //if\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;;AAEzC;AACA;AACA,MAAMC,GAAG,GACP,0EAA0E;AAC5E;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC5CC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;AAEnB,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAIC,gBAAgB,GAAG,IAAI;EAE3B,IAAIC,QAAQ,GAAG,IAAI;EACnB,IAAIC,SAAS,GAAG,IAAI;EAEpB,IAAIC,SAAS,CAACC,WAAW,EAAE;IACzB,MAAMC,UAAU,GAAGF,SAAS,CAACC,WAAW,CAACE,kBAAkB,CAAC,UAAUC,GAAG,EAAE;MACzEV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MAChBN,QAAQ,GAAGO,IAAI,CAACC,KAAK,CAACF,GAAG,CAACG,MAAM,CAACT,QAAQ,CAAC;MAC1CC,SAAS,GAAGM,IAAI,CAACC,KAAK,CAACF,GAAG,CAACG,MAAM,CAACR,SAAS,CAAC;IAC9C,CAAC,CAAC;IACFL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEO,UAAU,CAAC;EAC1C;EACAR,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGG,QAAQ,GAAG,IAAI,GAAGC,SAAS,CAAC;EAEtD,IAAID,QAAQ,KAAK,IAAI,IAAIC,SAAS,KAAK,IAAI,EAAE;IAC3C,MAAMS,QAAQ,GAAGpB,WAAW,CAAC,MAAM,EAAEU,QAAQ,EAAEC,SAAS,CAAC;IAEzDL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEa,QAAQ,CAAC;IACtC,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMtB,KAAK,CACRuB,GAAG,CAACrB,GAAG,EAAE;QACRsB,MAAM,EAAE;UACNC,UAAU,EAAEtB,MAAM;UAClBuB,SAAS,EAAE,EAAE;UACbC,MAAM,EAAE,CAAC;UACTC,QAAQ,EAAE,MAAM;UAChBC,SAAS,EAAE,UAAU;UACrBC,SAAS,EAAE,MAAM;UACjBC,EAAE,EAAEV,QAAQ,CAACW,CAAC;UACdC,EAAE,EAAEZ,QAAQ,CAACa;QACf;MACF,CAAC,CAAC,CACDC,IAAI,CAAEC,MAAM,IAAK;QAChB7B,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE4B,MAAM,CAAC;QACvC1B,gBAAgB,GAAG0B,MAAM,CAACC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,IAAI;QACvDlC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEE,gBAAgB,CAAC;MACjE,CAAC,CAAC,CACDgC,KAAK,CAAEC,CAAC,IAAK;QACZpC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEmC,CAAC,CAAC;MACtC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;IACHrB,OAAO,CAAC,CAAC;EACX,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}