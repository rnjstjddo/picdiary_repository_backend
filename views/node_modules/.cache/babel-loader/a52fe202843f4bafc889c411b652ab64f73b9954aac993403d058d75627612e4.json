{"ast":null,"code":"/** 위도, 경도를 x,y 격자 포인트로 변경 */\nvar RE = 6371.00877; // 지구 반경(km)\nvar GRID = 5.0; // 격자 간격(km)\nvar SLAT1 = 30.0; // 투영 위도1(degree)\nvar SLAT2 = 60.0; // 투영 위도2(degree)\nvar OLON = 126.0; // 기준점 경도(degree)\nvar OLAT = 38.0; // 기준점 위도(degree)\nvar XO = 43; // 기준점 X좌표(GRID)\nvar YO = 136; // 기1준점 Y좌표(GRID)\n\n// LCC DFS 좌표변환 ( code : \"toXY\"(위경도->좌표, v1:위도, v2:경도), \"toLL\"(좌표->위경도,v1:x, v2:y) )\nexport const dfs_xy_conv = (code, v1, v2) => {\n  // LCC DFS 좌표변환을 위한 기초 자료\n  console.log(\" dfs_xy_conv 함수진입\");\n  var DEGRAD = Math.PI / 180.0;\n  var RADDEG = 180.0 / Math.PI;\n  var re = RE / GRID;\n  var slat1 = SLAT1 * DEGRAD;\n  var slat2 = SLAT2 * DEGRAD;\n  var olon = OLON * DEGRAD;\n  var olat = OLAT * DEGRAD;\n  var sn = Math.tan(Math.PI * 0.25 + slat2 * 0.5) / Math.tan(Math.PI * 0.25 + slat1 * 0.5);\n  sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\n  var sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\n  sf = Math.pow(sf, sn) * Math.cos(slat1) / sn;\n  var ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\n  ro = re * sf / Math.pow(ro, sn);\n  var rs = {};\n  if (code == \"toXY\") {\n    rs[\"lat\"] = v1;\n    rs[\"lng\"] = v2;\n    var ra = Math.tan(Math.PI * 0.25 + v1 * DEGRAD * 0.5);\n    ra = re * sf / Math.pow(ra, sn);\n    var theta = v2 * DEGRAD - olon;\n    if (theta > Math.PI) theta -= 2.0 * Math.PI;\n    if (theta < -Math.PI) theta += 2.0 * Math.PI;\n    theta *= sn;\n    rs[\"x\"] = Math.floor(ra * Math.sin(theta) + XO + 0.5);\n    rs[\"y\"] = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\n  } else {\n    rs[\"x\"] = v1;\n    rs[\"y\"] = v2;\n    var xn = v1 - XO;\n    var yn = ro - v2 + YO;\n    ra = Math.sqrt(xn * xn + yn * yn);\n    if (sn < 0.0) return -ra;\n    var alat = Math.pow(re * sf / ra, 1.0 / sn);\n    alat = 2.0 * Math.atan(alat) - Math.PI * 0.5;\n    if (Math.abs(xn) <= 0.0) {\n      theta = 0.0;\n    } else {\n      if (Math.abs(yn) <= 0.0) {\n        theta = Math.PI * 0.5;\n        if (xn < 0.0) return -theta;\n      } else theta = Math.atan2(xn, yn);\n    }\n    var alon = theta / sn + olon;\n    rs[\"lat\"] = alat * RADDEG;\n    rs[\"lng\"] = alon * RADDEG;\n  }\n  return rs;\n};","map":{"version":3,"names":["RE","GRID","SLAT1","SLAT2","OLON","OLAT","XO","YO","dfs_xy_conv","code","v1","v2","console","log","DEGRAD","Math","PI","RADDEG","re","slat1","slat2","olon","olat","sn","tan","cos","sf","pow","ro","rs","ra","theta","floor","sin","xn","yn","sqrt","alat","atan","abs","atan2","alon"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/utils/xy.js"],"sourcesContent":["/** 위도, 경도를 x,y 격자 포인트로 변경 */\r\nvar RE = 6371.00877; // 지구 반경(km)\r\nvar GRID = 5.0; // 격자 간격(km)\r\nvar SLAT1 = 30.0; // 투영 위도1(degree)\r\nvar SLAT2 = 60.0; // 투영 위도2(degree)\r\nvar OLON = 126.0; // 기준점 경도(degree)\r\nvar OLAT = 38.0; // 기준점 위도(degree)\r\nvar XO = 43; // 기준점 X좌표(GRID)\r\nvar YO = 136; // 기1준점 Y좌표(GRID)\r\n\r\n// LCC DFS 좌표변환 ( code : \"toXY\"(위경도->좌표, v1:위도, v2:경도), \"toLL\"(좌표->위경도,v1:x, v2:y) )\r\nexport const dfs_xy_conv = (code, v1, v2) => {\r\n  // LCC DFS 좌표변환을 위한 기초 자료\r\n  console.log(\" dfs_xy_conv 함수진입\");\r\n  var DEGRAD = Math.PI / 180.0;\r\n  var RADDEG = 180.0 / Math.PI;\r\n\r\n  var re = RE / GRID;\r\n  var slat1 = SLAT1 * DEGRAD;\r\n  var slat2 = SLAT2 * DEGRAD;\r\n  var olon = OLON * DEGRAD;\r\n  var olat = OLAT * DEGRAD;\r\n\r\n  var sn =\r\n    Math.tan(Math.PI * 0.25 + slat2 * 0.5) /\r\n    Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\r\n  var sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sf = (Math.pow(sf, sn) * Math.cos(slat1)) / sn;\r\n  var ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\r\n  ro = (re * sf) / Math.pow(ro, sn);\r\n  var rs = {};\r\n  if (code == \"toXY\") {\r\n    rs[\"lat\"] = v1;\r\n    rs[\"lng\"] = v2;\r\n    var ra = Math.tan(Math.PI * 0.25 + v1 * DEGRAD * 0.5);\r\n    ra = (re * sf) / Math.pow(ra, sn);\r\n    var theta = v2 * DEGRAD - olon;\r\n    if (theta > Math.PI) theta -= 2.0 * Math.PI;\r\n    if (theta < -Math.PI) theta += 2.0 * Math.PI;\r\n    theta *= sn;\r\n    rs[\"x\"] = Math.floor(ra * Math.sin(theta) + XO + 0.5);\r\n    rs[\"y\"] = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\r\n  } else {\r\n    rs[\"x\"] = v1;\r\n    rs[\"y\"] = v2;\r\n    var xn = v1 - XO;\r\n    var yn = ro - v2 + YO;\r\n    ra = Math.sqrt(xn * xn + yn * yn);\r\n    if (sn < 0.0) return -ra;\r\n    var alat = Math.pow((re * sf) / ra, 1.0 / sn);\r\n    alat = 2.0 * Math.atan(alat) - Math.PI * 0.5;\r\n\r\n    if (Math.abs(xn) <= 0.0) {\r\n      theta = 0.0;\r\n    } else {\r\n      if (Math.abs(yn) <= 0.0) {\r\n        theta = Math.PI * 0.5;\r\n        if (xn < 0.0) return -theta;\r\n      } else theta = Math.atan2(xn, yn);\r\n    }\r\n    var alon = theta / sn + olon;\r\n    rs[\"lat\"] = alat * RADDEG;\r\n    rs[\"lng\"] = alon * RADDEG;\r\n  }\r\n  return rs;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}