{"ast":null,"code":"import React,{useCallback,useEffect,useLayoutEffect,useState}from\"react\";import{Link,Navigate,useNavigate,useSearchParams}from\"react-router-dom\";import\"../layout/stylesCalendar.css\";import Image from\"react-bootstrap/Image\";import useCustomMove from\"../../hooks/useCustomMove\";import Card from\"react-bootstrap/Card\";import useCustomExercise from\"../../hooks/useCustomExercise\";import useCustomLogin from\"../../hooks/useCustomLogin\";import{getChooseExercise,getExerciseList}from\"../../api/exerciseApi\";import Button from\"react-bootstrap/Button\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const whenchooseReturn=whenchoose=>{switch(whenchoose){case\"1\":return\"아침\";case\"2\":return\"점심\";case\"3\":return\"저녁\";default:return null;}};const imageReturn=whenchoose=>{switch(whenchoose){case\"1\":return\"bicep\";case\"2\":return\"tennis\";case\"3\":return\"basketball\";default:return null;}};const chooseReturn=choose=>{switch(choose){case\"1\":return\"달리기\";case\"2\":return\"웨이트\";case\"3\":return`구기종목or복싱`;case\"4\":return\"등산\";case\"5\":return\"필라테스요가\";case\"6\":return\"그외\";default:return null;}};const makeCalendar=d=>{let date=new Date(d);const currentYear=new Date(date).getFullYear();//예)Mon Apr 01 2024 10:27:04 GMT+0900 (한국 표준시)\nconst currentMonth=new Date(date).getMonth()+1;const firstDay=new Date(date.setDate(1)).getDay();//1 앞에0안붙는다\n//현재 달력첫째날\nlet calfirst=\"\";function getCalfirst(){calfirst+=`${currentYear}-`;if(currentMonth<10){calfirst+=`0${currentMonth}`;}else{calfirst+=`${currentMonth}`;}//calfirst += `01`\nreturn calfirst;}//calfirst 현재달력첫날\nconst lastDay=new Date(currentYear,currentMonth,0).getDate();//console.log(\"lastDay값 ->\"+lastDay)//30\nconst limitDay=firstDay+lastDay;//console.log(\"limitDay값 ->\"+limitDay)//31\nconst nextDay=Math.ceil(limitDay/7)*7;//console.log(\"nextDay값 ->\"+nextDay)//35 35-31=4칸 빈칸만들어진다.\nreturn{firstDay,lastDay,limitDay,nextDay};};const CalendarItem=props=>{//UserId, content ,createdAt ,id , picture\nconst{exercise,dateobject}=props.i;//api서버후 db에서 받은값\nconsole.log(\"ExerciseListComponent.js CalendarItem exercise -> \",exercise);return exercise.map((i,index)=>/*#__PURE__*/_jsx(React.Fragment,{children:i.id&&i.whenchoose===\"1\"?/*#__PURE__*/// <Link\n//   to={`../read/${i.choose}/${dateobject}`}\n//   style={{ textDecoration: \"none\", color: \"black\" }}\n// >\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Image,{src:\"/img/biceps.png\",style:{width:\"20px\",height:\"20px\"},rounded:true}),whenchooseReturn(i.whenchoose),\"(\",chooseReturn(i.choose),\") \",/*#__PURE__*/_jsx(\"br\",{})]}):// </Link>\ni.id&&i.whenchoose===\"2\"?/*#__PURE__*/// <Link\n//   to={`../read/${i.choose}/${dateobject}`}\n//   style={{ textDecoration: \"none\", color: \"black\" }}\n// >\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Image,{src:\"/img/tennis.png\",style:{width:\"20px\",height:\"20px\"},rounded:true}),whenchooseReturn(i.whenchoose),\"(\",chooseReturn(i.choose),\")\",/*#__PURE__*/_jsx(\"br\",{})]}):/*#__PURE__*/// </Link>\n// <Link\n//   to={`../read/${i.choose}/${dateobject}`}\n//   style={{ textDecoration: \"none\", color: \"black\" }}\n// >\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Image,{src:\"/img/basketball.png\",style:{width:\"20px\",height:\"20px\"},rounded:true}),whenchooseReturn(i.whenchoose),\"(\",chooseReturn(i.choose),\")\",/*#__PURE__*/_jsx(\"br\",{})]})// </Link>\n},index));};const ExerciseListComponent=()=>{const[searchParams]=useSearchParams();const{moveToExerciseCreate}=useCustomExercise();const{effectException}=useCustomLogin();const navigate=useNavigate();const[exercise,setExercise]=useState([]);const[currentMonth,setCurrentMonth]=useState(\"\");const[currentYear,setCurrentYear]=useState(\"\");const[currentDate,setCurrentDate]=useState(\"\");const[fullcurrentDate,setFullCurrentDate]=useState(\"\");const[searchMonth,setSearchMonth]=useState(0);const[searchYear,setSearchYear]=useState(0);const[beforeDateItemArray,setBeforeDateItemArray]=useState([]);const[afterDateItemArray,setAfterDateItemArray]=useState([]);const[dateItem,setDateItem]=useState([]);const[lastDay,setLastDay]=useState(\"\");const[firstDay,setFirstDay]=useState(\"\");const[nextDay,setNextDay]=useState(\"\");const[limitDay,setLimitDay]=useState(\"\");const[check,setCheck]=useState(0);const[make,setMake]=useState(false);let searchParamsYear=searchParams.get(\"year\");let searchParamsMonth=searchParams.get(\"month\");useLayoutEffect(()=>{console.log(\"useLayoutEffect()  진입\");setDateItem(()=>[]);setMake(()=>false);let date=new Date();let basicYear=date.getFullYear();let basicMonth=date.getMonth()+1;basicMonth=basicMonth<10?\"0\"+basicMonth:basicMonth;date=`${basicYear}-${basicMonth}-01`;if(searchParamsYear!==null&&searchParamsMonth!==null){console.log(\"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",searchParamsYear);console.log(\"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",searchParamsMonth);setSearchMonth(()=>Number(searchParamsMonth));setSearchYear(()=>searchParamsYear);date=new Date(`${searchParamsYear}-${searchParamsMonth}-01`);console.log(\"date-> \",date);}setCurrentDate(()=>date);const newdate=new Date(date);setCurrentYear(\"\"+newdate.getFullYear());setCurrentMonth(newdate.getMonth()+1);setFullCurrentDate(()=>newdate);},[searchParamsYear,searchParamsMonth]);useEffect(()=>{if(fullcurrentDate!==\"\"){console.log(\"useEffect() fullcurrentDate 존재할경우 =>  \",fullcurrentDate);const{firstDay,nextDay,limitDay,lastDay}=makeCalendar(fullcurrentDate);setLastDay(lastDay);setFirstDay(firstDay);setNextDay(nextDay);setLimitDay(limitDay);}//if\nreturn()=>{console.log(\"useEffect() makeCalendar() 반환변수들 초기화\");setLastDay(()=>\"\");setFirstDay(()=>\"\");setNextDay(()=>\"\");setLimitDay(()=>\"\");};},[fullcurrentDate]);//달력에서 이전빈칸\nuseEffect(()=>{console.log(\"useEffect() 달력 데이터넣기 진입\");if(make===true){console.log(\"useEffect() 달력 데이터넣기 진입 make상태가 true진입\");let dateItem=[];for(let i=1,j=0;i<=lastDay;i++,j++){console.log(\"useEffect() 달력 데이터넣기 for문 진입\");let currentYear=new Date(fullcurrentDate).getFullYear();let currentMonth=new Date(fullcurrentDate).getMonth()+1;currentMonth=currentMonth<10?\"0\"+currentMonth:currentMonth;let ichange=i<10?\"0\"+i:i;let dateobject=`${currentYear}-${currentMonth}-${ichange}`;dateItem[j]={dateitem:i,dateobject:dateobject,exercise:exercise.filter(a=>a.dateobject===dateobject)};}setDateItem(()=>dateItem);const beforeDateItem=firstDay-0;let beforeDateItemArray=[];if(beforeDateItem!==0){for(let i=1,j=0;i<=beforeDateItem;i++,j++){beforeDateItemArray[j]=i;}}setBeforeDateItemArray(()=>beforeDateItemArray);//달력에서 이후빈칸\nconst afterDateItem=nextDay-limitDay;let afterDateItemArray=[];if(afterDateItem!==0){for(let i=1,j=0;i<=afterDateItem;i++,j++){afterDateItemArray[j]=i;}}setAfterDateItemArray(()=>afterDateItemArray);}},[make]);useEffect(()=>{if(currentDate!==\"\"){console.log(\"useEffect() 진입 axios 비동기요청 currentDate 존재할경우 ->\",currentDate);const getExerciseListEI=async()=>{getExerciseList({currentDate}).then(result=>{console.log(\"ExerciseListComponent.js then()진입 \",result);if(!result.error){setExercise(()=>result);setMake(()=>true);}else{setMake(()=>true);}}).catch(err=>{console.log(\"ExerciseListComponent.js catch()진입 \",err);effectException(err);});};//getExerciseListEI\ngetExerciseListEI();}//if\n},[currentDate]);// 이전달 이동\nconst BeforeMonthMove=currentDate=>{console.log(\"BeforeMonthMove() 진입  => \",currentDate);const tempdate=new Date(currentDate);let beforechangeDate=new Date(tempdate.setMonth(tempdate.getMonth()-1));let beforecurrentYear=new Date(beforechangeDate).getFullYear();console.log(\"BeforeMonthMove() 진입 beforecurrentYear => \",beforecurrentYear);let beforechangeMonth=new Date(beforechangeDate).getMonth()+1;beforechangeMonth=beforechangeMonth<10?\"0\"+beforechangeMonth:beforechangeMonth;console.log(\"BeforeMonthMove() 진입 beforechangeMonth => \",beforechangeMonth);navigate(`?year=${beforecurrentYear}&month=${beforechangeMonth}`);};//다음달이동\nconst NextMonthMove=currentDate=>{console.log(\"NextMonthMove() 진입 currentDate ->\",currentDate);const tempdate=new Date(currentDate);let afterchangeDate=new Date(tempdate.setMonth(tempdate.getMonth()));console.log(\"NextMonthMove() 진입 afterchangeDate ->\",afterchangeDate);let aftercurrentYear=new Date(afterchangeDate).getFullYear();console.log(\"NextMonthMove() 진입 aftercurrentYear ->\",aftercurrentYear);let afterchangeMonth=new Date(afterchangeDate).getMonth()+2;afterchangeMonth=afterchangeMonth<10?\"0\"+afterchangeMonth:afterchangeMonth;console.log(\"NextMonthMove() 진입 afterchangeMonth ->\",afterchangeMonth);navigate(`?year=${aftercurrentYear}&month=${afterchangeMonth}`);};const createHandler=dateitem=>{console.log(\"ExerciseListComponent.js createHandler() dateitme => \",dateitem);const paramMonth=currentMonth<10?\"0\"+currentMonth:currentMonth;const paramdate=`${currentYear}-${paramMonth}-${dateitem}`;console.log(\"ExerciseListComponent.js createHandler() paramdate => \",paramdate);const getChooseExerciseEI=async()=>{await getChooseExercise(paramdate).then(result=>{console.log(\"ExerciseListComponent.js createHandler() axios 결과 then() -> \",result);//\"1234\"\nif(result.result!==\"\"||result.result!==null){console.log(\"if문 진입\");if(result.result.length===3){console.log(\"갯수 3일경우 진입\");alert(paramdate+\"일자 운동을 모두 작성했습니다.\");return;}else{console.log(\"갯수 3이아닐경우 진입\");moveToExerciseCreate(paramdate);}}});};getChooseExerciseEI();};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[\" \",/*#__PURE__*/_jsx(\"section\",{className:\"py-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"calrap\",style:{margin:\"0 auto\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"calheader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"calbtn calprevDay\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>BeforeMonthMove(currentDate),children:\"\\uC774\\uC804\"})}),/*#__PURE__*/_jsxs(\"h2\",{className:\"caldateTitle\",children:[currentYear,\"\\uB144 \",currentMonth,\"\\uC6D4\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"calbtn calnextDay\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>NextMonthMove(currentDate),children:\"\\uC774\\uD6C4\"})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h6\",{style:{textAlign:\"right\",color:\"tomato\"},children:/*#__PURE__*/_jsx(\"i\",{children:\"\\uC77C\\uC790 \\uD074\\uB9AD\\uC2DC \\uC6B4\\uB3D9\\uB4F1\\uB85D\\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4!\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"calgrid caldateHead\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\uC77C\"},\"0\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uC6D4\"},\"1\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uD654\"},\"2\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uC218\"},\"3\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uBAA9\"},\"4\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uAE08\"},\"5\"),/*#__PURE__*/_jsx(\"div\",{children:\"\\uD1A0\"},\"6\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"calgrid caldateBoard\",children:[beforeDateItemArray.map((i,index)=>/*#__PURE__*/_jsx(\"div\",{},index)),dateItem.map((i,index)=>/*#__PURE__*/_jsx(\"div\",{children:i.exercise&&i.exercise.length!==0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>createHandler(i.dateitem),style:{all:\"unset\"},children:i.dateitem}),/*#__PURE__*/_jsxs(Link,{to:`../read/${i.dateobject}`,style:{textDecoration:\"none\",color:\"black\"},children:[\"\\xA0\\xA0\\uBAA8\\uB450\\uBCF4\\uAE30 \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(CalendarItem,{i:i},index)]}):/*#__PURE__*/_jsx(Link,{to:`../create/${i.dateobject}`,style:{textDecoration:\"none\",color:\"inherit\"},children:i.dateitem})},index)),afterDateItemArray.map((i,index)=>/*#__PURE__*/_jsx(\"div\",{},index))]})]})})]});};export default ExerciseListComponent;","map":{"version":3,"names":["React","useCallback","useEffect","useLayoutEffect","useState","Link","Navigate","useNavigate","useSearchParams","Image","useCustomMove","Card","useCustomExercise","useCustomLogin","getChooseExercise","getExerciseList","Button","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","whenchooseReturn","whenchoose","imageReturn","chooseReturn","choose","makeCalendar","d","date","Date","currentYear","getFullYear","currentMonth","getMonth","firstDay","setDate","getDay","calfirst","getCalfirst","lastDay","getDate","limitDay","nextDay","Math","ceil","CalendarItem","props","exercise","dateobject","i","console","log","map","index","children","id","src","style","width","height","rounded","ExerciseListComponent","searchParams","moveToExerciseCreate","effectException","navigate","setExercise","setCurrentMonth","setCurrentYear","currentDate","setCurrentDate","fullcurrentDate","setFullCurrentDate","searchMonth","setSearchMonth","searchYear","setSearchYear","beforeDateItemArray","setBeforeDateItemArray","afterDateItemArray","setAfterDateItemArray","dateItem","setDateItem","setLastDay","setFirstDay","setNextDay","setLimitDay","check","setCheck","make","setMake","searchParamsYear","get","searchParamsMonth","basicYear","basicMonth","Number","newdate","j","ichange","dateitem","filter","a","beforeDateItem","afterDateItem","getExerciseListEI","then","result","error","catch","err","BeforeMonthMove","tempdate","beforechangeDate","setMonth","beforecurrentYear","beforechangeMonth","NextMonthMove","afterchangeDate","aftercurrentYear","afterchangeMonth","createHandler","paramMonth","paramdate","getChooseExerciseEI","length","alert","className","margin","onClick","textAlign","color","type","all","to","textDecoration"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/components/exercise/ExerciseListComponent.js"],"sourcesContent":["import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { Link, Navigate, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport \"../layout/stylesCalendar.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport useCustomExercise from \"../../hooks/useCustomExercise\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { getChooseExercise, getExerciseList } from \"../../api/exerciseApi\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst whenchooseReturn = (whenchoose) => {\r\n  switch (whenchoose) {\r\n    case \"1\":\r\n      return \"아침\";\r\n    case \"2\":\r\n      return \"점심\";\r\n\r\n    case \"3\":\r\n      return \"저녁\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nconst imageReturn = (whenchoose) => {\r\n  switch (whenchoose) {\r\n    case \"1\":\r\n      return \"bicep\";\r\n    case \"2\":\r\n      return \"tennis\";\r\n\r\n    case \"3\":\r\n      return \"basketball\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst chooseReturn = (choose) => {\r\n  switch (choose) {\r\n    case \"1\":\r\n      return \"달리기\";\r\n    case \"2\":\r\n      return \"웨이트\";\r\n    case \"3\":\r\n      return `구기종목or복싱`;\r\n    case \"4\":\r\n      return \"등산\";\r\n    case \"5\":\r\n      return \"필라테스요가\";\r\n\r\n    case \"6\":\r\n      return \"그외\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst makeCalendar = (d) => {\r\n  let date = new Date(d);\r\n  const currentYear = new Date(date).getFullYear(); //예)Mon Apr 01 2024 10:27:04 GMT+0900 (한국 표준시)\r\n  const currentMonth = new Date(date).getMonth() + 1;\r\n  const firstDay = new Date(date.setDate(1)).getDay(); //1 앞에0안붙는다\r\n\r\n  //현재 달력첫째날\r\n  let calfirst = \"\";\r\n  function getCalfirst() {\r\n    calfirst += `${currentYear}-`;\r\n\r\n    if (currentMonth < 10) {\r\n      calfirst += `0${currentMonth}`;\r\n    } else {\r\n      calfirst += `${currentMonth}`;\r\n    }\r\n    //calfirst += `01`\r\n    return calfirst;\r\n  } //calfirst 현재달력첫날\r\n\r\n  const lastDay = new Date(currentYear, currentMonth, 0).getDate();\r\n  //console.log(\"lastDay값 ->\"+lastDay)//30\r\n  const limitDay = firstDay + lastDay;\r\n  //console.log(\"limitDay값 ->\"+limitDay)//31\r\n  const nextDay = Math.ceil(limitDay / 7) * 7;\r\n  //console.log(\"nextDay값 ->\"+nextDay)//35 35-31=4칸 빈칸만들어진다.\r\n\r\n  return { firstDay, lastDay, limitDay, nextDay };\r\n};\r\n\r\nconst CalendarItem = (props) => {\r\n  //UserId, content ,createdAt ,id , picture\r\n  const { exercise, dateobject } = props.i; //api서버후 db에서 받은값\r\n\r\n  console.log(\"ExerciseListComponent.js CalendarItem exercise -> \", exercise);\r\n  return exercise.map((i, index) => (\r\n    <React.Fragment key={index}>\r\n      {i.id && i.whenchoose === \"1\" ? (\r\n        // <Link\r\n        //   to={`../read/${i.choose}/${dateobject}`}\r\n        //   style={{ textDecoration: \"none\", color: \"black\" }}\r\n        // >\r\n        <>\r\n          <Image\r\n            src=\"/img/biceps.png\"\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            rounded\r\n          />\r\n          {whenchooseReturn(i.whenchoose)}({chooseReturn(i.choose)}) <br />\r\n        </>\r\n      ) : // </Link>\r\n      i.id && i.whenchoose === \"2\" ? (\r\n        // <Link\r\n        //   to={`../read/${i.choose}/${dateobject}`}\r\n        //   style={{ textDecoration: \"none\", color: \"black\" }}\r\n        // >\r\n        <>\r\n          <Image\r\n            src=\"/img/tennis.png\"\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            rounded\r\n          />\r\n          {whenchooseReturn(i.whenchoose)}({chooseReturn(i.choose)})<br />\r\n        </>\r\n      ) : (\r\n        // </Link>\r\n        // <Link\r\n        //   to={`../read/${i.choose}/${dateobject}`}\r\n        //   style={{ textDecoration: \"none\", color: \"black\" }}\r\n        // >\r\n        <>\r\n          <Image\r\n            src=\"/img/basketball.png\"\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            rounded\r\n          />\r\n          {whenchooseReturn(i.whenchoose)}({chooseReturn(i.choose)})<br />\r\n        </>\r\n        // </Link>\r\n      )}\r\n    </React.Fragment>\r\n  ));\r\n};\r\n\r\nconst ExerciseListComponent = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const { moveToExerciseCreate } = useCustomExercise();\r\n  const { effectException } = useCustomLogin();\r\n  const navigate = useNavigate();\r\n\r\n  const [exercise, setExercise] = useState([]);\r\n\r\n  const [currentMonth, setCurrentMonth] = useState(\"\");\r\n  const [currentYear, setCurrentYear] = useState(\"\");\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [fullcurrentDate, setFullCurrentDate] = useState(\"\");\r\n\r\n  const [searchMonth, setSearchMonth] = useState(0);\r\n  const [searchYear, setSearchYear] = useState(0);\r\n  const [beforeDateItemArray, setBeforeDateItemArray] = useState([]);\r\n  const [afterDateItemArray, setAfterDateItemArray] = useState([]);\r\n  const [dateItem, setDateItem] = useState([]);\r\n  const [lastDay, setLastDay] = useState(\"\");\r\n  const [firstDay, setFirstDay] = useState(\"\");\r\n  const [nextDay, setNextDay] = useState(\"\");\r\n  const [limitDay, setLimitDay] = useState(\"\");\r\n  const [check, setCheck] = useState(0);\r\n  const [make, setMake] = useState(false);\r\n  let searchParamsYear = searchParams.get(\"year\");\r\n  let searchParamsMonth = searchParams.get(\"month\");\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(\"useLayoutEffect()  진입\");\r\n    setDateItem(() => []);\r\n    setMake(() => false);\r\n    let date = new Date();\r\n\r\n    let basicYear = date.getFullYear();\r\n    let basicMonth = date.getMonth() + 1;\r\n    basicMonth = basicMonth < 10 ? \"0\" + basicMonth : basicMonth;\r\n    date = `${basicYear}-${basicMonth}-01`;\r\n\r\n    if (searchParamsYear !== null && searchParamsMonth !== null) {\r\n      console.log(\r\n        \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n        searchParamsYear\r\n      );\r\n      console.log(\r\n        \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n        searchParamsMonth\r\n      );\r\n      setSearchMonth(() => Number(searchParamsMonth));\r\n      setSearchYear(() => searchParamsYear);\r\n\r\n      date = new Date(`${searchParamsYear}-${searchParamsMonth}-01`);\r\n      console.log(\"date-> \", date);\r\n    }\r\n    setCurrentDate(() => date);\r\n    const newdate = new Date(date);\r\n    setCurrentYear(\"\" + newdate.getFullYear());\r\n    setCurrentMonth(newdate.getMonth() + 1);\r\n    setFullCurrentDate(() => newdate);\r\n  }, [searchParamsYear, searchParamsMonth]);\r\n\r\n  useEffect(() => {\r\n    if (fullcurrentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() fullcurrentDate 존재할경우 =>  \",\r\n        fullcurrentDate\r\n      );\r\n\r\n      const { firstDay, nextDay, limitDay, lastDay } =\r\n        makeCalendar(fullcurrentDate);\r\n\r\n      setLastDay(lastDay);\r\n      setFirstDay(firstDay);\r\n      setNextDay(nextDay);\r\n      setLimitDay(limitDay);\r\n    } //if\r\n\r\n    return () => {\r\n      console.log(\"useEffect() makeCalendar() 반환변수들 초기화\");\r\n\r\n      setLastDay(() => \"\");\r\n      setFirstDay(() => \"\");\r\n      setNextDay(() => \"\");\r\n      setLimitDay(() => \"\");\r\n    };\r\n  }, [fullcurrentDate]);\r\n\r\n  //달력에서 이전빈칸\r\n  useEffect(() => {\r\n    console.log(\"useEffect() 달력 데이터넣기 진입\");\r\n\r\n    if (make === true) {\r\n      console.log(\"useEffect() 달력 데이터넣기 진입 make상태가 true진입\");\r\n\r\n      let dateItem = [];\r\n\r\n      for (let i = 1, j = 0; i <= lastDay; i++, j++) {\r\n        console.log(\"useEffect() 달력 데이터넣기 for문 진입\");\r\n\r\n        let currentYear = new Date(fullcurrentDate).getFullYear();\r\n        let currentMonth = new Date(fullcurrentDate).getMonth() + 1;\r\n        currentMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\r\n        let ichange = i < 10 ? \"0\" + i : i;\r\n        let dateobject = `${currentYear}-${currentMonth}-${ichange}`;\r\n\r\n        dateItem[j] = {\r\n          dateitem: i,\r\n          dateobject: dateobject,\r\n          exercise: exercise.filter((a) => a.dateobject === dateobject),\r\n        };\r\n      }\r\n      setDateItem(() => dateItem);\r\n\r\n      const beforeDateItem = firstDay - 0;\r\n      let beforeDateItemArray = [];\r\n\r\n      if (beforeDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= beforeDateItem; i++, j++) {\r\n          beforeDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setBeforeDateItemArray(() => beforeDateItemArray);\r\n\r\n      //달력에서 이후빈칸\r\n      const afterDateItem = nextDay - limitDay;\r\n      let afterDateItemArray = [];\r\n\r\n      if (afterDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= afterDateItem; i++, j++) {\r\n          afterDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setAfterDateItemArray(() => afterDateItemArray);\r\n    }\r\n  }, [make]);\r\n\r\n  useEffect(() => {\r\n    if (currentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() 진입 axios 비동기요청 currentDate 존재할경우 ->\",\r\n        currentDate\r\n      );\r\n      const getExerciseListEI = async () => {\r\n        getExerciseList({ currentDate })\r\n          .then((result) => {\r\n            console.log(\"ExerciseListComponent.js then()진입 \", result);\r\n            if (!result.error) {\r\n              setExercise(() => result);\r\n              setMake(() => true);\r\n            } else {\r\n              setMake(() => true);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"ExerciseListComponent.js catch()진입 \", err);\r\n            effectException(err);\r\n          });\r\n      }; //getExerciseListEI\r\n      getExerciseListEI();\r\n    } //if\r\n  }, [currentDate]);\r\n\r\n  // 이전달 이동\r\n  const BeforeMonthMove = (currentDate) => {\r\n    console.log(\"BeforeMonthMove() 진입  => \", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n    let beforechangeDate = new Date(tempdate.setMonth(tempdate.getMonth() - 1));\r\n    let beforecurrentYear = new Date(beforechangeDate).getFullYear();\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforecurrentYear => \",\r\n      beforecurrentYear\r\n    );\r\n\r\n    let beforechangeMonth = new Date(beforechangeDate).getMonth() + 1;\r\n    beforechangeMonth =\r\n      beforechangeMonth < 10 ? \"0\" + beforechangeMonth : beforechangeMonth;\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforechangeMonth => \",\r\n      beforechangeMonth\r\n    );\r\n\r\n    navigate(`?year=${beforecurrentYear}&month=${beforechangeMonth}`);\r\n  };\r\n\r\n  //다음달이동\r\n  const NextMonthMove = (currentDate) => {\r\n    console.log(\"NextMonthMove() 진입 currentDate ->\", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n\r\n    let afterchangeDate = new Date(tempdate.setMonth(tempdate.getMonth()));\r\n    console.log(\"NextMonthMove() 진입 afterchangeDate ->\", afterchangeDate);\r\n\r\n    let aftercurrentYear = new Date(afterchangeDate).getFullYear();\r\n    console.log(\"NextMonthMove() 진입 aftercurrentYear ->\", aftercurrentYear);\r\n\r\n    let afterchangeMonth = new Date(afterchangeDate).getMonth() + 2;\r\n    afterchangeMonth =\r\n      afterchangeMonth < 10 ? \"0\" + afterchangeMonth : afterchangeMonth;\r\n    console.log(\"NextMonthMove() 진입 afterchangeMonth ->\", afterchangeMonth);\r\n\r\n    navigate(`?year=${aftercurrentYear}&month=${afterchangeMonth}`);\r\n  };\r\n\r\n  const createHandler = (dateitem) => {\r\n    console.log(\r\n      \"ExerciseListComponent.js createHandler() dateitme => \",\r\n      dateitem\r\n    );\r\n    const paramMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\r\n\r\n    const paramdate = `${currentYear}-${paramMonth}-${dateitem}`;\r\n    console.log(\r\n      \"ExerciseListComponent.js createHandler() paramdate => \",\r\n      paramdate\r\n    );\r\n\r\n    const getChooseExerciseEI = async () => {\r\n      await getChooseExercise(paramdate).then((result) => {\r\n        console.log(\r\n          \"ExerciseListComponent.js createHandler() axios 결과 then() -> \",\r\n          result\r\n        ); //\"1234\"\r\n        if (result.result !== \"\" || result.result !== null) {\r\n          console.log(\"if문 진입\");\r\n          if (result.result.length === 3) {\r\n            console.log(\"갯수 3일경우 진입\");\r\n\r\n            alert(paramdate + \"일자 운동을 모두 작성했습니다.\");\r\n            return;\r\n          } else {\r\n            console.log(\"갯수 3이아닐경우 진입\");\r\n\r\n            moveToExerciseCreate(paramdate);\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    getChooseExerciseEI();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {\" \"}\r\n      <section className=\"py-5\">\r\n        <div className=\"calrap\" style={{ margin: \"0 auto\" }}>\r\n          <div className=\"calheader\">\r\n            <div className=\"calbtn calprevDay\">\r\n              <button onClick={() => BeforeMonthMove(currentDate)}>이전</button>\r\n            </div>\r\n            <h2 className=\"caldateTitle\">\r\n              {currentYear}년 {currentMonth}월\r\n            </h2>\r\n            <div className=\"calbtn calnextDay\">\r\n              <button onClick={() => NextMonthMove(currentDate)}>이후</button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <h6 style={{ textAlign: \"right\", color: \"tomato\" }}>\r\n            <i>일자 클릭시 운동등록페이지로 이동합니다!</i>\r\n          </h6>\r\n          <br />\r\n\r\n          <div className=\"calgrid caldateHead\">\r\n            <div key={\"0\"}>일</div>\r\n            <div key={\"1\"}>월</div>\r\n            <div key={\"2\"}>화</div>\r\n            <div key={\"3\"}>수</div>\r\n            <div key={\"4\"}>목</div>\r\n            <div key={\"5\"}>금</div>\r\n            <div key={\"6\"}>토</div>\r\n          </div>\r\n\r\n          <div className=\"calgrid caldateBoard\">\r\n            {beforeDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n\r\n            {dateItem.map((i, index) => (\r\n              <div key={index}>\r\n                {i.exercise && i.exercise.length !== 0 ? (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => createHandler(i.dateitem)}\r\n                      style={{ all: \"unset\" }}\r\n                    >\r\n                      {i.dateitem}\r\n                    </button>\r\n                    <Link\r\n                      to={`../read/${i.dateobject}`}\r\n                      style={{ textDecoration: \"none\", color: \"black\" }}\r\n                    >\r\n                      &nbsp;&nbsp;모두보기 <br />\r\n                      <br />\r\n                    </Link>\r\n                    <CalendarItem key={index} i={i} />\r\n                  </>\r\n                ) : (\r\n                  <Link\r\n                    to={`../create/${i.dateobject}`}\r\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  >\r\n                    {i.dateitem}\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            ))}\r\n            {afterDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseListComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}