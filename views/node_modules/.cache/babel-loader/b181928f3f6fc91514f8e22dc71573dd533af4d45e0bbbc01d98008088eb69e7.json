{"ast":null,"code":"import jwtAxios from\"../util/jwtUtil\";import axios from\"axios\";import{setCookie}from\"../util/cookieUtil\";export const API_SERVER_HOST=\"http://localhost:8001\";const host=`${API_SERVER_HOST}/api/member`;export const forSession=async()=>{console.log(\"memberApi.js 에서 forSession 진입\");const res=await axios.post(`${host}/forSession`);return res.data;//이값은 리듀서함수로 이동\n};export const loginPost=async loginParam=>{//const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\nconsole.log(\"memberApi.js 에서 loginPost 매개변수 확인 => \",loginParam);const form=new FormData();form.append(\"email\",loginParam.email);form.append(\"password\",loginParam.pw);const res=await axios.post(`${host}/login`,//{ email: loginParam.email, password: loginParam.pw }\n//form,\n{headers:{\"Content-Type\":\"multipart/form-data\"},email:loginParam.email,password:loginParam.pw}//header\n);//console.log(\"memberApi.js loginPost() axios결과 -> \", res.headers);\nconst accessToken=res.data.accessToken;console.log(\"memberApi.js loginPost() 결과  accessToken -> \",accessToken);setCookie(\"accessToken\",JSON.stringify(accessToken),1);return res.data;};export const joinPost=async joinParam=>{//new FormData생성시\n// const header = { headers: { \"content-type\": \"multipart/form-data\" } };\n// const form = new FormData();\n// form.append(\"email\", joinParam.email);\n// form.append(\"password\", joinParam.pw);\n// form.append(\"nick\", joinParam.nick);\n// const res = await axios.post(`${host}/join`, form, header);\n// const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\n//  headers: { 'content-type': 'application/x-www-form-urlencoded' }\nconst res=await axios.post(`${host}/join`,{email:joinParam.email,password:joinParam.pw,nick:joinParam.nick},{headers:{\"content-type\":\"application/x-www-form-urlencoded\"}});console.log(\"memberApi.js joinPost() 진입 axios후 결과 -> \",res);return res.data;};export const logoutGet=async()=>{// const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\n// const form = new FormData();\n// form.append(\"email\", joinParam.email);\n// form.append(\"password\", joinParam.pw);\n// form.append(\"nickname\", joinParam.nick);\nconst res=await axios.get(`${host}/logout`,{withCredentials:true});return res.data;};//수정\nexport const modifyMember=async member=>{const res=await jwtAxios.put(`${host}/modify`,member);return res.data;};","map":{"version":3,"names":["jwtAxios","axios","setCookie","API_SERVER_HOST","host","forSession","console","log","res","post","data","loginPost","loginParam","form","FormData","append","email","pw","headers","password","accessToken","JSON","stringify","joinPost","joinParam","nick","logoutGet","get","withCredentials","modifyMember","member","put"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/api/memberApi.js"],"sourcesContent":["import jwtAxios from \"../util/jwtUtil\";\r\nimport axios from \"axios\";\r\nimport { setCookie } from \"../util/cookieUtil\";\r\n\r\nexport const API_SERVER_HOST = \"http://localhost:8001\";\r\nconst host = `${API_SERVER_HOST}/api/member`;\r\n\r\nexport const forSession = async () => {\r\n  console.log(\"memberApi.js 에서 forSession 진입\");\r\n\r\n  const res = await axios.post(`${host}/forSession`);\r\n  return res.data; //이값은 리듀서함수로 이동\r\n};\r\n\r\nexport const loginPost = async (loginParam) => {\r\n  //const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\r\n  console.log(\"memberApi.js 에서 loginPost 매개변수 확인 => \", loginParam);\r\n  const form = new FormData();\r\n  form.append(\"email\", loginParam.email);\r\n  form.append(\"password\", loginParam.pw);\r\n  const res = await axios.post(\r\n    `${host}/login`,\r\n    //{ email: loginParam.email, password: loginParam.pw }\r\n    //form,\r\n    {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      email: loginParam.email,\r\n      password: loginParam.pw,\r\n    }\r\n    //header\r\n  );\r\n\r\n  //console.log(\"memberApi.js loginPost() axios결과 -> \", res.headers);\r\n  const accessToken = res.data.accessToken;\r\n\r\n  console.log(\"memberApi.js loginPost() 결과  accessToken -> \", accessToken);\r\n  setCookie(\"accessToken\", JSON.stringify(accessToken), 1);\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const joinPost = async (joinParam) => {\r\n  //new FormData생성시\r\n  // const header = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n  // const form = new FormData();\r\n  // form.append(\"email\", joinParam.email);\r\n  // form.append(\"password\", joinParam.pw);\r\n  // form.append(\"nick\", joinParam.nick);\r\n\r\n  // const res = await axios.post(`${host}/join`, form, header);\r\n\r\n  // const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\r\n  //  headers: { 'content-type': 'application/x-www-form-urlencoded' }\r\n  const res = await axios.post(\r\n    `${host}/join`,\r\n    {\r\n      email: joinParam.email,\r\n      password: joinParam.pw,\r\n      nick: joinParam.nick,\r\n    },\r\n    { headers: { \"content-type\": \"application/x-www-form-urlencoded\" } }\r\n  );\r\n  console.log(\"memberApi.js joinPost() 진입 axios후 결과 -> \", res);\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const logoutGet = async () => {\r\n  // const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\r\n  // const form = new FormData();\r\n  // form.append(\"email\", joinParam.email);\r\n  // form.append(\"password\", joinParam.pw);\r\n  // form.append(\"nickname\", joinParam.nick);\r\n\r\n  const res = await axios.get(`${host}/logout`, { withCredentials: true });\r\n  return res.data;\r\n};\r\n\r\n//수정\r\nexport const modifyMember = async (member) => {\r\n  const res = await jwtAxios.put(`${host}/modify`, member);\r\n  return res.data;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,iBAAiB,CACtC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,KAAQ,oBAAoB,CAE9C,MAAO,MAAM,CAAAC,eAAe,CAAG,uBAAuB,CACtD,KAAM,CAAAC,IAAI,CAAG,GAAGD,eAAe,aAAa,CAE5C,MAAO,MAAM,CAAAE,UAAU,CAAG,KAAAA,CAAA,GAAY,CACpCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAE5C,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAP,KAAK,CAACQ,IAAI,CAAC,GAAGL,IAAI,aAAa,CAAC,CAClD,MAAO,CAAAI,GAAG,CAACE,IAAI,CAAE;AACnB,CAAC,CAED,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,UAAU,EAAK,CAC7C;AACAN,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAEK,UAAU,CAAC,CAChE,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC3BD,IAAI,CAACE,MAAM,CAAC,OAAO,CAAEH,UAAU,CAACI,KAAK,CAAC,CACtCH,IAAI,CAACE,MAAM,CAAC,UAAU,CAAEH,UAAU,CAACK,EAAE,CAAC,CACtC,KAAM,CAAAT,GAAG,CAAG,KAAM,CAAAP,KAAK,CAACQ,IAAI,CAC1B,GAAGL,IAAI,QAAQ,CACf;AACA;AACA,CACEc,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CAAC,CAClDF,KAAK,CAAEJ,UAAU,CAACI,KAAK,CACvBG,QAAQ,CAAEP,UAAU,CAACK,EACvB,CACA;AACF,CAAC,CAED;AACA,KAAM,CAAAG,WAAW,CAAGZ,GAAG,CAACE,IAAI,CAACU,WAAW,CAExCd,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAEa,WAAW,CAAC,CACxElB,SAAS,CAAC,aAAa,CAAEmB,IAAI,CAACC,SAAS,CAACF,WAAW,CAAC,CAAE,CAAC,CAAC,CAExD,MAAO,CAAAZ,GAAG,CAACE,IAAI,CACjB,CAAC,CAED,MAAO,MAAM,CAAAa,QAAQ,CAAG,KAAO,CAAAC,SAAS,EAAK,CAC3C;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA,KAAM,CAAAhB,GAAG,CAAG,KAAM,CAAAP,KAAK,CAACQ,IAAI,CAC1B,GAAGL,IAAI,OAAO,CACd,CACEY,KAAK,CAAEQ,SAAS,CAACR,KAAK,CACtBG,QAAQ,CAAEK,SAAS,CAACP,EAAE,CACtBQ,IAAI,CAAED,SAAS,CAACC,IAClB,CAAC,CACD,CAAEP,OAAO,CAAE,CAAE,cAAc,CAAE,mCAAoC,CAAE,CACrE,CAAC,CACDZ,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAEC,GAAG,CAAC,CAE5D,MAAO,CAAAA,GAAG,CAACE,IAAI,CACjB,CAAC,CAED,MAAO,MAAM,CAAAgB,SAAS,CAAG,KAAAA,CAAA,GAAY,CACnC;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAlB,GAAG,CAAG,KAAM,CAAAP,KAAK,CAAC0B,GAAG,CAAC,GAAGvB,IAAI,SAAS,CAAE,CAAEwB,eAAe,CAAE,IAAK,CAAC,CAAC,CACxE,MAAO,CAAApB,GAAG,CAACE,IAAI,CACjB,CAAC,CAED;AACA,MAAO,MAAM,CAAAmB,YAAY,CAAG,KAAO,CAAAC,MAAM,EAAK,CAC5C,KAAM,CAAAtB,GAAG,CAAG,KAAM,CAAAR,QAAQ,CAAC+B,GAAG,CAAC,GAAG3B,IAAI,SAAS,CAAE0B,MAAM,CAAC,CACxD,MAAO,CAAAtB,GAAG,CAACE,IAAI,CACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}