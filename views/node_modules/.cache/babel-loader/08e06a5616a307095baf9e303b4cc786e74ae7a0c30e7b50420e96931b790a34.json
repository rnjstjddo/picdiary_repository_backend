{"ast":null,"code":"import jwtAxios from \"../util/jwtUtil\";\nimport axios from \"axios\";\nimport { setCookie } from \"../util/cookieUtil\";\nexport const API_SERVER_HOST = \"http://localhost:8001\";\nconst host = `${API_SERVER_HOST}/api/member`;\nexport const forSession = async () => {\n  console.log(\"memberApi.js 에서 forSession 진입\");\n  const res = await axios.post(`${host}/forSession`);\n  return res.data; //이값은 리듀서함수로 이동\n};\nexport const loginPost = async loginParam => {\n  //const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\n  console.log(\"memberApi.js 에서 loginPost 매개변수 확인 => \", loginParam);\n  const form = new FormData();\n  form.append(\"email\", loginParam.email);\n  form.append(\"password\", loginParam.pw);\n  const res = await axios.post(`${host}/login`,\n  //{ email: loginParam.email, password: loginParam.pw }\n  //form,\n  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    email: loginParam.email,\n    password: loginParam.pw\n  }\n  //header\n  );\n\n  //console.log(\"memberApi.js loginPost() axios결과 -> \", res.headers);\n  const accessToken = res.data.accessToken;\n  console.log(\"memberApi.js loginPost() 결과  accessToken -> \", accessToken);\n  setCookie(\"accessToken\", JSON.stringify(accessToken), 1);\n  return res.data;\n};\nexport const joinPost = async joinParam => {\n  //new FormData생성시\n  // const header = { headers: { \"content-type\": \"multipart/form-data\" } };\n  // const form = new FormData();\n  // form.append(\"email\", joinParam.email);\n  // form.append(\"password\", joinParam.pw);\n  // form.append(\"nick\", joinParam.nick);\n\n  // const res = await axios.post(`${host}/join`, form, header);\n\n  // const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\n  //  headers: { 'content-type': 'application/x-www-form-urlencoded' }\n  const res = await axios.post(`${host}/join`, {\n    email: joinParam.email,\n    password: joinParam.pw,\n    nick: joinParam.nick\n  }, {\n    headers: {\n      \"content-type\": \"application/x-www-form-urlencoded\"\n    }\n  });\n  console.log(\"memberApi.js joinPost() 진입 axios후 결과 -> \", res);\n  return res.data;\n};\nexport const logoutGet = async () => {\n  // const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\n  // const form = new FormData();\n  // form.append(\"email\", joinParam.email);\n  // form.append(\"password\", joinParam.pw);\n  // form.append(\"nickname\", joinParam.nick);\n\n  const res = await axios.get(`${host}/logout`, {\n    withCredentials: true\n  });\n  return res.data;\n};\n\n//수정\nexport const modifyMember = async member => {\n  const res = await jwtAxios.put(`${host}/modify`, member);\n  return res.data;\n};","map":{"version":3,"names":["jwtAxios","axios","setCookie","API_SERVER_HOST","host","forSession","console","log","res","post","data","loginPost","loginParam","form","FormData","append","email","pw","headers","password","accessToken","JSON","stringify","joinPost","joinParam","nick","logoutGet","get","withCredentials","modifyMember","member","put"],"sources":["C:/Users/win10/Desktop/picdiary/views/src/api/memberApi.js"],"sourcesContent":["import jwtAxios from \"../util/jwtUtil\";\r\nimport axios from \"axios\";\r\nimport { setCookie } from \"../util/cookieUtil\";\r\n\r\nexport const API_SERVER_HOST = \"http://localhost:8001\";\r\nconst host = `${API_SERVER_HOST}/api/member`;\r\n\r\nexport const forSession = async () => {\r\n  console.log(\"memberApi.js 에서 forSession 진입\");\r\n\r\n  const res = await axios.post(`${host}/forSession`);\r\n  return res.data; //이값은 리듀서함수로 이동\r\n};\r\n\r\nexport const loginPost = async (loginParam) => {\r\n  //const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\r\n  console.log(\"memberApi.js 에서 loginPost 매개변수 확인 => \", loginParam);\r\n  const form = new FormData();\r\n  form.append(\"email\", loginParam.email);\r\n  form.append(\"password\", loginParam.pw);\r\n  const res = await axios.post(\r\n    `${host}/login`,\r\n    //{ email: loginParam.email, password: loginParam.pw }\r\n    //form,\r\n    {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      email: loginParam.email,\r\n      password: loginParam.pw,\r\n    }\r\n    //header\r\n  );\r\n\r\n  //console.log(\"memberApi.js loginPost() axios결과 -> \", res.headers);\r\n  const accessToken = res.data.accessToken;\r\n\r\n  console.log(\"memberApi.js loginPost() 결과  accessToken -> \", accessToken);\r\n  setCookie(\"accessToken\", JSON.stringify(accessToken), 1);\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const joinPost = async (joinParam) => {\r\n  //new FormData생성시\r\n  // const header = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n  // const form = new FormData();\r\n  // form.append(\"email\", joinParam.email);\r\n  // form.append(\"password\", joinParam.pw);\r\n  // form.append(\"nick\", joinParam.nick);\r\n\r\n  // const res = await axios.post(`${host}/join`, form, header);\r\n\r\n  // const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\r\n  //  headers: { 'content-type': 'application/x-www-form-urlencoded' }\r\n  const res = await axios.post(\r\n    `${host}/join`,\r\n    {\r\n      email: joinParam.email,\r\n      password: joinParam.pw,\r\n      nick: joinParam.nick,\r\n    },\r\n    { headers: { \"content-type\": \"application/x-www-form-urlencoded\" } }\r\n  );\r\n  console.log(\"memberApi.js joinPost() 진입 axios후 결과 -> \", res);\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const logoutGet = async () => {\r\n  // const header = { headers: { \"content-type\": \"x-www-form-urlencoded\" } };\r\n  // const form = new FormData();\r\n  // form.append(\"email\", joinParam.email);\r\n  // form.append(\"password\", joinParam.pw);\r\n  // form.append(\"nickname\", joinParam.nick);\r\n\r\n  const res = await axios.get(`${host}/logout`, { withCredentials: true });\r\n  return res.data;\r\n};\r\n\r\n//수정\r\nexport const modifyMember = async (member) => {\r\n  const res = await jwtAxios.put(`${host}/modify`, member);\r\n  return res.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,OAAO,MAAMC,eAAe,GAAG,uBAAuB;AACtD,MAAMC,IAAI,GAAG,GAAGD,eAAe,aAAa;AAE5C,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAE5C,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGL,IAAI,aAAa,CAAC;EAClD,OAAOI,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,UAAU,IAAK;EAC7C;EACAN,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEK,UAAU,CAAC;EAChE,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC3BD,IAAI,CAACE,MAAM,CAAC,OAAO,EAAEH,UAAU,CAACI,KAAK,CAAC;EACtCH,IAAI,CAACE,MAAM,CAAC,UAAU,EAAEH,UAAU,CAACK,EAAE,CAAC;EACtC,MAAMT,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC1B,GAAGL,IAAI,QAAQ;EACf;EACA;EACA;IACEc,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB,CAAC;IAClDF,KAAK,EAAEJ,UAAU,CAACI,KAAK;IACvBG,QAAQ,EAAEP,UAAU,CAACK;EACvB;EACA;EACF,CAAC;;EAED;EACA,MAAMG,WAAW,GAAGZ,GAAG,CAACE,IAAI,CAACU,WAAW;EAExCd,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEa,WAAW,CAAC;EACxElB,SAAS,CAAC,aAAa,EAAEmB,IAAI,CAACC,SAAS,CAACF,WAAW,CAAC,EAAE,CAAC,CAAC;EAExD,OAAOZ,GAAG,CAACE,IAAI;AACjB,CAAC;AAED,OAAO,MAAMa,QAAQ,GAAG,MAAOC,SAAS,IAAK;EAC3C;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA,MAAMhB,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC1B,GAAGL,IAAI,OAAO,EACd;IACEY,KAAK,EAAEQ,SAAS,CAACR,KAAK;IACtBG,QAAQ,EAAEK,SAAS,CAACP,EAAE;IACtBQ,IAAI,EAAED,SAAS,CAACC;EAClB,CAAC,EACD;IAAEP,OAAO,EAAE;MAAE,cAAc,EAAE;IAAoC;EAAE,CACrE,CAAC;EACDZ,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEC,GAAG,CAAC;EAE5D,OAAOA,GAAG,CAACE,IAAI;AACjB,CAAC;AAED,OAAO,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC;EACA;EACA;EACA;EACA;;EAEA,MAAMlB,GAAG,GAAG,MAAMP,KAAK,CAAC0B,GAAG,CAAC,GAAGvB,IAAI,SAAS,EAAE;IAAEwB,eAAe,EAAE;EAAK,CAAC,CAAC;EACxE,OAAOpB,GAAG,CAACE,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMmB,YAAY,GAAG,MAAOC,MAAM,IAAK;EAC5C,MAAMtB,GAAG,GAAG,MAAMR,QAAQ,CAAC+B,GAAG,CAAC,GAAG3B,IAAI,SAAS,EAAE0B,MAAM,CAAC;EACxD,OAAOtB,GAAG,CAACE,IAAI;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}