{"version":3,"file":"static/js/545.e156e7ab.chunk.js","mappings":"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","sources":["components/layout/Footer.js","api/chat.js","components/menus/BasicMenu.js","components/layout/Header.js","components/layout/LayoutIndex.js","hooks/useCustomMove.js","hooks/useCustomExercise.js","components/exercise/ExerciseListComponent.js","pages/exercise/ExerciseListPage.js"],"sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <span style={{ fontSize: \"15px\", textAlign: \"right\" }}>\r\n            <img\r\n              alt=\"\"\r\n              src=\"/img/thumbs-up.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            \"미래는 오늘 여러분이 무엇을 하느냐에 달려 있습니다.\" - 마하트마\r\n            간디 <br />\r\n            The future depends on what we do in the present. -Mahatma Gandhi\r\n          </span>\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport jwtAxios from \"../util/jwtUtil\";\r\nimport { API_SERVER_HOST } from \"./memberApi\";\r\n//const prefix = `${API_SERVER_HOST}/api/chat`;\r\nconst prefix = `/api/chat`;\r\n\r\nexport const chatGetPost = async ({ chatroomname, chatroompassword }) => {\r\n  console.log(\r\n    \"api/chat.js chatGetPost 매개변수확인 chatroomname -> \",\r\n    chatroomname\r\n  );\r\n  console.log(\r\n    \"api/chat.js chatGetPost 매개변수확인 chatroompassword -> \",\r\n    chatroompassword\r\n  );\r\n  const res = await jwtAxios.post(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const chatList = async () => {\r\n  const res = await jwtAxios.get(`${prefix}/list`);\r\n  return res.data;\r\n};\r\n\r\n//\r\nexport const chatAdd = async ({\r\n  chatroomname,\r\n  chatroompassword,\r\n  loginState,\r\n}) => {\r\n  console.log(\r\n    \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n    chatroomname\r\n  );\r\n  console.log(\r\n    \"api/chat.js chatAdd 매개변수확인 chatroompassword -> \",\r\n    chatroompassword\r\n  );\r\n  console.log(\r\n    \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n    chatroomname\r\n  );\r\n  const res = await jwtAxios.post(`${prefix}/create`, {\r\n    chatroomname,\r\n    chatroompassword,\r\n    loginState,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\n//삭제\r\nexport const chatDelete = async ({ chatroomname, chatroompassword }) => {\r\n  const res = await jwtAxios.delete(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\n//채팅\r\nimport { io } from \"socket.io-client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { chatAdd, chatGetPost } from \"../../api/chat\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\n\r\nconst BasicMenu = (props) => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  //채팅\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgList, setMsgList] = useState([]);\r\n  const [chatroomname, setChatroomname] = useState(\"\");\r\n  const [chatroompassword, setChatroompassword] = useState(\"\");\r\n\r\n  const refChatRoom = useRef();\r\n  const refChatRoompassword = useRef();\r\n  const { moveToLogin } = useCustomLogin();\r\n  const refModalBody = useRef();\r\n  //소켓\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const handleMsg = (e) => {\r\n    //console.log(\"handleMsg 이벤트핸들러 진입 ->\", e.target.value);\r\n    setMsg(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroomnameInput = (e) => {\r\n    //console.log(\"handleChatroomnameInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroomname(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroompasswordInput = (e) => {\r\n    //console.log(\"handleChatroompasswordInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroompassword(() => e.target.value);\r\n  };\r\n  const chatStartClick = (e) => {\r\n    console.log(\"chatStartClick 이벤트핸들러함수 진입 \");\r\n\r\n    e.preventDefault();\r\n    if (!isLogin) {\r\n      alert(\"로그인 후 이용가능합니다.\");\r\n      return moveToLogin();\r\n    }\r\n\r\n    if (chatroomname === \"\" || chatroomname === undefined) {\r\n      alert(\"방 이름을 입력하세요!\");\r\n      return;\r\n    }\r\n    if (chatroompassword === \"\" || chatroompassword === undefined) {\r\n      alert(\"방 비밀번호를 입력하세요!\");\r\n      return;\r\n    }\r\n\r\n    //네임스페이스둘경우\r\n    //const socket = io(\"/pic\", {\r\n    const socket = io({\r\n      //const socket = io(\"https://picdiary2025.store/\", {\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"52.78.155.180\", {\r\n\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"http://52.78.155.180:8082\", {\r\n\r\n      //path: \"/my-custom-path/\",\r\n      //추가\r\n      //transports: [\"websocket\"], //폴링시도\r\n      //path: \"/ws\",\r\n      autoConnect: false,\r\n\r\n      // query: {\r\n      //   username: loginState, //email\r\n      //   chatroomname: e.target.chatroomname.value,\r\n      //   chatroompassword: e.target.chatroompassword.value,\r\n      // },\r\n    });\r\n    socket.connect();\r\n\r\n    setSocket(() => socket);\r\n\r\n    const sendData = {\r\n      username: loginState, //email\r\n      chatroomname,\r\n      chatroompassword,\r\n    };\r\n    socket.emit(\"roomcreate\", sendData);\r\n  }; //chatStartClick\r\n\r\n  const handleSubmitChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"handleSubmitChat() 진입 \");\r\n    const sendData = {\r\n      //message: e.target.chatcontents.value,\r\n      message: msg,\r\n      username: loginState,\r\n      chatroomname,\r\n    };\r\n\r\n    socket.emit(\"message\", sendData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    function messageCallback(msg) {\r\n      console.log(\"handleSubmitChat() 진입 message 콜백함수 진입 msg-> \", msg);\r\n\r\n      const { message, username, chatroomname } = msg;\r\n\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: message,\r\n          type: loginState === username ? \"me\" : \"other\",\r\n          id: username,\r\n        },\r\n      ]);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n      setMsg(() => \"\");\r\n    }\r\n    function goodbyeCallback(msg) {\r\n      console.log(\r\n        \"out 이벤트 리액트에서 받아서 goodbyeCallback() 진입 msg => \",\r\n        msg\r\n      );\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg.message,\r\n          type: \"goodbye\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n\r\n      const socketidcheck = socket.id;\r\n      console.log(\"goodbyeCallback() 소켓 id확인 \", socketidcheck);\r\n    }\r\n\r\n    function roomcreateCallback(msg) {\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg,\r\n          type: \"welcome\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n      setModalVisible(() => true);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    } //callback\r\n    socket?.on(\"roomcreate\", roomcreateCallback);\r\n    socket?.on(\"message\", messageCallback);\r\n    socket?.on(\"out\", goodbyeCallback);\r\n\r\n    return () => {\r\n      socket?.off(\"message\");\r\n      socket?.off(\"out\");\r\n      socket?.off(\"roomcreate\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const chatCloseModal = () => {\r\n    console.log(\"chatCloseModal() 진입\");\r\n    if (window.confirm(\"채팅방에서 나가시겠습니까?\")) {\r\n      console.log(\"chatCloseModal onClick 내 out 소켓이벤트 전달전 \");\r\n      socket.emit(\"out\", { chatroomname, loginState, chatroompassword });\r\n      setSocket(null);\r\n      setMsgList([]);\r\n      setChatroomname(\"\");\r\n      setChatroompassword(\"\");\r\n      setModalVisible(() => false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"bg-body-tertiary\"\r\n        expand=\"lg\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand>\r\n            <Image\r\n              src=\"/img/sunglass.png\"\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n            />\r\n            하루관리\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {isLogin ? (\r\n                <>\r\n                  <Nav.Link href=\"/diary\">사진일기</Nav.Link>\r\n                  <Nav.Link href=\"/diet\">식단관리</Nav.Link>\r\n                  <Nav.Link href=\"/exercise\">운동관리</Nav.Link>\r\n                  <Nav.Link href=\"/money\">금전관리</Nav.Link>\r\n                  <Nav.Link href=\"/logout\">로그아웃</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Nav.Link href=\"/login\">로그인</Nav.Link>\r\n                  <Nav.Link href=\"/join\">회원가입</Nav.Link>\r\n                </>\r\n              )}\r\n            </Nav>\r\n            <Form onSubmit={(e) => chatStartClick(e)}>\r\n              {\" \"}\r\n              <InputGroup size=\"sm\" style={{ width: \"600px\" }}>\r\n                <InputGroup.Text>채팅방명</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroomname\"\r\n                  onChange={handleChatroomnameInput}\r\n                  value={chatroomname}\r\n                  ref={refChatRoom}\r\n                />\r\n                <InputGroup.Text>방비밀번호</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroompassword\"\r\n                  ref={refChatRoompassword}\r\n                  onChange={handleChatroompasswordInput}\r\n                  value={chatroompassword}\r\n                />\r\n                <Button variant=\"outline-secondary\" type=\"submit\">\r\n                  채팅하기\r\n                </Button>\r\n              </InputGroup>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {modalVisible && (\r\n        <>\r\n          <div className=\"modal show\" style={{ display: \"block\" }}>\r\n            <Modal.Dialog>\r\n              <Modal.Header>\r\n                <Modal.Title> 채팅방명 : {chatroomname} </Modal.Title>\r\n                &nbsp; &nbsp;\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  style={{ textAlign: \"left\" }}\r\n                  onClick={() => chatCloseModal()}\r\n                  type=\"button\"\r\n                >\r\n                  채팅창닫기\r\n                </Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div style={{ overflow: \"scroll\", height: \"500px\" }}>\r\n                  <ul>\r\n                    {msgList.map((v, i) =>\r\n                      v.type === \"welcome\" || v.type === \"goodbye\" ? (\r\n                        <li key={i} style={{ listStyle: \"none\" }}>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                          <div>{v.msg}</div>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                        </li>\r\n                      ) : v.type === \"me\" ? (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_1`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      ) : (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_2`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#000\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    )}\r\n                    <li ref={refModalBody} style={{ listStyle: \"none\" }} />\r\n                  </ul>\r\n                </div>\r\n              </Modal.Body>\r\n              <Form onSubmit={(e) => handleSubmitChat(e)}>\r\n                <Modal.Footer>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                      채팅내용\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                      onChange={(e) => handleMsg(e)}\r\n                      value={msg}\r\n                      name=\"chatcontents\"\r\n                    />\r\n                  </InputGroup>\r\n\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    type=\"submit\"\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    메시지보내기\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal.Dialog>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicMenu;\r\n","import BasicMenu from \"../menus/BasicMenu\";\r\n\r\nconst Header = (props) => {\r\n  return <BasicMenu isLogin={props.isLogin} />;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, cloneElement } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst LayoutIndex = ({ children }) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const { loginState, isLogin } = useCustomLogin();\r\n\r\n  //console.log(\"loginState -> \", loginState);\r\n  //console.log(\"isLogin -> \", isLogin);\r\n\r\n  // const clonedElement = cloneElement(children, { today: date });\r\n\r\n  return (\r\n    <>\r\n      <Header isLogin={isLogin} />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutIndex;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n  if (!param) {\r\n    return defaultValue;\r\n  }\r\n  return parseInt(param);\r\n};\r\n\r\nconst useCustomMove = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const [queryParams] = useSearchParams();\r\n\r\n  const page = queryParams.get(\"page\") ? parseInt(queryParams.get(\"page\")) : 1;\r\n  const size = queryParams.get(\"size\") ? parseInt(queryParams.get(\"size\")) : 10;\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString();\r\n\r\n  const moveToList = (pageParam) => {\r\n    let queryStr = \"\";\r\n\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    //    navigate({ pathname: `../list`, search: queryStr });\r\n\r\n    setRefresh(!refresh);\r\n  }; //moveToList\r\n\r\n  //추가\r\n  const moveToModify = (num) => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToRead = (num) => {\r\n    navigate({ pathname: `../read/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToCreate = () => {\r\n    navigate({ pathname: `../create` });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    navigate({ pathname: `/login` });\r\n  };\r\n  return {\r\n    moveToList,\r\n    page,\r\n    size,\r\n    moveToModify,\r\n    refresh,\r\n    moveToRead,\r\n    moveToLogin,\r\n    moveToCreate,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getExerciseListAsync,\r\n  postExerciseAsync,\r\n  patchExerciseAsync,\r\n  deleteExerciseAsync,\r\n} from \"../slices/exerciseSlice\";\r\nimport { replace, useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomExercise = () => {\r\n  const exerciseState = useSelector((state) => state.exerciseSlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const postExerciseC = ({ diaryParam, picture }) => {\r\n    const payload = dispatch(postExerciseAsync({ diaryParam, picture }));\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getExerciseListC = async () => {\r\n    await dispatch(getExerciseListAsync());\r\n  };\r\n\r\n  //수정\r\n  const patchExerciseC = ({ exerciseParam }) => {\r\n    const payload = dispatch(patchExerciseAsync({ exerciseParam }));\r\n    return payload; //thunk에서 받은 액션결과전달\r\n  };\r\n\r\n  const moveToExerciseRead = (dateobject) => {\r\n    navigate({ pathname: `../read/${dateobject}` });\r\n  };\r\n\r\n  const moveToExerciseList = () => {\r\n    navigate({ pathname: \"../\", replace: \"true\" });\r\n  };\r\n\r\n  const moveToExerciseModify = ({ dateobject, whenchoose }) => {\r\n    navigate({ pathname: `../modify/${dateobject}/${whenchoose}` });\r\n  };\r\n\r\n  const moveToExerciseCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}`, replace: \"true\" });\r\n  };\r\n\r\n  const deleteExerciseC = (id) => {\r\n    const payload = dispatch(deleteExerciseAsync(id));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    exerciseState,\r\n    postExerciseC,\r\n    deleteExerciseC,\r\n    patchExerciseC,\r\n    moveToExerciseRead,\r\n    moveToExerciseModify,\r\n    moveToExerciseCreate,\r\n    getExerciseListC,\r\n    moveToExerciseList,\r\n  };\r\n};\r\n\r\nexport default useCustomExercise;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { Link, Navigate, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport \"../layout/stylesCalendar.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport useCustomExercise from \"../../hooks/useCustomExercise\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { getChooseExercise, getExerciseList } from \"../../api/exerciseApi\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst whenchooseReturn = (whenchoose) => {\r\n  switch (whenchoose) {\r\n    case \"1\":\r\n      return \"아침\";\r\n    case \"2\":\r\n      return \"점심\";\r\n\r\n    case \"3\":\r\n      return \"저녁\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nconst imageReturn = (whenchoose) => {\r\n  switch (whenchoose) {\r\n    case \"1\":\r\n      return \"bicep\";\r\n    case \"2\":\r\n      return \"tennis\";\r\n\r\n    case \"3\":\r\n      return \"basketball\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst chooseReturn = (choose) => {\r\n  switch (choose) {\r\n    case \"1\":\r\n      return \"달리기\";\r\n    case \"2\":\r\n      return \"웨이트\";\r\n    case \"3\":\r\n      return `구기종목or복싱`;\r\n    case \"4\":\r\n      return \"등산\";\r\n    case \"5\":\r\n      return \"필라테스요가\";\r\n\r\n    case \"6\":\r\n      return \"그외\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst makeCalendar = (d) => {\r\n  let date = new Date(d);\r\n  const currentYear = new Date(date).getFullYear(); //예)Mon Apr 01 2024 10:27:04 GMT+0900 (한국 표준시)\r\n  const currentMonth = new Date(date).getMonth() + 1;\r\n  const firstDay = new Date(date.setDate(1)).getDay(); //1 앞에0안붙는다\r\n\r\n  //현재 달력첫째날\r\n  let calfirst = \"\";\r\n  function getCalfirst() {\r\n    calfirst += `${currentYear}-`;\r\n\r\n    if (currentMonth < 10) {\r\n      calfirst += `0${currentMonth}`;\r\n    } else {\r\n      calfirst += `${currentMonth}`;\r\n    }\r\n    //calfirst += `01`\r\n    return calfirst;\r\n  } //calfirst 현재달력첫날\r\n\r\n  const lastDay = new Date(currentYear, currentMonth, 0).getDate();\r\n  //console.log(\"lastDay값 ->\"+lastDay)//30\r\n  const limitDay = firstDay + lastDay;\r\n  //console.log(\"limitDay값 ->\"+limitDay)//31\r\n  const nextDay = Math.ceil(limitDay / 7) * 7;\r\n  //console.log(\"nextDay값 ->\"+nextDay)//35 35-31=4칸 빈칸만들어진다.\r\n\r\n  return { firstDay, lastDay, limitDay, nextDay };\r\n};\r\n\r\nconst CalendarItem = (props) => {\r\n  //UserId, content ,createdAt ,id , picture\r\n  const { exercise, dateobject } = props.i; //api서버후 db에서 받은값\r\n\r\n  console.log(\"ExerciseListComponent.js CalendarItem exercise -> \", exercise);\r\n  return exercise.map((i, index) => (\r\n    <React.Fragment key={index}>\r\n      {i.id && i.whenchoose === \"1\" ? (\r\n        // <Link\r\n        //   to={`../read/${i.choose}/${dateobject}`}\r\n        //   style={{ textDecoration: \"none\", color: \"black\" }}\r\n        // >\r\n        <>\r\n          <Image\r\n            src=\"/img/biceps.png\"\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            rounded\r\n          />\r\n          {whenchooseReturn(i.whenchoose)}({chooseReturn(i.choose)}) <br />\r\n        </>\r\n      ) : // </Link>\r\n      i.id && i.whenchoose === \"2\" ? (\r\n        // <Link\r\n        //   to={`../read/${i.choose}/${dateobject}`}\r\n        //   style={{ textDecoration: \"none\", color: \"black\" }}\r\n        // >\r\n        <>\r\n          <Image\r\n            src=\"/img/tennis.png\"\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            rounded\r\n          />\r\n          {whenchooseReturn(i.whenchoose)}({chooseReturn(i.choose)})<br />\r\n        </>\r\n      ) : (\r\n        // </Link>\r\n        // <Link\r\n        //   to={`../read/${i.choose}/${dateobject}`}\r\n        //   style={{ textDecoration: \"none\", color: \"black\" }}\r\n        // >\r\n        <>\r\n          <Image\r\n            src=\"/img/basketball.png\"\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            rounded\r\n          />\r\n          {whenchooseReturn(i.whenchoose)}({chooseReturn(i.choose)})<br />\r\n        </>\r\n        // </Link>\r\n      )}\r\n    </React.Fragment>\r\n  ));\r\n};\r\n\r\nconst ExerciseListComponent = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const { moveToExerciseCreate } = useCustomExercise();\r\n  const { effectException } = useCustomLogin();\r\n  const navigate = useNavigate();\r\n\r\n  const [exercise, setExercise] = useState([]);\r\n\r\n  const [currentMonth, setCurrentMonth] = useState(\"\");\r\n  const [currentYear, setCurrentYear] = useState(\"\");\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [fullcurrentDate, setFullCurrentDate] = useState(\"\");\r\n\r\n  const [searchMonth, setSearchMonth] = useState(0);\r\n  const [searchYear, setSearchYear] = useState(0);\r\n  const [beforeDateItemArray, setBeforeDateItemArray] = useState([]);\r\n  const [afterDateItemArray, setAfterDateItemArray] = useState([]);\r\n  const [dateItem, setDateItem] = useState([]);\r\n  const [lastDay, setLastDay] = useState(\"\");\r\n  const [firstDay, setFirstDay] = useState(\"\");\r\n  const [nextDay, setNextDay] = useState(\"\");\r\n  const [limitDay, setLimitDay] = useState(\"\");\r\n  const [check, setCheck] = useState(0);\r\n  const [make, setMake] = useState(false);\r\n  let searchParamsYear = searchParams.get(\"year\");\r\n  let searchParamsMonth = searchParams.get(\"month\");\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(\"useLayoutEffect()  진입\");\r\n    setDateItem(() => []);\r\n    setMake(() => false);\r\n    let date = new Date();\r\n\r\n    let basicYear = date.getFullYear();\r\n    let basicMonth = date.getMonth() + 1;\r\n    basicMonth = basicMonth < 10 ? \"0\" + basicMonth : basicMonth;\r\n    date = `${basicYear}-${basicMonth}-01`;\r\n\r\n    if (searchParamsYear !== null && searchParamsMonth !== null) {\r\n      console.log(\r\n        \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n        searchParamsYear\r\n      );\r\n      console.log(\r\n        \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n        searchParamsMonth\r\n      );\r\n      setSearchMonth(() => Number(searchParamsMonth));\r\n      setSearchYear(() => searchParamsYear);\r\n\r\n      date = new Date(`${searchParamsYear}-${searchParamsMonth}-01`);\r\n      console.log(\"date-> \", date);\r\n    }\r\n    setCurrentDate(() => date);\r\n    const newdate = new Date(date);\r\n    setCurrentYear(\"\" + newdate.getFullYear());\r\n    setCurrentMonth(newdate.getMonth() + 1);\r\n    setFullCurrentDate(() => newdate);\r\n  }, [searchParamsYear, searchParamsMonth]);\r\n\r\n  useEffect(() => {\r\n    if (fullcurrentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() fullcurrentDate 존재할경우 =>  \",\r\n        fullcurrentDate\r\n      );\r\n\r\n      const { firstDay, nextDay, limitDay, lastDay } =\r\n        makeCalendar(fullcurrentDate);\r\n\r\n      setLastDay(lastDay);\r\n      setFirstDay(firstDay);\r\n      setNextDay(nextDay);\r\n      setLimitDay(limitDay);\r\n    } //if\r\n\r\n    return () => {\r\n      console.log(\"useEffect() makeCalendar() 반환변수들 초기화\");\r\n\r\n      setLastDay(() => \"\");\r\n      setFirstDay(() => \"\");\r\n      setNextDay(() => \"\");\r\n      setLimitDay(() => \"\");\r\n    };\r\n  }, [fullcurrentDate]);\r\n\r\n  //달력에서 이전빈칸\r\n  useEffect(() => {\r\n    console.log(\"useEffect() 달력 데이터넣기 진입\");\r\n\r\n    if (make === true) {\r\n      console.log(\"useEffect() 달력 데이터넣기 진입 make상태가 true진입\");\r\n\r\n      let dateItem = [];\r\n\r\n      for (let i = 1, j = 0; i <= lastDay; i++, j++) {\r\n        console.log(\"useEffect() 달력 데이터넣기 for문 진입\");\r\n\r\n        let currentYear = new Date(fullcurrentDate).getFullYear();\r\n        let currentMonth = new Date(fullcurrentDate).getMonth() + 1;\r\n        currentMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\r\n        let ichange = i < 10 ? \"0\" + i : i;\r\n        let dateobject = `${currentYear}-${currentMonth}-${ichange}`;\r\n        console.log(\"dateobject-> \", dateobject);\r\n        dateItem[j] = {\r\n          dateitem: i,\r\n          dateobject: dateobject,\r\n          exercise: exercise.filter((a) => a.dateobject === dateobject),\r\n        };\r\n      }\r\n      setDateItem(() => dateItem);\r\n\r\n      const beforeDateItem = firstDay - 0;\r\n      let beforeDateItemArray = [];\r\n\r\n      if (beforeDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= beforeDateItem; i++, j++) {\r\n          beforeDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setBeforeDateItemArray(() => beforeDateItemArray);\r\n\r\n      //달력에서 이후빈칸\r\n      const afterDateItem = nextDay - limitDay;\r\n      let afterDateItemArray = [];\r\n\r\n      if (afterDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= afterDateItem; i++, j++) {\r\n          afterDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setAfterDateItemArray(() => afterDateItemArray);\r\n    }\r\n  }, [make]);\r\n\r\n  useEffect(() => {\r\n    if (currentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() 진입 axios 비동기요청 currentDate 존재할경우 ->\",\r\n        currentDate\r\n      );\r\n      const getExerciseListEI = async () => {\r\n        getExerciseList({ currentDate })\r\n          .then((result) => {\r\n            console.log(\"ExerciseListComponent.js then()진입 \", result);\r\n            if (!result.error) {\r\n              setExercise(() => result);\r\n              setMake(() => true);\r\n            } else {\r\n              setMake(() => true);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"ExerciseListComponent.js catch()진입 \", err);\r\n            effectException(err);\r\n          });\r\n      }; //getExerciseListEI\r\n      getExerciseListEI();\r\n    } //if\r\n  }, [currentDate]);\r\n\r\n  // 이전달 이동\r\n  const BeforeMonthMove = (currentDate) => {\r\n    console.log(\"BeforeMonthMove() 진입  => \", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n    let beforechangeDate = new Date(tempdate.setMonth(tempdate.getMonth() - 1));\r\n    let beforecurrentYear = new Date(beforechangeDate).getFullYear();\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforecurrentYear => \",\r\n      beforecurrentYear\r\n    );\r\n\r\n    let beforechangeMonth = new Date(beforechangeDate).getMonth() + 1;\r\n    beforechangeMonth =\r\n      beforechangeMonth < 10 ? \"0\" + beforechangeMonth : beforechangeMonth;\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforechangeMonth => \",\r\n      beforechangeMonth\r\n    );\r\n\r\n    navigate(`?year=${beforecurrentYear}&month=${beforechangeMonth}`);\r\n  };\r\n\r\n  //다음달이동\r\n  const NextMonthMove = (currentDate) => {\r\n    console.log(\"NextMonthMove() 진입 currentDate ->\", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n\r\n    let afterchangeDate = new Date(tempdate.setMonth(tempdate.getMonth()));\r\n    console.log(\"NextMonthMove() 진입 afterchangeDate ->\", afterchangeDate);\r\n\r\n    let aftercurrentYear = new Date(afterchangeDate).getFullYear();\r\n    console.log(\"NextMonthMove() 진입 aftercurrentYear ->\", aftercurrentYear);\r\n\r\n    let afterchangeMonth = new Date(afterchangeDate).getMonth() + 2;\r\n    afterchangeMonth =\r\n      afterchangeMonth < 10 ? \"0\" + afterchangeMonth : afterchangeMonth;\r\n    console.log(\"NextMonthMove() 진입 afterchangeMonth ->\", afterchangeMonth);\r\n\r\n    navigate(`?year=${aftercurrentYear}&month=${afterchangeMonth}`);\r\n  };\r\n\r\n  const createHandler = (dateitem) => {\r\n    console.log(\r\n      \"ExerciseListComponent.js createHandler() dateitme => \",\r\n      dateitem\r\n    );\r\n    const paramMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\r\n    dateitem = dateitem < 10 ? \"0\" + dateitem : dateitem;\r\n    const paramdate = `${currentYear}-${paramMonth}-${dateitem}`;\r\n    console.log(\r\n      \"ExerciseListComponent.js createHandler() paramdate => \",\r\n      paramdate\r\n    );\r\n\r\n    const getChooseExerciseEI = async () => {\r\n      await getChooseExercise(paramdate).then((result) => {\r\n        console.log(\r\n          \"ExerciseListComponent.js createHandler() axios 결과 then() -> \",\r\n          result\r\n        ); //\"1234\"\r\n        if (result.result !== \"\" || result.result !== null) {\r\n          console.log(\"if문 진입\");\r\n          if (result.result.length === 3) {\r\n            console.log(\"갯수 3일경우 진입\");\r\n\r\n            alert(paramdate + \"일자 운동을 모두 작성했습니다.\");\r\n            return;\r\n          } else {\r\n            console.log(\"갯수 3이아닐경우 진입\");\r\n\r\n            moveToExerciseCreate(paramdate);\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    getChooseExerciseEI();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {\" \"}\r\n      <section className=\"py-5\">\r\n        <div className=\"calrap\" style={{ margin: \"0 auto\" }}>\r\n          <div className=\"calheader\">\r\n            <div className=\"calbtn calprevDay\">\r\n              <button onClick={() => BeforeMonthMove(currentDate)}>이전</button>\r\n            </div>\r\n            <h2 className=\"caldateTitle\">\r\n              {currentYear}년 {currentMonth}월\r\n            </h2>\r\n            <div className=\"calbtn calnextDay\">\r\n              <button onClick={() => NextMonthMove(currentDate)}>이후</button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <h6 style={{ textAlign: \"right\", color: \"tomato\" }}>\r\n            <i>일자 클릭시 운동등록페이지로 이동합니다!</i>\r\n          </h6>\r\n          <br />\r\n\r\n          <div className=\"calgrid caldateHead\">\r\n            <div key={\"0\"}>일</div>\r\n            <div key={\"1\"}>월</div>\r\n            <div key={\"2\"}>화</div>\r\n            <div key={\"3\"}>수</div>\r\n            <div key={\"4\"}>목</div>\r\n            <div key={\"5\"}>금</div>\r\n            <div key={\"6\"}>토</div>\r\n          </div>\r\n\r\n          <div className=\"calgrid caldateBoard\">\r\n            {beforeDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n\r\n            {dateItem.map((i, index) => (\r\n              <div key={index}>\r\n                {i.exercise && i.exercise.length !== 0 ? (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => createHandler(i.dateitem)}\r\n                      style={{ all: \"unset\" }}\r\n                    >\r\n                      {i.dateitem}\r\n                    </button>\r\n                    <Link\r\n                      to={`../read/${i.dateobject}`}\r\n                      style={{ textDecoration: \"none\", color: \"black\" }}\r\n                    >\r\n                      &nbsp;&nbsp;모두보기 <br />\r\n                      <br />\r\n                    </Link>\r\n                    <CalendarItem key={index} i={i} />\r\n                  </>\r\n                ) : (\r\n                  <Link\r\n                    to={`../create/${i.dateobject}`}\r\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  >\r\n                    {i.dateitem}\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            ))}\r\n            {afterDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseListComponent;\r\n","import LayoutIndex from \"../../components/layout/LayoutIndex\";\r\nimport ExerciseListComponent from \"../../components/exercise/ExerciseListComponent\";\r\nconst ExerciseListPage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <ExerciseListComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseListPage;\r\n"],"names":["Footer","_jsx","Navbar","className","children","Container","Brand","_jsxs","style","fontSize","textAlign","alt","src","width","height","props","loginState","isLogin","useCustomLogin","modalVisible","setModalVisible","useState","msg","setMsg","msgList","setMsgList","chatroomname","setChatroomname","chatroompassword","setChatroompassword","refChatRoom","useRef","refChatRoompassword","moveToLogin","refModalBody","socket","setSocket","useEffect","on","_refModalBody$current2","prev","type","id","current","scrollIntoView","behavior","block","_refModalBody$current","console","log","message","username","socketidcheck","off","_Fragment","expand","display","alignItems","justifyContent","fluid","Image","Collapse","Nav","Link","href","Form","onSubmit","e","preventDefault","alert","undefined","io","autoConnect","connect","sendData","emit","chatStartClick","InputGroup","size","Text","Control","name","onChange","target","value","ref","Button","variant","Modal","Dialog","Header","Title","onClick","window","confirm","Body","overflow","map","v","i","listStyle","flex","padding","backgroundColor","marginTop","fontWeight","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","handleSubmitChat","handleMsg","BasicMenu","_ref","date","setDate","Date","getNum","param","defaultValue","parseInt","useCustomMove","navigate","useNavigate","refresh","setRefresh","queryParams","useSearchParams","page","get","queryDefault","createSearchParams","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","moveToModify","num","pathname","search","moveToRead","moveToCreate","useCustomExercise","exerciseState","useSelector","state","exerciseSlice","dispatch","useDispatch","postExerciseC","diaryParam","picture","postExerciseAsync","deleteExerciseC","deleteExerciseAsync","patchExerciseC","_ref2","exerciseParam","patchExerciseAsync","moveToExerciseRead","dateobject","moveToExerciseModify","_ref3","whenchoose","moveToExerciseCreate","replace","getExerciseListC","async","getExerciseListAsync","moveToExerciseList","whenchooseReturn","chooseReturn","choose","CalendarItem","exercise","index","React","rounded","ExerciseListComponent","searchParams","effectException","setExercise","currentMonth","setCurrentMonth","currentYear","setCurrentYear","currentDate","setCurrentDate","fullcurrentDate","setFullCurrentDate","searchMonth","setSearchMonth","searchYear","setSearchYear","beforeDateItemArray","setBeforeDateItemArray","afterDateItemArray","setAfterDateItemArray","dateItem","setDateItem","lastDay","setLastDay","firstDay","setFirstDay","nextDay","setNextDay","limitDay","setLimitDay","check","setCheck","make","setMake","searchParamsYear","searchParamsMonth","useLayoutEffect","basicYear","getFullYear","basicMonth","getMonth","Number","newdate","d","getDay","getDate","Math","ceil","makeCalendar","j","dateitem","filter","a","beforeDateItem","afterDateItem","getExerciseList","then","result","error","catch","err","getExerciseListEI","margin","tempdate","beforechangeDate","setMonth","beforecurrentYear","beforechangeMonth","BeforeMonthMove","afterchangeDate","aftercurrentYear","afterchangeMonth","NextMonthMove","length","paramdate","getChooseExercise","getChooseExerciseEI","createHandler","all","to","textDecoration","ExerciseListPage","LayoutIndex"],"sourceRoot":""}