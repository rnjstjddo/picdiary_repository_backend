{"version":3,"file":"static/js/324.29d03413.chunk.js","mappings":"2OAUA,MAAMA,EAAY,CAChBC,QAAS,GACTC,QAAS,GACTC,WAAY,GACZC,MAAO,IAsJT,EApJ6BC,KAC3B,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,IAAKR,KAC3CS,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,IAC7BG,GAAeC,EAAAA,EAAAA,cAClBC,IAGCP,EAAWO,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MACrCT,EAAc,IAAKD,GAAa,GAElC,CAACA,KAGIW,EAASC,IAAcV,EAAAA,EAAAA,WAAS,IACjC,WAAEW,EAAU,gBAAEC,EAAe,kBAAEC,IAAsBC,EAAAA,EAAAA,KAC3D,IAAI,WAAEC,IAAeC,EAAAA,EAAAA,KACrB,IAAI,WAAErB,IAAesB,EAAAA,EAAAA,KAmDrB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iDACJC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAACI,EAAAA,EAAI,CAACC,SA7CqBlB,IAC7BA,EAAEmB,iBAEF1B,EAAkB,MAAIiB,EACtBjB,EAAuB,WAAIH,EAC3BI,EAAc,IAAKD,IAInB,MAAM,QAAEJ,GAAYW,EAAEC,QACtBmB,EAAAA,EAAAA,IAAU,CAAE3B,aAAYJ,YACrBgC,MAAMC,IAKiB,YAAlBA,EAAOA,SACTC,MAAMjC,EAAa,iFACfgC,EAAO1B,QACT4B,IAAIC,gBAAgB7B,GACpBC,EAAS,KAEXU,EAAgBe,EAAOI,KAErBJ,EAAOK,QAETJ,MAAMjC,EAAa,6FACnBkB,EAAkBlB,GACpB,IAEDsC,OAAOC,IAENN,MAAMjC,EAAa,4FACnBkB,EAAkBlB,EAAW,GAC7B,EAWoCyB,SAAA,EACpCF,EAAAA,EAAAA,MAACI,EAAAA,EAAKa,MAAK,CAAChB,UAAU,OAAMC,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAKc,MAAK,CAAAhB,SAAC,2CACZC,EAAAA,EAAAA,KAACC,EAAAA,EAAKe,QAAO,CACXC,KAAK,OACL/B,KAAK,aACLC,MAAOb,EACP4C,UAAQ,KAEVlB,EAAAA,EAAAA,KAACC,EAAAA,EAAKkB,KAAI,CAACrB,UAAU,mBAEvBD,EAAAA,EAAAA,MAACI,EAAAA,EAAKa,MAAK,CAAChB,UAAU,OAAMC,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAKc,MAAK,CAAAhB,SAAC,8BACZC,EAAAA,EAAAA,KAACC,EAAAA,EAAKe,QAAO,CACXI,GAAG,WACHC,KAAM,EACNnC,KAAK,UACLC,MAAOV,EAAWL,QAClBkD,SAAUxC,EACVyC,UAAQ,QAGZ1B,EAAAA,EAAAA,MAACI,EAAAA,EAAKa,MAAK,CAACU,UAAU,WAAW1B,UAAU,OAAMC,SAAA,EAC/CC,EAAAA,EAAAA,KAACC,EAAAA,EAAKc,MAAK,CAAAhB,SAAC,8BACZC,EAAAA,EAAAA,KAACC,EAAAA,EAAKe,QAAO,CACXC,KAAK,OACL/B,KAAK,UACLoC,SApFiBtC,IAEzB,IAAKA,EAAEC,OAAOwC,MAAO,OACrB,MAAMC,EAAO1C,EAAEC,OAAOwC,MAAM,GAC5B,GAAIC,EAAM,CACR,IAAI9C,EAAQ+C,OAAOnB,IAAIoB,gBAAgBF,GACvC7C,EAASD,EACX,CAEAS,GAAW,EAAK,IA6ETD,IACCS,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAA9B,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,IAAKnD,EAAOoD,SAAO,WAkBhChC,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACC,QAAQ,kBAAkBjB,KAAK,SAAQlB,SAAC,0CAEvC,QAETC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,GAAI,UAAUrC,UAClBC,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACC,QAAQ,oBAAoBjB,KAAK,SAAQlB,SAAC,uDAG7C,QAEPC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,GAAI,IAAIrC,UACZC,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACC,QAAQ,kBAAkBjB,KAAK,SAAQlB,SAAC,mCAMpDC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,WACI,ECnJV,EAVwBqC,KAEpBrC,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAA9B,UACEC,EAAAA,EAAAA,KAACsC,EAAAA,EAAW,CAAAvC,UACVC,EAAAA,EAAAA,KAACxB,EAAoB,O,6ECJ7B,MAsBA,EAtBe+D,KAEXvC,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CAAC1C,UAAU,mBAAkBC,UAClCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CAAA1C,UACRC,EAAAA,EAAAA,KAACwC,EAAAA,EAAOE,MAAK,CAAA3C,UACXF,EAAAA,EAAAA,MAAA,QAAM8C,MAAO,CAAEC,SAAU,OAAQC,UAAW,SAAU9C,SAAA,EACpDC,EAAAA,EAAAA,KAAA,OACE8C,IAAI,GACJf,IAAI,qBACJgB,MAAM,KACNC,OAAO,KACPlD,UAAU,6BACT,IAAI,0LAEJE,EAAAA,EAAAA,KAAA,SAAM,4E,oGCbrB,MC0YA,EA7XmBiD,IACjB,MAAM,WAAEvD,EAAU,QAAEwD,IAAYvD,EAAAA,EAAAA,MACzBwD,EAAcC,IAAmBzE,EAAAA,EAAAA,WAAS,IAG1C0E,EAAKC,IAAU3E,EAAAA,EAAAA,UAAS,KACxB4E,EAASC,IAAc7E,EAAAA,EAAAA,UAAS,KAChC8E,EAAcC,IAAmB/E,EAAAA,EAAAA,UAAS,KAC1CgF,EAAkBC,IAAuBjF,EAAAA,EAAAA,UAAS,IAEnDkF,GAAcC,EAAAA,EAAAA,UACdC,GAAsBD,EAAAA,EAAAA,WACtB,YAAEE,IAAgBrE,EAAAA,EAAAA,KAClBsE,GAAeH,EAAAA,EAAAA,WAEdI,EAAQC,IAAaxF,EAAAA,EAAAA,UAAS,OAkFrCyF,EAAAA,EAAAA,YAAU,KAqDF,OAANF,QAAM,IAANA,GAAAA,EAAQG,GAAG,cAfX,SAA4BhB,GAAM,IAADiB,EAC/Bd,GAAYe,GAAS,IAChBA,EACH,CACElB,IAAKA,EACLpC,KAAM,UACNP,GAAI,OAGR0C,GAAgB,KAAM,IACF,QAApBkB,EAAAL,EAAaO,eAAO,IAAAF,GAApBA,EAAsBG,eAAe,CACnCC,SAAU,SACVC,MAAO,OAEX,IAEM,OAANT,QAAM,IAANA,GAAAA,EAAQG,GAAG,WArDX,SAAyBhB,GAAM,IAADuB,EAG5B,MAAM,QAAEC,EAAO,SAAEC,EAAQ,aAAErB,GAAiBJ,EAE5CG,GAAYe,GAAS,IAChBA,EACH,CACElB,IAAKwB,EACL5D,KAAMvB,IAAeoF,EAAW,KAAO,QACvCpE,GAAIoE,MAGY,QAApBF,EAAAX,EAAaO,eAAO,IAAAI,GAApBA,EAAsBH,eAAe,CACnCC,SAAU,SACVC,MAAO,QAETrB,GAAO,IAAM,IACf,IAoCM,OAANY,QAAM,IAANA,GAAAA,EAAQG,GAAG,OAnCX,SAAyBhB,GAKvBG,GAAYe,GAAS,IAChBA,EACH,CACElB,IAAKA,EAAIwB,QACT5D,KAAM,UACNP,GAAI,OAIcwD,EAAOxD,EAE/B,IAqBO,KACC,OAANwD,QAAM,IAANA,GAAAA,EAAQa,IAAI,WACN,OAANb,QAAM,IAANA,GAAAA,EAAQa,IAAI,OACN,OAANb,QAAM,IAANA,GAAAA,EAAQa,IAAI,aAAa,IAE1B,CAACb,IAeJ,OACErE,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAA9B,SAAA,EACEC,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CACL1C,UAAU,mBACVkF,OAAO,KACPrC,MAAO,CACLsC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAChBpF,UAEFF,EAAAA,EAAAA,MAAC4C,EAAAA,EAAS,CAAC2C,OAAK,EAAArF,SAAA,EACdF,EAAAA,EAAAA,MAAC2C,EAAAA,EAAOE,MAAK,CAAA3C,SAAA,EACXC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CACJC,IAAI,oBACJY,MAAO,CAAEK,OAAQ,OAAQD,MAAO,UAChC,+BAGJlD,EAAAA,EAAAA,MAAC2C,EAAAA,EAAO6C,SAAQ,CAAAtF,SAAA,EACdF,EAAAA,EAAAA,MAACyF,EAAAA,EAAG,CAACxF,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAACsF,EAAAA,EAAInD,KAAI,CAACoD,KAAK,IAAGxF,SAAC,SAClBmD,GACCrD,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAA9B,SAAA,EACEC,EAAAA,EAAAA,KAACsF,EAAAA,EAAInD,KAAI,CAACoD,KAAK,SAAQxF,SAAC,8BACxBC,EAAAA,EAAAA,KAACsF,EAAAA,EAAInD,KAAI,CAACoD,KAAK,QAAOxF,SAAC,8BACvBC,EAAAA,EAAAA,KAACsF,EAAAA,EAAInD,KAAI,CAACoD,KAAK,YAAWxF,SAAC,8BAC3BC,EAAAA,EAAAA,KAACsF,EAAAA,EAAInD,KAAI,CAACoD,KAAK,SAAQxF,SAAC,8BACxBC,EAAAA,EAAAA,KAACsF,EAAAA,EAAInD,KAAI,CAACoD,KAAK,UAASxF,SAAC,iCAG3BF,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAA9B,SAAA,EACEC,EAAAA,EAAAA,KAACsF,EAAAA,EAAInD,KAAI,CAACoD,KAAK,SAAQxF,SAAC,wBACxBC,EAAAA,EAAAA,KAACsF,EAAAA,EAAInD,KAAI,CAACoD,KAAK,QAAOxF,SAAC,oCAI7BF,EAAAA,EAAAA,MAACI,EAAAA,EAAI,CAACC,SAAWlB,GApLHA,KAItB,GADAA,EAAEmB,kBACG+C,EAEH,OADA3C,MAAM,yEACCyD,IAGT,GAAqB,KAAjBP,QAAwC+B,IAAjB/B,EAEzB,YADAlD,MAAM,6DAGR,GAAyB,KAArBoD,QAAgD6B,IAArB7B,EAE7B,YADApD,MAAM,yEAMR,MAAM2D,GAASuB,EAAAA,EAAAA,IAAG,CAYhBC,aAAa,IAQfxB,EAAOyB,UAEPxB,GAAU,IAAMD,IAEhB,MAAM0B,EAAW,CACfd,SAAUpF,EACV+D,eACAE,oBAEFO,EAAO2B,KAAK,aAAcD,EAAS,EAmIJE,CAAe9G,GAAGe,SAAA,CACtC,KACDF,EAAAA,EAAAA,MAACkG,EAAAA,EAAU,CAACC,KAAK,KAAKrD,MAAO,CAAEI,MAAO,SAAUhD,SAAA,EAC9CC,EAAAA,EAAAA,KAAC+F,EAAAA,EAAW5E,KAAI,CAAApB,SAAC,8BACjBC,EAAAA,EAAAA,KAACC,EAAAA,EAAKe,QAAO,CAGXC,KAAK,OACL/B,KAAK,eACLoC,SAtMiBtC,IAE/B0E,GAAgB,IAAM1E,EAAEC,OAAOE,OAAM,EAqMvBA,MAAOsE,EACPwC,IAAKpC,KAEP7D,EAAAA,EAAAA,KAAC+F,EAAAA,EAAW5E,KAAI,CAAApB,SAAC,oCACjBC,EAAAA,EAAAA,KAACC,EAAAA,EAAKe,QAAO,CAGXC,KAAK,OACL/B,KAAK,mBACL+G,IAAKlC,EACLzC,SA5MqBtC,IAEnC4E,GAAoB,IAAM5E,EAAEC,OAAOE,OAAM,EA2M3BA,MAAOwE,KAET3D,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACC,QAAQ,oBAAoBjB,KAAK,SAAQlB,SAAC,2CAQ3DoD,IACCnD,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAA9B,UACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAa6C,MAAO,CAAEsC,QAAS,SAAUlF,UACtDF,EAAAA,EAAAA,MAACqG,EAAAA,EAAMC,OAAM,CAAApG,SAAA,EACXF,EAAAA,EAAAA,MAACqG,EAAAA,EAAME,OAAM,CAAArG,SAAA,EACXF,EAAAA,EAAAA,MAACqG,EAAAA,EAAMG,MAAK,CAAAtG,SAAA,CAAC,+BAAS0D,EAAa,OAAe,aAElDzD,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CACLC,QAAQ,oBACRS,MAAO,CAAEE,UAAW,QACpByD,QAASA,KAzFnB3E,OAAO4E,QAAQ,gFAEjBrC,EAAO2B,KAAK,MAAO,CAAEpC,eAAc/D,aAAYiE,qBAC/CQ,EAAU,MACVX,EAAW,IACXE,EAAgB,IAChBE,EAAoB,IACpBR,GAAgB,KAAM,IAkFsB,EAChCnC,KAAK,SAAQlB,SACd,uCAIHC,EAAAA,EAAAA,KAACkG,EAAAA,EAAMM,KAAI,CAAAzG,UACTC,EAAAA,EAAAA,KAAA,OAAK2C,MAAO,CAAE8D,SAAU,SAAUzD,OAAQ,SAAUjD,UAClDF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGwD,EAAQmD,KAAI,CAACC,EAAGC,IACJ,YAAXD,EAAE1F,MAAiC,YAAX0F,EAAE1F,MACxBpB,EAAAA,EAAAA,MAAA,MAAY8C,MAAO,CAAEkE,UAAW,QAAS9G,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OACE2C,MAAO,CACLK,OAAQ,QACR8D,KAAM,WACNC,QAAS,SACTC,gBAAiB,cAGrBhH,EAAAA,EAAAA,KAAA,OAAAD,SAAM4G,EAAEtD,OACRrD,EAAAA,EAAAA,KAAA,OACE2C,MAAO,CACLK,OAAQ,QACR8D,KAAM,WACNC,QAAS,SACTC,gBAAiB,eAfdJ,GAmBI,OAAXD,EAAE1F,MACJpB,EAAAA,EAAAA,MAAA,MACE8C,MAAO,CACLE,UAAW,OACXgE,UAAW,QACX9G,SAAA,EAGFC,EAAAA,EAAAA,KAAA,OACE2C,MAAO,CACLsE,UAAW,MACXrE,SAAU,OACVsE,WAAY,QACZnH,SAED4G,EAAEjG,MAELV,EAAAA,EAAAA,KAAA,OACE2C,MAAO,CACLoE,QAAS,MACT9B,QAAS,eACTkC,qBAAsB,OACtBC,uBAAwB,OACxBC,wBAAyB,OACzBL,gBAAiB,WACjBjH,SAED4G,EAAEtD,QArBA,GAAGuD,QAyBV/G,EAAAA,EAAAA,MAAA,MACE8C,MAAO,CACLE,UAAW,QACXgE,UAAW,QACX9G,SAAA,EAGFC,EAAAA,EAAAA,KAAA,OACE2C,MAAO,CACLsE,UAAW,MACXrE,SAAU,OACVsE,WAAY,QACZnH,SAED4G,EAAEjG,MAELV,EAAAA,EAAAA,KAAA,OACE2C,MAAO,CACLoE,QAAS,MACT9B,QAAS,eACTkC,qBAAsB,OACtBC,uBAAwB,OACxBC,wBAAyB,OACzBL,gBAAiB,OACjBM,MAAO,QACPvH,SAED4G,EAAEtD,QAtBA,GAAGuD,UA2Bd5G,EAAAA,EAAAA,KAAA,MAAIiG,IAAKhC,EAActB,MAAO,CAAEkE,UAAW,kBAIjD7G,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,SAAWlB,GA1QHA,KACxBA,EAAEmB,iBAGF,MAAMyF,EAAW,CAEff,QAASxB,EACTyB,SAAUpF,EACV+D,gBAGFS,EAAO2B,KAAK,UAAWD,EAAS,EA+PC2B,CAAiBvI,GAAGe,UACzCF,EAAAA,EAAAA,MAACqG,EAAAA,EAAM3D,OAAM,CAAAxC,SAAA,EACXF,EAAAA,EAAAA,MAACkG,EAAAA,EAAU,CAACjG,UAAU,OAAMC,SAAA,EAC1BC,EAAAA,EAAAA,KAAC+F,EAAAA,EAAW5E,KAAI,CAACT,GAAG,4BAA2BX,SAAC,8BAGhDC,EAAAA,EAAAA,KAACC,EAAAA,EAAKe,QAAO,CACX,aAAW,UACX,mBAAiB,4BACjBM,SAAWtC,GArVZA,KAEjBsE,GAAO,IAAMtE,EAAEC,OAAOE,OAAM,EAmVOqI,CAAUxI,GAC3BG,MAAOkE,EACPnE,KAAK,qBAITc,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CACLC,QAAQ,kBACRjB,KAAK,SACL0B,MAAO,CAAEE,UAAW,SAAU9C,SAC/B,uDASZ,ECpYP,EAJgBkD,IACPjD,EAAAA,EAAAA,KAACyH,EAAS,CAACvE,QAASD,EAAMC,UCqBnC,EAnBoBwE,IAAmB,IAAlB,SAAE3H,GAAU2H,EAC/B,MAAOC,EAAMC,IAAWjJ,EAAAA,EAAAA,UAAS,IAAIkJ,OAE/B,WAAEnI,EAAU,QAAEwD,IAAYvD,EAAAA,EAAAA,KAOhC,OACEE,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAA9B,SAAA,EACEC,EAAAA,EAAAA,KAACoG,EAAM,CAAClD,QAASA,IAChBnD,GACDC,EAAAA,EAAAA,KAACuC,EAAM,MACN,C,oECXP,MA6DA,EA7DuB9C,KACrB,MAAMqI,GAAaC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,aAE1CC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MA0CjB,MAAO,CACLP,aACAxI,WA1CiBoI,IAA8B,IAA7B,WAAEjJ,EAAU,QAAEJ,GAASqJ,EAEzC,OADgBQ,GAASI,EAAAA,EAAAA,IAAe,CAAE7J,aAAYJ,YACxC,EA0CdkK,aAToB7H,GACJwH,GAASM,EAAAA,EAAAA,IAAiB9H,IAS1C+H,YAlCkBC,IAA8B,IAA7B,WAAEjK,EAAU,QAAEJ,GAASqK,EAE1C,OADgBR,GAASS,EAAAA,EAAAA,IAAgB,CAAElK,aAAYJ,YACzC,EAiCdkB,gBA7BuBmB,IACvB0H,EAAS,CAAEQ,SAAU,WAAWlI,KAAO,EA6BvCmI,kBArByBnI,IACzB0H,EAAS,CAAEQ,SAAU,aAAalI,KAAO,EAqBzClB,kBAjByBlB,IACzB8J,EAAS,CAAEQ,SAAU,aAAatK,KAAe,EAiBjDwK,cA3CoBC,gBACdb,GAASc,EAAAA,EAAAA,MAAoB,EA2CnCC,gBA7BsBA,KACtBb,EAAS,CAAEQ,SAAU,OAAQ,EA6B9B,C,0DC5DH,MAAMM,EAASA,CAACC,EAAOC,IAChBD,EAGEE,SAASF,GAFPC,EAkEX,EA7DsBE,KACpB,MAAMlB,GAAWC,EAAAA,EAAAA,OAEVkB,EAASC,IAAc7K,EAAAA,EAAAA,WAAS,IAEhC8K,IAAeC,EAAAA,EAAAA,MAEhBC,EAAOF,EAAYG,IAAI,QAAUP,SAASI,EAAYG,IAAI,SAAW,EACrE5D,EAAOyD,EAAYG,IAAI,QAAUP,SAASI,EAAYG,IAAI,SAAW,GAErEC,GAAeC,EAAAA,EAAAA,IAAmB,CAAEH,OAAM3D,SAAQ+D,WAuCxD,MAAO,CACLC,WAtCkBC,IAClB,IAAIC,EAAW,GAEf,GAAID,EAAW,CACb,MAAME,EAAUjB,EAAOe,EAAUN,KAAM,GACjCS,EAAUlB,EAAOe,EAAUjE,KAAM,IAEvCkE,GAAWJ,EAAAA,EAAAA,IAAmB,CAC5BH,KAAMQ,EACNnE,KAAMoE,IACLL,UACL,MACEG,EAAWL,EAIbL,GAAYD,EAAQ,EAuBpBI,OACA3D,OACAqE,aArBoBC,IACpBlC,EAAS,CAAEQ,SAAU,aAAa0B,IAAOC,OAAQV,GAAe,EAqBhEN,UACAiB,WAlBkBF,IAClBlC,EAAS,CAAEQ,SAAU,WAAW0B,IAAOC,OAAQV,GAAe,EAkB9D7F,YAVkBA,KAClBoE,EAAS,CAAEQ,SAAU,UAAW,EAUhC6B,aAfmBA,KACnBrC,EAAS,CAAEQ,SAAU,aAAc,EAepC,C","sources":["components/diary/DiaryCreateComponent.js","pages/diary/DiaryCreatePage.js","components/layout/Footer.js","api/chat.js","components/menus/BasicMenu.js","components/layout/Header.js","components/layout/LayoutIndex.js","hooks/useCustomDiary.js","hooks/useCustomMove.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport useCustomDiary from \"../../hooks/useCustomDiary\";\r\nimport { Link, useParams, useSearchParams } from \"react-router-dom\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { postDiary } from \"../../api/diaryApi\";\r\n\r\nconst initState = {\r\n  content: \"\",\r\n  picture: \"\",\r\n  dateobject: \"\",\r\n  email: \"\",\r\n};\r\nconst DiaryCreateComponent = () => {\r\n  const [diaryParam, setDiaryParam] = useState({ ...initState });\r\n  const [image, setImage] = useState(\"\");\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      //console.log(e.target.value, e.target.name);\r\n\r\n      diaryParam[e.target.name] = e.target.value;\r\n      setDiaryParam({ ...diaryParam });\r\n    },\r\n    [diaryParam]\r\n  );\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const { postDiaryC, moveToDiaryRead, moveToDiaryCreate } = useCustomDiary();\r\n  let { loginState } = useCustomLogin();\r\n  var { dateobject } = useParams();\r\n\r\n  const handleImageChange = (e) => {\r\n    //console.log(\"DiaryCreateComponent.js handleImageChange()진입\");\r\n    if (!e.target.files) return;\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      let image = window.URL.createObjectURL(file);\r\n      setImage(image);\r\n    }\r\n\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleSubmitDiaryMake = (e) => {\r\n    e.preventDefault();\r\n\r\n    diaryParam[\"email\"] = loginState;\r\n    diaryParam[\"dateobject\"] = dateobject;\r\n    setDiaryParam({ ...diaryParam });\r\n    //setDiaryParam({ ...diaryParam, email: email });\r\n    //setDiaryParam({ ...diaryParam, dateobject: dateobject });\r\n\r\n    const { picture } = e.target;\r\n    postDiary({ diaryParam, picture })\r\n      .then((result) => {\r\n        //console.log(\r\n        //  \"DiaryCreateComponent.js axios postDiary then() 진입 -> \",\r\n        //  result\r\n        //);\r\n        if (result.result === \"success\") {\r\n          alert(dateobject + \" 일자 다이어리 등록했습니다.!\");\r\n          if (result.image) {\r\n            URL.revokeObjectURL(image);\r\n            setImage(\"\");\r\n          }\r\n          moveToDiaryRead(result.id);\r\n        }\r\n        if (result.error) {\r\n          //console.log(\"result.payload.error -> \", result.payload.error);\r\n          alert(dateobject + \" 일자 다이어리 등록 실패했습니다.\");\r\n          moveToDiaryCreate(dateobject);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        //console.log(\"DiaryCreateComponent.js axios postDiary catch()\", err);\r\n        alert(dateobject + \"일자 다이어리 등록 실패했습니다.\");\r\n        moveToDiaryCreate(dateobject);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <br />\r\n\r\n      <h4>사진일기장 작성</h4>\r\n      <hr />\r\n      <br />\r\n      <Form onSubmit={handleSubmitDiaryMake}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>다이어리 일자</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"dateobject\"\r\n            value={dateobject}\r\n            disabled\r\n          />\r\n          <Form.Text className=\"text-muted\"></Form.Text>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>일기내용</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            name=\"content\"\r\n            value={diaryParam.content}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n          <Form.Label>사진등록</Form.Label>\r\n          <Form.Control\r\n            type=\"file\"\r\n            name=\"picture\"\r\n            onChange={handleImageChange}\r\n          />\r\n          {visible && (\r\n            <>\r\n              <br />\r\n              <Image src={image} rounded />\r\n            </>\r\n          )}\r\n        </Form.Group>\r\n        {/* \r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>닉네임</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"nick\"\r\n            value={joinParam.nick}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Text className=\"text-muted\"></Form.Text>\r\n        </Form.Group> */}\r\n        {/* <Form.Group className=\"mb-3\" >\r\n         <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n        </Form.Group>  */}\r\n        <Button variant=\"outline-primary\" type=\"submit\">\r\n          다이어리 등록\r\n        </Button>\r\n        &nbsp;\r\n        <Link to={\"../list\"}>\r\n          <Button variant=\"outline-secondary\" type=\"button\">\r\n            다이어리달력이동\r\n          </Button>\r\n        </Link>\r\n        &nbsp;\r\n        <Link to={`/`}>\r\n          <Button variant=\"outline-success\" type=\"button\">\r\n            메인으로\r\n          </Button>\r\n        </Link>\r\n      </Form>\r\n\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryCreateComponent;\r\n","import LayoutIndex from \"../../components/layout/LayoutIndex\";\r\nimport DiaryCreateComponent from \"../../components/diary/DiaryCreateComponent\";\r\n\r\nconst DiaryCreatePage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <DiaryCreateComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiaryCreatePage;\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <span style={{ fontSize: \"15px\", textAlign: \"right\" }}>\r\n            <img\r\n              alt=\"\"\r\n              src=\"/img/thumbs-up.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            \"미래는 오늘 여러분이 무엇을 하느냐에 달려 있습니다.\" - 마하트마\r\n            간디 <br />\r\n            The future depends on what we do in the present. -Mahatma Gandhi\r\n          </span>\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport jwtAxios from \"../util/jwtUtil\";\r\nimport { API_SERVER_HOST } from \"./memberApi\";\r\n//const prefix = `${API_SERVER_HOST}/api/chat`;\r\nconst prefix = `/api/chat`;\r\n\r\nexport const chatGetPost = async ({ chatroomname, chatroompassword }) => {\r\n  //console.log(\r\n  //  \"api/chat.js chatGetPost 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatGetPost 매개변수확인 chatroompassword -> \",\r\n  //  chatroompassword\r\n  //);\r\n  const res = await jwtAxios.post(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const chatList = async () => {\r\n  const res = await jwtAxios.get(`${prefix}/list`);\r\n  return res.data;\r\n};\r\n\r\n//\r\nexport const chatAdd = async ({\r\n  chatroomname,\r\n  chatroompassword,\r\n  loginState,\r\n}) => {\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroompassword -> \",\r\n  //  chatroompassword\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  const res = await jwtAxios.post(`${prefix}/create`, {\r\n    chatroomname,\r\n    chatroompassword,\r\n    loginState,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\n//삭제\r\nexport const chatDelete = async ({ chatroomname, chatroompassword }) => {\r\n  const res = await jwtAxios.delete(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\n//채팅\r\nimport { io } from \"socket.io-client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { chatAdd, chatGetPost } from \"../../api/chat\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\n\r\nconst BasicMenu = (props) => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  //채팅\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgList, setMsgList] = useState([]);\r\n  const [chatroomname, setChatroomname] = useState(\"\");\r\n  const [chatroompassword, setChatroompassword] = useState(\"\");\r\n\r\n  const refChatRoom = useRef();\r\n  const refChatRoompassword = useRef();\r\n  const { moveToLogin } = useCustomLogin();\r\n  const refModalBody = useRef();\r\n  //소켓\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const handleMsg = (e) => {\r\n    //console.log(\"handleMsg 이벤트핸들러 진입 ->\", e.target.value);\r\n    setMsg(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroomnameInput = (e) => {\r\n    //console.log(\"handleChatroomnameInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroomname(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroompasswordInput = (e) => {\r\n    //console.log(\"handleChatroompasswordInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroompassword(() => e.target.value);\r\n  };\r\n  const chatStartClick = (e) => {\r\n    //console.log(\"chatStartClick 이벤트핸들러함수 진입 \");\r\n\r\n    e.preventDefault();\r\n    if (!isLogin) {\r\n      alert(\"로그인 후 이용가능합니다.\");\r\n      return moveToLogin();\r\n    }\r\n\r\n    if (chatroomname === \"\" || chatroomname === undefined) {\r\n      alert(\"방 이름을 입력하세요!\");\r\n      return;\r\n    }\r\n    if (chatroompassword === \"\" || chatroompassword === undefined) {\r\n      alert(\"방 비밀번호를 입력하세요!\");\r\n      return;\r\n    }\r\n\r\n    //네임스페이스둘경우\r\n    //const socket = io(\"/pic\", {\r\n    const socket = io({\r\n      //const socket = io(\"https://picdiary2025.store/\", {\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"52.78.155.180\", {\r\n\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"http://52.78.155.180:8082\", {\r\n\r\n      //path: \"/my-custom-path/\",\r\n      //추가\r\n      //transports: [\"websocket\"], //폴링시도\r\n      //path: \"/ws\",\r\n      autoConnect: false,\r\n\r\n      // query: {\r\n      //   username: loginState, //email\r\n      //   chatroomname: e.target.chatroomname.value,\r\n      //   chatroompassword: e.target.chatroompassword.value,\r\n      // },\r\n    });\r\n    socket.connect();\r\n\r\n    setSocket(() => socket);\r\n\r\n    const sendData = {\r\n      username: loginState, //email\r\n      chatroomname,\r\n      chatroompassword,\r\n    };\r\n    socket.emit(\"roomcreate\", sendData);\r\n  }; //chatStartClick\r\n\r\n  const handleSubmitChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    //console.log(\"handleSubmitChat() 진입 \");\r\n    const sendData = {\r\n      //message: e.target.chatcontents.value,\r\n      message: msg,\r\n      username: loginState,\r\n      chatroomname,\r\n    };\r\n\r\n    socket.emit(\"message\", sendData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    function messageCallback(msg) {\r\n      //console.log(\"handleSubmitChat() 진입 message 콜백함수 진입 msg-> \", msg);\r\n\r\n      const { message, username, chatroomname } = msg;\r\n\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: message,\r\n          type: loginState === username ? \"me\" : \"other\",\r\n          id: username,\r\n        },\r\n      ]);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n      setMsg(() => \"\");\r\n    }\r\n    function goodbyeCallback(msg) {\r\n      // console.log(\r\n      //   \"out 이벤트 리액트에서 받아서 goodbyeCallback() 진입 msg => \",\r\n      //   msg\r\n      // );\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg.message,\r\n          type: \"goodbye\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n\r\n      const socketidcheck = socket.id;\r\n      //console.log(\"goodbyeCallback() 소켓 id확인 \", socketidcheck);\r\n    }\r\n\r\n    function roomcreateCallback(msg) {\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg,\r\n          type: \"welcome\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n      setModalVisible(() => true);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    } //callback\r\n    socket?.on(\"roomcreate\", roomcreateCallback);\r\n    socket?.on(\"message\", messageCallback);\r\n    socket?.on(\"out\", goodbyeCallback);\r\n\r\n    return () => {\r\n      socket?.off(\"message\");\r\n      socket?.off(\"out\");\r\n      socket?.off(\"roomcreate\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const chatCloseModal = () => {\r\n    //console.log(\"chatCloseModal() 진입\");\r\n    if (window.confirm(\"채팅방에서 나가시겠습니까?\")) {\r\n      //console.log(\"chatCloseModal onClick 내 out 소켓이벤트 전달전 \");\r\n      socket.emit(\"out\", { chatroomname, loginState, chatroompassword });\r\n      setSocket(null);\r\n      setMsgList([]);\r\n      setChatroomname(\"\");\r\n      setChatroompassword(\"\");\r\n      setModalVisible(() => false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"bg-body-tertiary\"\r\n        expand=\"lg\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand>\r\n            <Image\r\n              src=\"/img/sunglass.png\"\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n            />\r\n            하루관리\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {isLogin ? (\r\n                <>\r\n                  <Nav.Link href=\"/diary\">사진일기</Nav.Link>\r\n                  <Nav.Link href=\"/diet\">식단관리</Nav.Link>\r\n                  <Nav.Link href=\"/exercise\">운동관리</Nav.Link>\r\n                  <Nav.Link href=\"/money\">금전관리</Nav.Link>\r\n                  <Nav.Link href=\"/logout\">로그아웃</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Nav.Link href=\"/login\">로그인</Nav.Link>\r\n                  <Nav.Link href=\"/join\">회원가입</Nav.Link>\r\n                </>\r\n              )}\r\n            </Nav>\r\n            <Form onSubmit={(e) => chatStartClick(e)}>\r\n              {\" \"}\r\n              <InputGroup size=\"sm\" style={{ width: \"600px\" }}>\r\n                <InputGroup.Text>채팅방명</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroomname\"\r\n                  onChange={handleChatroomnameInput}\r\n                  value={chatroomname}\r\n                  ref={refChatRoom}\r\n                />\r\n                <InputGroup.Text>방비밀번호</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroompassword\"\r\n                  ref={refChatRoompassword}\r\n                  onChange={handleChatroompasswordInput}\r\n                  value={chatroompassword}\r\n                />\r\n                <Button variant=\"outline-secondary\" type=\"submit\">\r\n                  채팅하기\r\n                </Button>\r\n              </InputGroup>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {modalVisible && (\r\n        <>\r\n          <div className=\"modal show\" style={{ display: \"block\" }}>\r\n            <Modal.Dialog>\r\n              <Modal.Header>\r\n                <Modal.Title> 채팅방명 : {chatroomname} </Modal.Title>\r\n                &nbsp; &nbsp;\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  style={{ textAlign: \"left\" }}\r\n                  onClick={() => chatCloseModal()}\r\n                  type=\"button\"\r\n                >\r\n                  채팅창닫기\r\n                </Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div style={{ overflow: \"scroll\", height: \"500px\" }}>\r\n                  <ul>\r\n                    {msgList.map((v, i) =>\r\n                      v.type === \"welcome\" || v.type === \"goodbye\" ? (\r\n                        <li key={i} style={{ listStyle: \"none\" }}>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                          <div>{v.msg}</div>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                        </li>\r\n                      ) : v.type === \"me\" ? (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_1`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      ) : (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_2`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#000\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    )}\r\n                    <li ref={refModalBody} style={{ listStyle: \"none\" }} />\r\n                  </ul>\r\n                </div>\r\n              </Modal.Body>\r\n              <Form onSubmit={(e) => handleSubmitChat(e)}>\r\n                <Modal.Footer>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                      채팅내용\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                      onChange={(e) => handleMsg(e)}\r\n                      value={msg}\r\n                      name=\"chatcontents\"\r\n                    />\r\n                  </InputGroup>\r\n\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    type=\"submit\"\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    메시지보내기\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal.Dialog>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicMenu;\r\n","import BasicMenu from \"../menus/BasicMenu\";\r\n\r\nconst Header = (props) => {\r\n  return <BasicMenu isLogin={props.isLogin} />;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, cloneElement } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst LayoutIndex = ({ children }) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const { loginState, isLogin } = useCustomLogin();\r\n\r\n  //console.log(\"loginState -> \", loginState);\r\n  //console.log(\"isLogin -> \", isLogin);\r\n\r\n  // const clonedElement = cloneElement(children, { today: date });\r\n\r\n  return (\r\n    <>\r\n      <Header isLogin={isLogin} />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutIndex;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getDiaryListAsync,\r\n  postDiaryAsync,\r\n  patchDiaryAsync,\r\n  deleteDiaryAsync,\r\n} from \"../slices/diarySlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomDiary = () => {\r\n  const diaryState = useSelector((state) => state.diarySlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const postDiaryC = ({ diaryParam, picture }) => {\r\n    const payload = dispatch(postDiaryAsync({ diaryParam, picture }));\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getDiaryListC = async () => {\r\n    await dispatch(getDiaryListAsync());\r\n  };\r\n\r\n  //수정\r\n  const patchDiaryC = ({ diaryParam, picture }) => {\r\n    const payload = dispatch(patchDiaryAsync({ diaryParam, picture }));\r\n    return payload; //thunk에서 받은 액션결과전달\r\n  };\r\n\r\n  //추가\r\n  const moveToDiaryRead = (id) => {\r\n    navigate({ pathname: `../read/${id}` });\r\n  };\r\n\r\n  const moveToDiaryList = () => {\r\n    navigate({ pathname: \"../\" });\r\n  };\r\n\r\n  //추가\r\n  const moveToDiaryModify = (id) => {\r\n    navigate({ pathname: `../modify/${id}` });\r\n  };\r\n\r\n  //추가\r\n  const moveToDiaryCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}` });\r\n  };\r\n\r\n  const deleteDiaryC = (id) => {\r\n    const payload = dispatch(deleteDiaryAsync(id));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    diaryState,\r\n    postDiaryC,\r\n    //    getDiaryC,\r\n    deleteDiaryC,\r\n    patchDiaryC,\r\n    moveToDiaryRead,\r\n    moveToDiaryModify,\r\n    moveToDiaryCreate,\r\n    getDiaryListC,\r\n    moveToDiaryList,\r\n  };\r\n};\r\n\r\nexport default useCustomDiary;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n  if (!param) {\r\n    return defaultValue;\r\n  }\r\n  return parseInt(param);\r\n};\r\n\r\nconst useCustomMove = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const [queryParams] = useSearchParams();\r\n\r\n  const page = queryParams.get(\"page\") ? parseInt(queryParams.get(\"page\")) : 1;\r\n  const size = queryParams.get(\"size\") ? parseInt(queryParams.get(\"size\")) : 10;\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString();\r\n\r\n  const moveToList = (pageParam) => {\r\n    let queryStr = \"\";\r\n\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    //    navigate({ pathname: `../list`, search: queryStr });\r\n\r\n    setRefresh(!refresh);\r\n  }; //moveToList\r\n\r\n  //추가\r\n  const moveToModify = (num) => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToRead = (num) => {\r\n    navigate({ pathname: `../read/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToCreate = () => {\r\n    navigate({ pathname: `../create` });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    navigate({ pathname: `/login` });\r\n  };\r\n  return {\r\n    moveToList,\r\n    page,\r\n    size,\r\n    moveToModify,\r\n    refresh,\r\n    moveToRead,\r\n    moveToLogin,\r\n    moveToCreate,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n"],"names":["initState","content","picture","dateobject","email","DiaryCreateComponent","diaryParam","setDiaryParam","useState","image","setImage","handleChange","useCallback","e","target","name","value","visible","setVisible","postDiaryC","moveToDiaryRead","moveToDiaryCreate","useCustomDiary","loginState","useCustomLogin","useParams","_jsxs","className","children","_jsx","Form","onSubmit","preventDefault","postDiary","then","result","alert","URL","revokeObjectURL","id","error","catch","err","Group","Label","Control","type","disabled","Text","as","rows","onChange","required","controlId","files","file","window","createObjectURL","_Fragment","Image","src","rounded","Button","variant","Link","to","DiaryCreatePage","LayoutIndex","Footer","Navbar","Container","Brand","style","fontSize","textAlign","alt","width","height","props","isLogin","modalVisible","setModalVisible","msg","setMsg","msgList","setMsgList","chatroomname","setChatroomname","chatroompassword","setChatroompassword","refChatRoom","useRef","refChatRoompassword","moveToLogin","refModalBody","socket","setSocket","useEffect","on","_refModalBody$current2","prev","current","scrollIntoView","behavior","block","_refModalBody$current","message","username","off","expand","display","alignItems","justifyContent","fluid","Collapse","Nav","href","undefined","io","autoConnect","connect","sendData","emit","chatStartClick","InputGroup","size","ref","Modal","Dialog","Header","Title","onClick","confirm","Body","overflow","map","v","i","listStyle","flex","padding","backgroundColor","marginTop","fontWeight","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","handleSubmitChat","handleMsg","BasicMenu","_ref","date","setDate","Date","diaryState","useSelector","state","diarySlice","dispatch","useDispatch","navigate","useNavigate","postDiaryAsync","deleteDiaryC","deleteDiaryAsync","patchDiaryC","_ref2","patchDiaryAsync","pathname","moveToDiaryModify","getDiaryListC","async","getDiaryListAsync","moveToDiaryList","getNum","param","defaultValue","parseInt","useCustomMove","refresh","setRefresh","queryParams","useSearchParams","page","get","queryDefault","createSearchParams","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","moveToModify","num","search","moveToRead","moveToCreate"],"sourceRoot":""}