{"version":3,"file":"static/js/789.f1f19292.chunk.js","mappings":"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","sources":["utils/xy.js","api/openApi.js","components/layout/Footer.js","components/menus/BasicMenu.js","components/layout/Header.js","components/layout/LayoutIndex.js","components/money/MoneyCreateComponent.js","pages/money/MoneyCreatePage.js","hooks/useCustomMoney.js"],"sourcesContent":["/** 위도, 경도를 x,y 격자 포인트로 변경 */\r\nvar RE = 6371.00877; // 지구 반경(km)\r\nvar GRID = 5.0; // 격자 간격(km)\r\nvar SLAT1 = 30.0; // 투영 위도1(degree)\r\nvar SLAT2 = 60.0; // 투영 위도2(degree)\r\nvar OLON = 126.0; // 기준점 경도(degree)\r\nvar OLAT = 38.0; // 기준점 위도(degree)\r\nvar XO = 43; // 기준점 X좌표(GRID)\r\nvar YO = 136; // 기1준점 Y좌표(GRID)\r\n\r\n// LCC DFS 좌표변환 ( code : \"toXY\"(위경도->좌표, v1:위도, v2:경도), \"toLL\"(좌표->위경도,v1:x, v2:y) )\r\nexport const dfs_xy_conv = (code, v1, v2) => {\r\n  // LCC DFS 좌표변환을 위한 기초 자료\r\n  console.log(\" dfs_xy_conv 함수진입\");\r\n  var DEGRAD = Math.PI / 180.0;\r\n  var RADDEG = 180.0 / Math.PI;\r\n\r\n  var re = RE / GRID;\r\n  var slat1 = SLAT1 * DEGRAD;\r\n  var slat2 = SLAT2 * DEGRAD;\r\n  var olon = OLON * DEGRAD;\r\n  var olat = OLAT * DEGRAD;\r\n\r\n  var sn =\r\n    Math.tan(Math.PI * 0.25 + slat2 * 0.5) /\r\n    Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\r\n  var sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sf = (Math.pow(sf, sn) * Math.cos(slat1)) / sn;\r\n  var ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\r\n  ro = (re * sf) / Math.pow(ro, sn);\r\n  var rs = {};\r\n  if (code == \"toXY\") {\r\n    rs[\"lat\"] = v1;\r\n    rs[\"lng\"] = v2;\r\n    var ra = Math.tan(Math.PI * 0.25 + v1 * DEGRAD * 0.5);\r\n    ra = (re * sf) / Math.pow(ra, sn);\r\n    var theta = v2 * DEGRAD - olon;\r\n    if (theta > Math.PI) theta -= 2.0 * Math.PI;\r\n    if (theta < -Math.PI) theta += 2.0 * Math.PI;\r\n    theta *= sn;\r\n    rs[\"x\"] = Math.floor(ra * Math.sin(theta) + XO + 0.5);\r\n    rs[\"y\"] = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\r\n  } else {\r\n    rs[\"x\"] = v1;\r\n    rs[\"y\"] = v2;\r\n    var xn = v1 - XO;\r\n    var yn = ro - v2 + YO;\r\n    ra = Math.sqrt(xn * xn + yn * yn);\r\n    if (sn < 0.0) return -ra;\r\n    var alat = Math.pow((re * sf) / ra, 1.0 / sn);\r\n    alat = 2.0 * Math.atan(alat) - Math.PI * 0.5;\r\n\r\n    if (Math.abs(xn) <= 0.0) {\r\n      theta = 0.0;\r\n    } else {\r\n      if (Math.abs(yn) <= 0.0) {\r\n        theta = Math.PI * 0.5;\r\n        if (xn < 0.0) return -theta;\r\n      } else theta = Math.atan2(xn, yn);\r\n    }\r\n    var alon = theta / sn + olon;\r\n    rs[\"lat\"] = alat * RADDEG;\r\n    rs[\"lng\"] = alon * RADDEG;\r\n  }\r\n  return rs;\r\n};\r\n","import axios from \"axios\";\r\nimport { dfs_xy_conv } from \"../utils/xy\";\r\n\r\n//const URL = \"http://apis.data.go.kr/B551182/\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0\r\nconst URL =\r\n  \"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\r\n//?serviceKey=인증키&numOfRows=10&pageNo=1\r\n//&base_date=20210628&base_time=0600&nx=55&ny=127\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\nconsole.log(apiKey);\r\n\r\nconst navigatorFn = () => {\r\n  if (navigator.geolocation) {\r\n    function saveCoords(coordsObj) {\r\n      localStorage.setItem(\"COORDS\", JSON.stringify(coordsObj));\r\n      //localstorage의 key, value 값은 모두 string 타입으로 저장되기때문에 변환시켜준다.\r\n    }\r\n\r\n    function handleSuccess(position) {\r\n      const latitude = position.coords?.latitude;\r\n      const longitude = position.coords?.longitude;\r\n      const coordsObj = {\r\n        // 객체의 key,  value 값이 동일할 때에는 한번만 써줘도 된다.\r\n        latitude, // localStorage에 객체로 value에 저장하기위해서 객체에 넣어준다.\r\n        longitude,\r\n      };\r\n      saveCoords(coordsObj); // localStorage에 위치 저장\r\n    }\r\n\r\n    function handleError() {\r\n      console.log(\"cant not access to location\");\r\n    }\r\n\r\n    function askForCoords() {\r\n      navigator.geolocation.getCurrentPosition(handleSuccess, handleError);\r\n    }\r\n\r\n    let loadedCoords = localStorage.getItem(\"COORDS\");\r\n    console.log(\r\n      \"loadCoords 로컬저장소에서 저장된 위도경도 가져오기 : \",\r\n      JSON.stringify(loadedCoords)\r\n    );\r\n    loadedCoords = JSON.parse(loadedCoords);\r\n\r\n    if (loadedCoords === null) {\r\n      // localStorage에 좌표값이 저장되어있지않다면\r\n      askForCoords(); // 좌표값을 물어본다\r\n    }\r\n    const xyresult = dfs_xy_conv(\r\n      \"toXY\",\r\n      Number(loadedCoords?.latitude),\r\n      Number(loadedCoords?.longitude)\r\n    );\r\n    return xyresult;\r\n  } //if\r\n}; //navigatorFn\r\n\r\nexport const weatherapi = async ({ weatherDate, weatherTime }) => {\r\n  // const {  } = params;\r\n\r\n  var weatherapiresult = null;\r\n\r\n  const xyresult = navigatorFn();\r\n  console.log(\"weatherapi() 내 위경도를 xy변경후 : \", xyresult);\r\n  console.log(\"weatherapi() 내 weatherDate 확인 ->  \", weatherDate);\r\n  console.log(\"weatherapi() 내 weatherTime 확인 ->  : \", weatherTime);\r\n  try {\r\n    const result = await axios.get(URL, {\r\n      params: {\r\n        serviceKey: apiKey,\r\n        numOfRows: 10,\r\n        pageNo: 1,\r\n        dataType: \"JSON\",\r\n        base_date: weatherDate,\r\n        base_time: weatherTime,\r\n        nx: xyresult.x,\r\n        ny: xyresult.y,\r\n      },\r\n    });\r\n    weatherapiresult = result?.data?.response?.body?.items?.item;\r\n    console.log(\"openAPI axios 결과 \", weatherapiresult);\r\n    return weatherapiresult;\r\n  } catch (e) {\r\n    console.log(\"openAPI axios 에러발생\", e);\r\n  }\r\n}; //weatherapi\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <span style={{ fontSize: \"15px\", textAlign: \"right\" }}>\r\n            <img\r\n              alt=\"\"\r\n              src=\"/img/thumbs-up.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            \"미래는 오늘 여러분이 무엇을 하느냐에 달려 있습니다.\" - 마하트마\r\n            간디 <br />\r\n            The future depends on what we do in the present. -Mahatma Gandhi\r\n          </span>\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Footer;\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\n//채팅\r\nimport { io } from \"socket.io-client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { chatAdd, chatGetPost } from \"../../api/chat\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\n\r\nconst BasicMenu = (props) => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  //채팅\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgList, setMsgList] = useState([]);\r\n  const [chatroomname, setChatroomname] = useState(\"\");\r\n  const [chatroompassword, setChatroompassword] = useState(\"\");\r\n\r\n  const refChatRoom = useRef();\r\n  const refChatRoompassword = useRef();\r\n  const { moveToLogin } = useCustomLogin();\r\n  const refModalBody = useRef();\r\n  //소켓\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const handleMsg = (e) => {\r\n    //console.log(\"handleMsg 이벤트핸들러 진입 ->\", e.target.value);\r\n    setMsg(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroomnameInput = (e) => {\r\n    //console.log(\"handleChatroomnameInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroomname(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroompasswordInput = (e) => {\r\n    //console.log(\"handleChatroompasswordInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroompassword(() => e.target.value);\r\n  };\r\n  const chatStartClick = (e) => {\r\n    console.log(\"chatStartClick 이벤트핸들러함수 진입 \");\r\n\r\n    e.preventDefault();\r\n    if (!isLogin) {\r\n      alert(\"로그인 후 이용가능합니다.\");\r\n      return moveToLogin();\r\n    }\r\n\r\n    if (chatroomname === \"\" || chatroomname === undefined) {\r\n      alert(\"방 이름을 입력하세요!\");\r\n      return;\r\n    }\r\n    if (chatroompassword === \"\" || chatroompassword === undefined) {\r\n      alert(\"방 비밀번호를 입력하세요!\");\r\n      return;\r\n    }\r\n\r\n    //const socket = io(\"picdiary2025.store\", {\r\n    //const socket = io(\"52.78.155.180\", {\r\n\r\n    //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n    const socket = io({\r\n      path: \"/my-custom-path/\",\r\n\r\n      autoConnect: false,\r\n      // query: {\r\n      //   username: loginState, //email\r\n      //   chatroomname: e.target.chatroomname.value,\r\n      //   chatroompassword: e.target.chatroompassword.value,\r\n      // },\r\n    });\r\n    socket.connect();\r\n\r\n    setSocket(() => socket);\r\n\r\n    const sendData = {\r\n      username: loginState, //email\r\n      chatroomname,\r\n      chatroompassword,\r\n    };\r\n    socket.emit(\"roomcreate\", sendData);\r\n  }; //chatStartClick\r\n\r\n  const handleSubmitChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"handleSubmitChat() 진입 \");\r\n    const sendData = {\r\n      //message: e.target.chatcontents.value,\r\n      message: msg,\r\n      username: loginState,\r\n      chatroomname,\r\n    };\r\n\r\n    socket.emit(\"message\", sendData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    function messageCallback(msg) {\r\n      console.log(\"handleSubmitChat() 진입 message 콜백함수 진입 msg-> \", msg);\r\n\r\n      const { message, username, chatroomname } = msg;\r\n\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: message,\r\n          type: loginState === username ? \"me\" : \"other\",\r\n          id: username,\r\n        },\r\n      ]);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n      setMsg(() => \"\");\r\n    }\r\n    function goodbyeCallback(msg) {\r\n      console.log(\r\n        \"out 이벤트 리액트에서 받아서 goodbyeCallback() 진입 msg => \",\r\n        msg\r\n      );\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg.message,\r\n          type: \"goodbye\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n\r\n      const socketidcheck = socket.id;\r\n      console.log(\"goodbyeCallback() 소켓 id확인 \", socketidcheck);\r\n    }\r\n\r\n    function roomcreateCallback(msg) {\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg,\r\n          type: \"welcome\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n      setModalVisible(() => true);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    } //callback\r\n    socket?.on(\"roomcreate\", roomcreateCallback);\r\n    socket?.on(\"message\", messageCallback);\r\n    socket?.on(\"out\", goodbyeCallback);\r\n\r\n    return () => {\r\n      socket?.off(\"message\");\r\n      socket?.off(\"out\");\r\n      socket?.off(\"roomcreate\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const chatCloseModal = () => {\r\n    console.log(\"chatCloseModal() 진입\");\r\n    if (window.confirm(\"채팅방에서 나가시겠습니까?\")) {\r\n      console.log(\"chatCloseModal onClick 내 out 소켓이벤트 전달전 \");\r\n      socket.emit(\"out\", { chatroomname, loginState, chatroompassword });\r\n      setSocket(null);\r\n      setMsgList([]);\r\n      setChatroomname(\"\");\r\n      setChatroompassword(\"\");\r\n      setModalVisible(() => false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"bg-body-tertiary\"\r\n        expand=\"lg\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand>\r\n            <Image\r\n              src=\"/img/sunglass.png\"\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n            />\r\n            하루관리\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {isLogin ? (\r\n                <>\r\n                  <Nav.Link href=\"/diary\">사진일기</Nav.Link>\r\n                  <Nav.Link href=\"/diet\">식단관리</Nav.Link>\r\n                  <Nav.Link href=\"/exercise\">운동관리</Nav.Link>\r\n                  <Nav.Link href=\"/money\">금전관리</Nav.Link>\r\n                  <Nav.Link href=\"/logout\">로그아웃</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Nav.Link href=\"/login\">로그인</Nav.Link>\r\n                  <Nav.Link href=\"/join\">회원가입</Nav.Link>\r\n                </>\r\n              )}\r\n            </Nav>\r\n            <Form onSubmit={(e) => chatStartClick(e)}>\r\n              {\" \"}\r\n              <InputGroup size=\"sm\" style={{ width: \"600px\" }}>\r\n                <InputGroup.Text>채팅방명</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroomname\"\r\n                  onChange={handleChatroomnameInput}\r\n                  value={chatroomname}\r\n                  ref={refChatRoom}\r\n                />\r\n                <InputGroup.Text>방비밀번호</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroompassword\"\r\n                  ref={refChatRoompassword}\r\n                  onChange={handleChatroompasswordInput}\r\n                  value={chatroompassword}\r\n                />\r\n                <Button variant=\"outline-secondary\" type=\"submit\">\r\n                  채팅하기\r\n                </Button>\r\n              </InputGroup>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {modalVisible && (\r\n        <>\r\n          <div className=\"modal show\" style={{ display: \"block\" }}>\r\n            <Modal.Dialog>\r\n              <Modal.Header>\r\n                <Modal.Title> 채팅방명 : {chatroomname} </Modal.Title>\r\n                &nbsp; &nbsp;\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  style={{ textAlign: \"left\" }}\r\n                  onClick={() => chatCloseModal()}\r\n                  type=\"button\"\r\n                >\r\n                  채팅창닫기\r\n                </Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div style={{ overflow: \"scroll\", height: \"500px\" }}>\r\n                  <ul>\r\n                    {msgList.map((v, i) =>\r\n                      v.type === \"welcome\" || v.type === \"goodbye\" ? (\r\n                        <li key={i} style={{ listStyle: \"none\" }}>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                          <div>{v.msg}</div>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                        </li>\r\n                      ) : v.type === \"me\" ? (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_1`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      ) : (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_2`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#000\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    )}\r\n                    <li ref={refModalBody} style={{ listStyle: \"none\" }} />\r\n                  </ul>\r\n                </div>\r\n              </Modal.Body>\r\n              <Form onSubmit={(e) => handleSubmitChat(e)}>\r\n                <Modal.Footer>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                      채팅내용\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                      onChange={(e) => handleMsg(e)}\r\n                      value={msg}\r\n                      name=\"chatcontents\"\r\n                    />\r\n                  </InputGroup>\r\n\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    type=\"submit\"\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    메시지보내기\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal.Dialog>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicMenu;\r\n","import BasicMenu from \"../menus/BasicMenu\";\r\n\r\nconst Header = (props) => {\r\n  return <BasicMenu isLogin={props.isLogin} />;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, cloneElement } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst LayoutIndex = ({ children }) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const { loginState, isLogin } = useCustomLogin();\r\n\r\n  //console.log(\"loginState -> \", loginState);\r\n  //console.log(\"isLogin -> \", isLogin);\r\n\r\n  // const clonedElement = cloneElement(children, { today: date });\r\n\r\n  return (\r\n    <>\r\n      <Header isLogin={isLogin} />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutIndex;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  Link,\r\n  useNavigate,\r\n  useParams,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport useCustomMoney from \"../../hooks/useCustomMoney\";\r\nimport { choosecheck, getChooseMoney, postMoney } from \"../../api/moneyApi\";\r\n\r\nconst initState = {\r\n  expense: 0,\r\n  income: 0,\r\n  //content: \"\",\r\n  dateobject: \"\",\r\n};\r\n\r\nconst chooseReturn = (number) => {\r\n  let result = \"\";\r\n  for (let n of number) {\r\n    switch (n) {\r\n      case \"1\":\r\n        return (result = \"수입\");\r\n      case \"2\":\r\n        return (result = \"지출\");\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n};\r\n\r\nconst chooseSectorExpenseReturn = (number) => {\r\n  console.log(\r\n    \"MoneyCreateComponent.js chooseReturn() 진입 매개변수 => \",\r\n    number,\r\n    \"typeof -> \",\r\n    typeof number\r\n  );\r\n  if (!number) {\r\n    return;\r\n  }\r\n  const str = number;\r\n  const arr = str.split(\"\");\r\n  console.log(\"MoneyCreateComponent.js chooseReturn() 진입 배열변경 => \", arr);\r\n  let result = \"\";\r\n  for (let n of arr) {\r\n    switch (n) {\r\n      case \"1\":\r\n        return (result = \"식비\");\r\n      case \"2\":\r\n        return (result = \"교육비\"); //식비  교육비 공과금 의류비 생필품 차량교통비 의류비 병원or보험비or약국 주거비 도서문화오락 기타\r\n      case \"3\":\r\n        return (result = \"공과금\");\r\n      case \"4\":\r\n        return (result = \"의류비\");\r\n      case \"5\":\r\n        return (result = \"생필품\");\r\n      case \"6\":\r\n        return (result = \"차량교통비\");\r\n      case \"7\":\r\n        return (result = \"의료보험\");\r\n      case \"8\":\r\n        return (result = \"주거비\");\r\n      case \"9\":\r\n        return (result = \"도서문화오락\");\r\n      case \"10\":\r\n        return (result = \"투자\");\r\n      case \"11\":\r\n        return (result = \"기타\");\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  console.log(result);\r\n};\r\n\r\nconst chooseSectorIncomeReturn = (chooseincome) => {\r\n  if (!chooseincome) {\r\n    return;\r\n  }\r\n  console.log(\"chooseSectorIncomeReturn 매개변수 -> \", chooseincome);\r\n  switch (chooseincome) {\r\n    case \"21\":\r\n      return \"급여\";\r\n    case \"22\":\r\n      return \"투자\";\r\n    case \"23\":\r\n      return \"그외\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nconst chooseCheckbox = (number) => {\r\n  console.log(\r\n    \"MoneyCreateComponent.js chooseCheckbox() 진입 매개변수 => \",\r\n    number,\r\n    \"typeof -> \",\r\n    typeof number\r\n  );\r\n  if (!number) {\r\n    return;\r\n  }\r\n  const str = number;\r\n  const arr = str.split(\"\");\r\n  console.log(\r\n    \"MoneyCreateComponent.js chooseCheckbox() 진입 배열변경 => \",\r\n    arr\r\n  );\r\n  return arr;\r\n};\r\nconst initDetailState = {\r\n  content: \"\",\r\n  amount: \"\", //자리수때문에.. 서버보낼때는 Number처리해야한다.\r\n  choose: \"\",\r\n  choosesector: \"\",\r\n};\r\n\r\nconst MoneyCreateComponent = () => {\r\n  //쿼리스트링\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const [paramChoose, setParamChoose] = useState(\"\"); //쿼리스트링 choose 값담기\r\n  const [moneyParam, setMoneyParam] = useState({ ...initState });\r\n  const refAmount = useRef(null);\r\n  const refIncomeReset = useRef(null);\r\n  const refExpenseReset = useRef(null);\r\n  const refReset = useRef(null);\r\n\r\n  const [moneyDetailParam, setMoneyDetailParam] = useState({\r\n    ...initDetailState,\r\n  });\r\n  const [detailExpenseVisible, setDetailExpenseVisible] = useState(false);\r\n  const [detailIncomeVisible, setDetailIncomeVisible] = useState(false);\r\n\r\n  const { exceptionHandle } = useCustomLogin();\r\n  const [inputVisible, setInputVisible] = useState(true);\r\n  const [expenseVisible, setExpenseVisible] = useState(false);\r\n  const [incomeVisible, setIncomeVisible] = useState(false);\r\n\r\n  const { postMoneyC, moveToMoneyRead, moveToMoneyCreate, moveToMoneyList } =\r\n    useCustomMoney();\r\n  let { loginState } = useCustomLogin();\r\n  var { dateobject } = useParams();\r\n  //  const [moneyExpenseFinalArray, setmoneyExpenseFinalArray] = useState([]);\r\n  //  const [moneyIncomeFinalArray, setmoneyIncomeFinalArray] = useState([]);\r\n  const [finalExpenseObjectArray, setFinalExpenseObjectArray] = useState([]);\r\n  const [finalIncomeObjectArray, setFinalIncomeObjectArray] = useState([]);\r\n\r\n  const [chooseCheckArray, setChooseCheckArray] = useState([]);\r\n  const [chooseExpenseSectorArray, setChooseExpenseSectorArray] = useState([]);\r\n  const [chooseIncomeSectorArray, setChooseIncomeSectorArray] = useState([]);\r\n\r\n  const [expenseExist, setExpenseExist] = useState(false);\r\n  const [incomeExist, setIncomeExist] = useState(false);\r\n\r\n  //쿼리스트링 choose있을경우\r\n  useLayoutEffect(() => {\r\n    const choose = searchParams.get(\"choose\");\r\n    if (choose === \"2\" || choose === \"1\") {\r\n      console.log(\r\n        \"MoneyCreateComponent.js 파라미터 choose 존재할경우 -> \",\r\n        choose,\r\n        \" typeof -> \",\r\n        typeof choose\r\n      );\r\n      setParamChoose(choose);\r\n    } //if\r\n  }, []);\r\n\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      //    console.log(e.target.value, e.target.name);\r\n\r\n      if (e.target.name === \"choose\" && e.target.value === \"1\") {\r\n        setIncomeVisible(true);\r\n        setExpenseVisible(false);\r\n      }\r\n\r\n      if (e.target.name === \"choose\" && e.target.value === \"2\") {\r\n        setExpenseVisible(true);\r\n        setIncomeVisible(false);\r\n      }\r\n\r\n      const regex = new RegExp(/^[0-9]+$/);\r\n\r\n      if (e.target.name === \"amount\") {\r\n        let value = Number(e.target.value);\r\n\r\n        if (!regex.test(value) || value === \"NaN\") {\r\n          alert(\"금액은 숫자만 입력가능합니다.\");\r\n          refAmount.current.value = 0;\r\n          return;\r\n        }\r\n      }\r\n\r\n      moneyParam[e.target.name] = e.target.value;\r\n      setMoneyParam({ ...moneyParam });\r\n    },\r\n    [moneyParam]\r\n  );\r\n\r\n  //---------------------- 추가시 입력받는 state\r\n  const handleDetailChange = useCallback(\r\n    (e) => {\r\n      console.log(\r\n        \"handleDetailChange() 진입 => \",\r\n        e.target.value,\r\n        e.target.name\r\n      );\r\n\r\n      const regex = new RegExp(/^[0-9]+$/);\r\n\r\n      if (e.target.name === \"amount\") {\r\n        let value = Number(e.target.value.replaceAll(\",\", \"\"));\r\n\r\n        if (!regex.test(value) || value === \"NaN\") {\r\n          alert(\"금액은 숫자만 입력가능합니다.\");\r\n          refAmount.current.value = 0;\r\n          return;\r\n        }\r\n        moneyDetailParam[\"amount\"] = value.toLocaleString(\"ko-KR\");\r\n      } else {\r\n        moneyDetailParam[e.target.name] = e.target.value;\r\n      }\r\n      setMoneyDetailParam((prev) => {\r\n        return { ...prev, moneyDetailParam };\r\n      });\r\n    },\r\n    [moneyDetailParam]\r\n  );\r\n\r\n  const handleDetailOnClick = () => {\r\n    console.log(\"handleDetailOnClick 진입\");\r\n    if (moneyDetailParam.content === \"\" || moneyDetailParam.amount === 0) {\r\n      alert(\"내용을 모두 입력해주세요!\");\r\n      return;\r\n    }\r\n    // console.log(\r\n    //   \"handleDetailOnclick moneyParam.choosesector-> \",\r\n    //   moneyParam.choosesector\r\n    // );\r\n\r\n    if (!paramChoose) {\r\n      console.log(\r\n        \"handleDetailOnclick  moneyParam.choose-> \",\r\n        moneyParam.choose\r\n      );\r\n\r\n      if (\r\n        moneyParam.choose === null ||\r\n        moneyParam.choose === \"\" ||\r\n        moneyParam.choose === undefined\r\n      ) {\r\n        alert(\"수입/지출을 선택해주세요\");\r\n        return;\r\n      }\r\n    }\r\n    if (\r\n      moneyParam.choosesector === null ||\r\n      moneyParam.choosesector === \"\" ||\r\n      moneyParam.choosesector === undefined\r\n    ) {\r\n      alert(\"항목을 선택해주세요\");\r\n      return;\r\n    }\r\n    //  moneyParam.choose;\r\n    //moneyParam.choosesector;\r\n    //기존\r\n    //    const compound = moneyDetailParam.content + moneyDetailParam.amount;\r\n    //    const compound = moneyParam.choose+ moneyParam.choosesector +moneyDetailParam.content + moneyDetailParam.amount;\r\n\r\n    if (moneyParam.choose === \"2\") {\r\n      // let transamountExpense = 0;\r\n      // if (moneyDetailParam.amount) {\r\n      //   transamountExpense += Number(\r\n      //     moneyDetailParam.amount.replaceAll(\",\", \"\")\r\n      //   );\r\n      // }\r\n\r\n      // const compound =\r\n      //   moneyParam.choose +\r\n      //   moneyParam.choosesector +\r\n      //   moneyDetailParam.content +\r\n      //   // moneyDetailParam.amount;\r\n\r\n      //   transamountExpense;\r\n      // console.log(\"handleDetailOnClick 지출일때 총합침-compound> \", compound);\r\n\r\n      // moneyExpenseFinalArray.forEach((i) =>\r\n      //   console.log(\"moneyExpenseFinalArray -> \", i)\r\n      // );\r\n      // const sameResult = moneyExpenseFinalArray.filter((i) => i === compound);\r\n      // console.log(\"handleDetailOnclick sameResult-> \", sameResult);\r\n      // if (sameResult.length !== 0) {\r\n      //   alert(\"이미 가계부에 추가했습니다!\");\r\n      //   setMoneyDetailParam({ ...initDetailState });\r\n\r\n      //   return;\r\n      // }\r\n\r\n      setFinalExpenseObjectArray((finalExpenseObjectArray) => {\r\n        return [\r\n          ...finalExpenseObjectArray,\r\n          {\r\n            choose: moneyParam.choose,\r\n            choosesector: moneyParam.choosesector,\r\n            content: moneyDetailParam.content,\r\n            amount: moneyDetailParam.amount,\r\n            //amount: transamountExpense,\r\n          },\r\n        ];\r\n      });\r\n\r\n      // setmoneyExpenseFinalArray((moneyExpenseFinalArray) => [\r\n      //   ...moneyExpenseFinalArray,\r\n      //   compound,\r\n      // ]);\r\n      setDetailExpenseVisible(true);\r\n    }\r\n\r\n    if (moneyParam.choose === \"1\") {\r\n      // let transamountIncome = 0;\r\n      // if (moneyDetailParam.amount) {\r\n      //   transamountIncome += Number(\r\n      //     moneyDetailParam.amount.replaceAll(\",\", \"\")\r\n      //   );\r\n      // }\r\n      // const compound =\r\n      //   moneyParam.choose +\r\n      //   moneyParam.choosesector +\r\n      //   moneyDetailParam.content +\r\n      //   //moneyDetailParam.amount;\r\n      //   transamountIncome;\r\n      //console.log(\"handleDetailOnClick 수입일때 총합침-compound> \", compound);\r\n\r\n      // moneyIncomeFinalArray.forEach((i) =>\r\n      //   console.log(\"moneyIncomeFinalArray -> \", i)\r\n      // );\r\n      // const sameResult = moneyIncomeFinalArray.filter((i) => i === compound);\r\n      // console.log(\"handleDetailOnclick sameResult-> \", sameResult);\r\n      // if (sameResult.length !== 0) {\r\n      //   alert(\"이미 가계부에 추가했습니다!\");\r\n      //   setMoneyDetailParam({ ...initDetailState });\r\n\r\n      //   return;\r\n      // }\r\n      setFinalIncomeObjectArray((finalIncomeObjectArray) => {\r\n        return [\r\n          ...finalIncomeObjectArray,\r\n          {\r\n            choose: moneyParam.choose,\r\n            choosesector: moneyParam.choosesector,\r\n            content: moneyDetailParam.content,\r\n            //amount: transamountIncome,\r\n            amount: moneyDetailParam.amount,\r\n          },\r\n        ];\r\n      });\r\n\r\n      // setmoneyIncomeFinalArray((moneyIncomeFinalArray) => [\r\n      //   ...moneyIncomeFinalArray,\r\n      //   compound,\r\n      // ]);\r\n      setDetailIncomeVisible(true);\r\n    }\r\n\r\n    setMoneyDetailParam({ ...initDetailState });\r\n  };\r\n\r\n  //------------------------------- 가계부등록\r\n  const handleSubmitMoney = (e) => {\r\n    console.log(\"handleSubmitMoney() 진입\");\r\n    e.preventDefault();\r\n    setInputVisible(false);\r\n\r\n    //moneyParam[\"email\"] = loginState;\r\n    moneyParam[\"dateobject\"] = dateobject;\r\n\r\n    //let submitcontent = \"\";\r\n    let incomeValue = 0;\r\n    let expenseValue = 0;\r\n\r\n    //지출 객체배열로 만듬\r\n    //if (moneyExpenseFinalArray.length !== 0) {\r\n    //지출계산\r\n    //  finalExpenseObjectArray.forEach((i) => {\r\n    if (finalExpenseObjectArray.length !== 0) {\r\n      finalExpenseObjectArray.forEach((i) => {\r\n        // console.log(\"지출 문자열배열 amount 자리수 제거위해 한개씩 출력 => \", i.amount);\r\n        expenseValue += Number(i.amount.replaceAll(\",\", \"\"));\r\n      });\r\n    }\r\n    // finalExpenseObjectArray.map((i) => {\r\n    //   console.log(\r\n    //     \"지출객체배열에서 amount 자리수제거해서 넣기 => \",\r\n    //     i.amount\r\n    //   );\r\n    //   i[\"amount\"] = Number(i.amount.replaceAll(\",\", \"\"));\r\n    // });\r\n\r\n    //   console.log(\"expense -> \", expenseValue);\r\n    //   const moneyExpenseFinalObject = moneyExpenseFinalArray.join(\" \");\r\n    //   console.log(\r\n    //     \"MoneyCreateComponent.js moneyExpenseFinalArray 지출 문자열로 만듬 -> \",\r\n    //     moneyExpenseFinalObject\r\n    //   );\r\n    //   submitcontent += \" \" + moneyExpenseFinalObject;\r\n\r\n    //   console.log(\"지출 submitcontent -> \", submitcontent);\r\n    // }\r\n\r\n    //수입 객체배열로 만듬\r\n    //    if (moneyIncomeFinalArray.length !== 0) {\r\n    //수입계산\r\n    //    finalIncomeObjectArray.forEach((i) => {\r\n    if (finalIncomeObjectArray.length !== 0) {\r\n      finalIncomeObjectArray.forEach((i) => {\r\n        // console.log(\"수입 문자열배열 amount 자리수 제거위해 한개씩 출력 => \", i.amount);\r\n        incomeValue += Number(i.amount.replaceAll(\",\", \"\"));\r\n      });\r\n      //  console.log(\"income -> \", incomeValue);\r\n    }\r\n    //   finalIncomeObjectArray.forEach((i) => {\r\n    //     console.log(\r\n    //       \"수입객체배열에서 amount 자리수제거해서 넣기 => \",\r\n    //       i.amount\r\n    //     );\r\n    //     i[\"amount\"] = Number(i.amount.replaceAll(\",\", \"\"));\r\n    //   });\r\n\r\n    //   const moneyIncomeFinalObject = moneyIncomeFinalArray.join(\" \");\r\n    //   console.log(\r\n    //     \"MoneyCreateComponent.js moneyIncomeFinalArray 문자열로 만듬 -> \",\r\n    //     moneyIncomeFinalObject\r\n    //   );\r\n    //   // moneyParam[\"content\"] = moneyIncomeFinalObject;\r\n\r\n    //   submitcontent += \" \" + moneyIncomeFinalObject;\r\n    //   console.log(\"수입 submitcontent -> \", submitcontent);\r\n    // }\r\n    moneyParam[\"expense\"] = expenseValue;\r\n    moneyParam[\"income\"] = incomeValue;\r\n\r\n    // moneyParam[\"content\"] = submitcontent;\r\n    setMoneyParam({ ...moneyParam });\r\n    //  console.log(\"MoneyCreateComponent.js handleSubmitMoney -> \", moneyParam);\r\n    // console.log(\r\n    //   \"MoneyCreateComponent.js finalExpenseObjectArray -> \",\r\n    //   finalExpenseObjectArray\r\n    // );\r\n    // console.log(\r\n    //   \"MoneyCreateComponent.js finalExpenseObjectArray -> \",\r\n    //   finalIncomeObjectArray\r\n    // );\r\n\r\n    postMoney({\r\n      moneyParam,\r\n      finalExpenseObjectArray,\r\n      finalIncomeObjectArray,\r\n      dateobject,\r\n    })\r\n      .then((result) => {\r\n        console.log(\r\n          \"MoneyCreateComponent.js axios postMoney then() 진입 -> \",\r\n          result\r\n        );\r\n        if (result.result === \"success\") {\r\n          alert(dateobject + \" 일자 가계부를 등록했습니다.!\");\r\n          // if (result.payload.image) {\r\n          //   URL.revokeObjectURL(image);\r\n          //   setImage(\"\");\r\n          // }\r\n          console.log(result.id);\r\n          moveToMoneyList();\r\n        }\r\n\r\n        if (result.error) {\r\n          console.log(\"result.error -> \", result.error);\r\n          alert(dateobject + \" 일자 가계부 등록 실패했습니다.\");\r\n          moveToMoneyCreate(dateobject);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"MoneyCreateComponent.js axios postMoneyC catch()\", err);\r\n        alert(dateobject + \"일자 가계부 등록 실패했습니다.\");\r\n        moveToMoneyCreate(dateobject);\r\n      });\r\n  };\r\n\r\n  const handleDetailRemoveOnClick = (e) => {\r\n    console.log(\"handleDetailRemoveOnClick() 진입\");\r\n\r\n    // console.log(\r\n    //   \"handleDetailRemoveOnClick() dataset =>\",\r\n    //   e.target.dataset.finalcontent,\r\n    //   \"e.target.dataset.finalamount -> \",\r\n    //   e.target.dataset.finalamount,\r\n    //   \"e.target.dataset.finalchoose -> \",\r\n    //   e.target.dataset.finalchoose,\r\n    //   \"e.target.dataset.finalchoosesector -> \",\r\n    //   e.target.dataset.finalchoosesector\r\n    // );\r\n    const finalcontent = e.target.dataset.finalcontent;\r\n    const finalamount = e.target.dataset.finalamount;\r\n    const finalchoose = e.target.dataset.finalchoose;\r\n    const finalchoosesector = e.target.dataset.finalchoosesector;\r\n\r\n    // const newProduce = produce(moneyExpenseFinalArray, (draft) => {\r\n    //   draft.filter((d) => d !== finalcontent);\r\n    // });\r\n\r\n    if (finalchoose === \"2\") {\r\n      // const newProduce = moneyExpenseFinalArray.filter(\r\n      //   (i) =>\r\n      //     i !==\r\n      //     `${finalchoose}${finalchoosesector}${finalcontent}${finalamount}`\r\n      // );\r\n      // console.log(\"handleDetailRemoveOnClick() 지출 newProduce =>\", newProduce);\r\n      // setmoneyExpenseFinalArray([...newProduce]);\r\n\r\n      const indexNumber = finalExpenseObjectArray.findIndex(\r\n        (i) =>\r\n          i.content === finalcontent &&\r\n          i.amount === finalamount &&\r\n          i.choosesector === finalchoosesector\r\n      );\r\n\r\n      //console.log(\" 지출 index넘버 -> \", indexNumber);\r\n\r\n      if (indexNumber === 0 && finalExpenseObjectArray.length === 1) {\r\n        setFinalExpenseObjectArray([]);\r\n      } else {\r\n        const filterExpense = finalExpenseObjectArray.filter(\r\n          //싹다지워진다.\r\n          (e) =>\r\n            !(\r\n              e.content === finalcontent &&\r\n              e.amount === finalamount &&\r\n              e.choosesector === finalchoosesector\r\n            )\r\n        );\r\n        setFinalExpenseObjectArray(filterExpense);\r\n      }\r\n    } //if finalchoose===2\r\n\r\n    if (finalchoose === \"1\") {\r\n      // const newProduce = moneyIncomeFinalArray.filter(\r\n      //   (i) =>\r\n      //     i !==\r\n      //     `${finalchoose}${finalchoosesector}${finalcontent}${finalamount}`\r\n      // );\r\n      // console.log(\"handleDetailRemoveOnClick() 수입 newProduce =>\", newProduce);\r\n      // setmoneyIncomeFinalArray([...newProduce]);\r\n\r\n      const indexNumber = finalIncomeObjectArray.findIndex(\r\n        (i) =>\r\n          i.content === finalcontent &&\r\n          i.amount === finalamount &&\r\n          i.choosesector === finalchoosesector\r\n      );\r\n\r\n      //console.log(\" 수입 index넘버 -> \", indexNumber);\r\n\r\n      if (indexNumber === 0 && finalIncomeObjectArray.length === 1) {\r\n        setFinalIncomeObjectArray([]);\r\n      } else {\r\n        const filterIncome = finalIncomeObjectArray.filter(\r\n          //싹다지워진다.\r\n          (e) =>\r\n            !(\r\n              e.content === finalcontent &&\r\n              e.amount === finalamount &&\r\n              e.choosesector === finalchoosesector\r\n            )\r\n        );\r\n        //        console.log(\"필터처리후 -> \", filterIncome);\r\n        setFinalIncomeObjectArray(filterIncome);\r\n      }\r\n      // return;\r\n    } //if finalchoose=1\r\n  };\r\n\r\n  const handleOnKeyDown = (e) => {\r\n    console.log(\"handleOnKeyDown() 진입\");\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n  };\r\n\r\n  //버튼초기화\r\n  const handleRadioReset = (e) => {\r\n    console.log(\"handleRadioReset() 진입\");\r\n    if (e.target.value === \"true\") {\r\n      //  console.log(\"진입\");\r\n      refIncomeReset.current.checked = false;\r\n      refExpenseReset.current.checked = false;\r\n      refReset.current.checked = false;\r\n      setExpenseVisible(false);\r\n      setIncomeVisible(false);\r\n    }\r\n    return;\r\n  };\r\n\r\n  //수입지출 작성확인후 라디오버튼 비활성화\r\n  useEffect(() => {\r\n    choosecheck({ dateobject })\r\n      .then((result) => {\r\n        console.log(\"MoneyCreateComponent.js then() 결과 \", result);\r\n\r\n        if (Number(result.result?.expense) > 0) {\r\n          setIncomeExist(true);\r\n          //alert(dateobject + \"일자에 지출은 작성되어있습니다.\");\r\n        }\r\n\r\n        if (Number(result.result?.income) > 0) {\r\n          setExpenseExist(true);\r\n          //alert(dateobject + \"일자에 수입은 작성되어있습니다.\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"MoneyCreateComponent.js catch() 에러 \", e);\r\n      });\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <br />\r\n\r\n      <h4>가계부작성</h4>\r\n      <hr />\r\n      <br />\r\n      {/* {visible ? (\r\n        <h5>\r\n          😅 {dateobject} 일자에 {chooseResult} 가계부는 작성되어 있습니다!\r\n        </h5>\r\n      ) : (\r\n        <h5>😅 {dateobject} 일자에 처음 작성하는 가계부입니다. </h5>\r\n      )}\r\n      <br /> */}\r\n\r\n      <Form onSubmit={handleSubmitMoney} onKeyDown={handleOnKeyDown}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>가계부일자</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"dateobject\"\r\n            value={dateobject}\r\n            disabled\r\n          />\r\n          <br />\r\n          <Form.Text className=\"text-muted\">\r\n            {incomeExist && (\r\n              <span>\r\n                {dateobject}일자 수입 가계부는 작성되어있습니다. <br />\r\n              </span>\r\n            )}\r\n            {expenseExist && (\r\n              <span>{dateobject}일자 지출 가계부는 작성되어있습니다.</span>\r\n            )}\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <br />\r\n        {!paramChoose ||\r\n          incomeExist ||\r\n          (expenseExist && (\r\n            <Form.Check\r\n              inline\r\n              label=\"버튼초기화\"\r\n              name=\"radioreset\"\r\n              type={\"radio\"}\r\n              value={true}\r\n              onChange={(e) => handleRadioReset(e)}\r\n              ref={refReset}\r\n            />\r\n          ))}\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>수입/지출선택</Form.Label>\r\n\r\n          <div key={`inline-radio`} className=\"mb-3\">\r\n            {paramChoose && (\r\n              <>\r\n                {paramChoose === \"1\" ? (\r\n                  <>\r\n                    <Image\r\n                      src=\"/img/money.png\"\r\n                      style={{ width: \"50px\", height: \"50px\" }}\r\n                      rounded\r\n                    />\r\n                    &nbsp;\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"수입\"\r\n                      name=\"choose\"\r\n                      type={\"radio\"}\r\n                      value={paramChoose}\r\n                      checked={\"true\"}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {\" \"}\r\n                    <Image\r\n                      src=\"/img/money.png\"\r\n                      style={{ width: \"50px\", height: \"50px\" }}\r\n                      rounded\r\n                    />\r\n                    &nbsp;\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"수입\"\r\n                      name=\"choose\"\r\n                      type={\"radio\"}\r\n                      value={1}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  </>\r\n                )}\r\n                {paramChoose === \"2\" ? (\r\n                  <>\r\n                    {\" \"}\r\n                    <Image\r\n                      src=\"/img/receipt.jpg\"\r\n                      style={{ width: \"50px\", height: \"50px\" }}\r\n                      rounded\r\n                    />\r\n                    &nbsp;\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"지출\"\r\n                      name=\"choose\"\r\n                      type={\"radio\"}\r\n                      value={2}\r\n                      checked={\"true\"}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {\" \"}\r\n                    <Image\r\n                      src=\"/img/receipt.jpg\"\r\n                      style={{ width: \"50px\", height: \"50px\" }}\r\n                      rounded\r\n                    />\r\n                    &nbsp;\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"지출\"\r\n                      name=\"choose\"\r\n                      type={\"radio\"}\r\n                      value={paramChoose}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            {!paramChoose && !(!incomeExist && !expenseExist) && (\r\n              <>\r\n                <Image\r\n                  src=\"/img/money.png\"\r\n                  style={{ width: \"50px\", height: \"50px\" }}\r\n                  rounded\r\n                />\r\n                &nbsp;\r\n                <Form.Check\r\n                  inline\r\n                  label=\"수입\"\r\n                  name=\"choose\"\r\n                  type={\"radio\"}\r\n                  value={1}\r\n                  onChange={(e) => handleChange(e)}\r\n                  disabled={!incomeExist ? true : false}\r\n                  checked={incomeExist ? true : false}\r\n                  //              ref={refIncomeReset}\r\n                />\r\n                <Image\r\n                  src=\"/img/receipt.jpg\"\r\n                  style={{ width: \"50px\", height: \"50px\" }}\r\n                  rounded\r\n                />\r\n                &nbsp;\r\n                <Form.Check\r\n                  inline\r\n                  label=\"지출\"\r\n                  name=\"choose\"\r\n                  type={\"radio\"}\r\n                  value={2}\r\n                  onChange={(e) => handleChange(e)}\r\n                  disabled={!expenseExist ? true : false}\r\n                  checked={expenseExist ? true : false}\r\n                  //            ref={refExpenseReset}\r\n                />\r\n              </>\r\n            )}\r\n            {!paramChoose && !incomeExist && !expenseExist && (\r\n              <>\r\n                <Image\r\n                  src=\"/img/money.png\"\r\n                  style={{ width: \"50px\", height: \"50px\" }}\r\n                  rounded\r\n                />\r\n                &nbsp;\r\n                <Form.Check\r\n                  inline\r\n                  label=\"수입\"\r\n                  name=\"choose\"\r\n                  type={\"radio\"}\r\n                  value={1}\r\n                  onChange={(e) => handleChange(e)}\r\n                  ref={refIncomeReset}\r\n                />\r\n                <Image\r\n                  src=\"/img/receipt.jpg\"\r\n                  style={{ width: \"50px\", height: \"50px\" }}\r\n                  rounded\r\n                />\r\n                &nbsp;\r\n                <Form.Check\r\n                  inline\r\n                  label=\"지출\"\r\n                  name=\"choose\"\r\n                  type={\"radio\"}\r\n                  value={2}\r\n                  onChange={(e) => handleChange(e)}\r\n                  ref={refExpenseReset}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </Form.Group>\r\n        <br />\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>항목선택</Form.Label>\r\n          <div key={`inline-radio`} className=\"mb-3\">\r\n            {/* {chooseExpenseSectorArray &&\r\n              chooseExpenseSectorArray.map((i) => (\r\n                <>\r\n                  {i === \"1\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"식비\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={1}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"식비\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={1}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n                  {i === \"2\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"교육비\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={2}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"교육비\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={2}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n\r\n                  {i === \"3\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"공과금\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={3}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"공과금\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={3}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n                  {i === \"4\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"의류비\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={4}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"의류비\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={4}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n\r\n                  {i === \"5\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"생필품\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={5}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"생필품\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={5}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n                  {i === \"6\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"차량교통비\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={6}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"차량교통비\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={6}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n\r\n                  {i === \"7\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"의료보험\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={7}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"의료보험\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={7}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n                  {i === \"8\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"주거비\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={8}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"주거비\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={8}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n\r\n                  {i === \"9\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"도서문화오락\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={9}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"도서문화오락\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={9}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n                  {i === \"10\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"투자\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={10}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"투자\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={10}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n                  {i === \"11\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"기타\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={11}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"기타\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={11}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n                </>\r\n              ))} */}\r\n            {/* {chooseExpenseSectorArray.length === 0 && ( */}\r\n            {(expenseVisible || paramChoose || expenseExist) && (\r\n              <>\r\n                <Form.Check\r\n                  inline\r\n                  label=\"식비\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={1}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"교육비\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={2}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"공과금\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={3}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"의류비\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={4}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"생필품\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={5}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"차량교통비\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={6}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"의료보험\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={7}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"주거비\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={8}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"도서문화오락\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={9}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"투자\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={10}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"기타\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={11}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </>\r\n            )}\r\n            {/* {chooseIncomeSectorArray &&\r\n              chooseIncomeSectorArray.map((i) => (\r\n                <>\r\n                  {i === \"21\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"급여\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={21}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"급여\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={21}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n                  {i === \"22\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"투자\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={22}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"투자\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={22}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n\r\n                  {i === \"23\" ? (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"그외\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={23}\r\n                      onChange={() => handleChange()}\r\n                      disabled={\"true\"}\r\n                    />\r\n                  ) : (\r\n                    <Form.Check\r\n                      inline\r\n                      label=\"그외\"\r\n                      name=\"choosesector\"\r\n                      type={\"radio\"}\r\n                      value={23}\r\n                      onChange={() => handleChange()}\r\n                    />\r\n                  )}\r\n                </>\r\n              ))} */}\r\n            {(incomeVisible || paramChoose || incomeExist) && (\r\n              <>\r\n                <Form.Check\r\n                  inline\r\n                  label=\"급여\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={21}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"투자\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={22}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"그외\"\r\n                  name=\"choosesector\"\r\n                  type={\"radio\"}\r\n                  value={23}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </Form.Group>\r\n        <br />\r\n        {detailExpenseVisible &&\r\n          Array.isArray(finalExpenseObjectArray) &&\r\n          finalExpenseObjectArray.length !== 0 && (\r\n            <>\r\n              지출\r\n              {finalExpenseObjectArray.map((i, index) => (\r\n                <React.Fragment key={index}>\r\n                  {/* <Form key={index}> */}\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text>항목&nbsp;&nbsp;</InputGroup.Text>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      readOnly\r\n                      value={chooseSectorExpenseReturn(i.choosesector)}\r\n                    />\r\n                    <InputGroup.Text>내용&nbsp;&nbsp;</InputGroup.Text>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      readOnly\r\n                      value={`${i.content}${i.amount}`}\r\n                    />\r\n                    <Button\r\n                      variant=\"outline-danger\"\r\n                      type=\"button\"\r\n                      data-finalcontent={i.content}\r\n                      data-finalamount={i.amount}\r\n                      data-finalchoose={i.choose}\r\n                      data-finalchoosesector={i.choosesector}\r\n                      onClick={handleDetailRemoveOnClick}\r\n                    >\r\n                      삭제\r\n                    </Button>\r\n                  </InputGroup>\r\n                  {/* </Form> */}\r\n                </React.Fragment>\r\n              ))}\r\n              <br />\r\n            </>\r\n          )}\r\n        {detailIncomeVisible &&\r\n          Array.isArray(finalIncomeObjectArray) &&\r\n          finalIncomeObjectArray !== 0 && (\r\n            <>\r\n              수입\r\n              {finalIncomeObjectArray.map((i, index) => (\r\n                <React.Fragment key={index}>\r\n                  {/* <Form key={index}> */}\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text>항목&nbsp;&nbsp;</InputGroup.Text>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      readOnly\r\n                      value={chooseSectorIncomeReturn(i.choosesector)}\r\n                    />\r\n                    <InputGroup.Text>내용&nbsp;&nbsp;</InputGroup.Text>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      readOnly\r\n                      value={`${i.content}${i.amount}`}\r\n                    />\r\n                    <Button\r\n                      variant=\"outline-danger\"\r\n                      type=\"button\"\r\n                      data-finalcontent={i.content}\r\n                      data-finalamount={i.amount}\r\n                      data-finalchoose={i.choose}\r\n                      data-finalchoosesector={i.choosesector}\r\n                      onClick={handleDetailRemoveOnClick}\r\n                    >\r\n                      삭제\r\n                    </Button>\r\n                  </InputGroup>\r\n                  {/* </Form> */}\r\n                </React.Fragment>\r\n              ))}\r\n              <br />\r\n            </>\r\n          )}\r\n        {inputVisible && (\r\n          <>\r\n            <br />\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Text>내용&nbsp;&nbsp;</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"content\"\r\n                value={moneyDetailParam.content}\r\n                onChange={(e) => handleDetailChange(e)}\r\n              />\r\n              <InputGroup.Text>금액(단위 원)&nbsp;&nbsp;</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"amount\"\r\n                value={moneyDetailParam.amount}\r\n                onChange={(e) => handleDetailChange(e)}\r\n                ref={refAmount}\r\n              />\r\n\r\n              <Button\r\n                variant=\"outline-warning\"\r\n                type=\"button\"\r\n                onClick={(e) => handleDetailOnClick(e)}\r\n              >\r\n                추가\r\n              </Button>\r\n            </InputGroup>\r\n            <br />\r\n          </>\r\n        )}\r\n        <Button variant=\"outline-primary\" type=\"submit\">\r\n          가계부 등록\r\n        </Button>\r\n        &nbsp;\r\n        <Link to={`../list`}>\r\n          <Button variant=\"outline-secondary\" type=\"button\">\r\n            가계부달력이동\r\n          </Button>\r\n        </Link>\r\n        &nbsp;\r\n        <Link to={`/`}>\r\n          <Button variant=\"outline-success\" type=\"button\">\r\n            메인으로\r\n          </Button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoneyCreateComponent;\r\n","import LayoutIndex from \"../../components/layout/LayoutIndex\";\r\nimport MoneyCreateComponent from \"../../components/money/MoneyCreateComponent\";\r\nconst MoneyCreatePage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <MoneyCreateComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoneyCreatePage;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getMoneyListAsync,\r\n  postMoneyAsync,\r\n  patchMoneyAsync,\r\n  deleteMoneyAsync,\r\n} from \"../slices/moneySlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomMoney = () => {\r\n  const moneyState = useSelector((state) => state.MoneySlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const postMoneyC = ({\r\n    moneyParam,\r\n    finalExpenseObjectArray,\r\n    finalIncomeObjectArray,\r\n    dateobject,\r\n  }) => {\r\n    const payload = dispatch(\r\n      postMoneyAsync({\r\n        moneyParam,\r\n        finalExpenseObjectArray,\r\n        finalIncomeObjectArray,\r\n        dateobject,\r\n      })\r\n    );\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getMoneyListC = async () => {\r\n    await dispatch(getMoneyListAsync());\r\n  };\r\n\r\n  //수정\r\n  const patchMoneyC = ({\r\n    moneyParam,\r\n    finalExpenseObjectArray,\r\n    finalIncomeObjectArray,\r\n    dateobject,\r\n    bigchoose,\r\n  }) => {\r\n    const payload = dispatch(\r\n      patchMoneyAsync({\r\n        moneyParam,\r\n        finalExpenseObjectArray,\r\n        finalIncomeObjectArray,\r\n        dateobject,\r\n        bigchoose,\r\n      })\r\n    );\r\n    return payload; //thunk에서 받은 액션결과 리듀서함수로 전달\r\n  };\r\n\r\n  const moveToMoneyRead = (dateobject) => {\r\n    navigate({ pathname: `../read/${dateobject}` });\r\n  };\r\n\r\n  const moveToMoneyList = () => {\r\n    navigate({ pathname: \"../\" });\r\n  };\r\n\r\n  const moveToMoneyModify = (dateobject) => {\r\n    navigate({ pathname: `../modify/${dateobject}` });\r\n  };\r\n\r\n  const moveToMoneyCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}` });\r\n  };\r\n\r\n  const deleteMoneyC = (id) => {\r\n    const payload = dispatch(deleteMoneyAsync(id));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    moneyState,\r\n    postMoneyC,\r\n    deleteMoneyC,\r\n    patchMoneyC,\r\n    moveToMoneyRead,\r\n    moveToMoneyModify,\r\n    moveToMoneyCreate,\r\n    getMoneyListC,\r\n    moveToMoneyList,\r\n  };\r\n};\r\n\r\nexport default useCustomMoney;\r\n"],"names":["apiKey","process","console","log","navigatorFn","navigator","geolocation","_loadedCoords","_loadedCoords2","saveCoords","coordsObj","localStorage","setItem","JSON","stringify","handleSuccess","position","_position$coords","_position$coords2","latitude","coords","longitude","handleError","askForCoords","getCurrentPosition","loadedCoords","getItem","parse","dfs_xy_conv","code","v1","v2","DEGRAD","Math","PI","RADDEG","re","slat1","slat2","olon","olat","sn","tan","cos","sf","pow","ro","rs","ra","theta","floor","sin","xn","yn","sqrt","alat","atan","abs","atan2","alon","Number","weatherapi","async","weatherDate","weatherTime","_ref","weatherapiresult","xyresult","_result$data","_result$data$response","_result$data$response2","_result$data$response3","result","axios","get","params","serviceKey","numOfRows","pageNo","dataType","base_date","base_time","nx","x","ny","y","data","response","body","items","item","e","Footer","_jsx","Navbar","className","children","Container","Brand","_jsxs","style","fontSize","textAlign","alt","src","width","height","props","loginState","isLogin","useCustomLogin","modalVisible","setModalVisible","useState","msg","setMsg","msgList","setMsgList","chatroomname","setChatroomname","chatroompassword","setChatroompassword","refChatRoom","useRef","refChatRoompassword","moveToLogin","refModalBody","socket","setSocket","useEffect","on","_refModalBody$current2","prev","type","id","current","scrollIntoView","behavior","block","_refModalBody$current","message","username","socketidcheck","off","_Fragment","expand","display","alignItems","justifyContent","fluid","Image","Collapse","Nav","Link","href","Form","onSubmit","preventDefault","alert","undefined","io","path","autoConnect","connect","sendData","emit","chatStartClick","InputGroup","size","Text","Control","name","onChange","target","value","ref","Button","variant","Modal","Dialog","Header","Title","onClick","window","confirm","Body","overflow","map","v","i","listStyle","flex","padding","backgroundColor","marginTop","fontWeight","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","handleSubmitChat","handleMsg","BasicMenu","date","setDate","Date","initState","expense","income","dateobject","chooseSectorExpenseReturn","number","arr","split","n","chooseSectorIncomeReturn","chooseincome","initDetailState","content","amount","choose","choosesector","MoneyCreateComponent","searchParams","setSearchParams","useSearchParams","paramChoose","setParamChoose","moneyParam","setMoneyParam","refAmount","refIncomeReset","refExpenseReset","refReset","moneyDetailParam","setMoneyDetailParam","detailExpenseVisible","setDetailExpenseVisible","detailIncomeVisible","setDetailIncomeVisible","exceptionHandle","inputVisible","setInputVisible","expenseVisible","setExpenseVisible","incomeVisible","setIncomeVisible","postMoneyC","moveToMoneyRead","moveToMoneyCreate","moveToMoneyList","useCustomMoney","useParams","finalExpenseObjectArray","setFinalExpenseObjectArray","finalIncomeObjectArray","setFinalIncomeObjectArray","chooseCheckArray","setChooseCheckArray","chooseExpenseSectorArray","setChooseExpenseSectorArray","chooseIncomeSectorArray","setChooseIncomeSectorArray","expenseExist","setExpenseExist","incomeExist","setIncomeExist","useLayoutEffect","handleChange","useCallback","regex","RegExp","test","handleDetailChange","replaceAll","toLocaleString","handleDetailRemoveOnClick","finalcontent","dataset","finalamount","finalchoose","finalchoosesector","findIndex","length","filterExpense","filter","filterIncome","choosecheck","then","_result$result","_result$result2","catch","incomeValue","expenseValue","forEach","postMoney","error","err","onKeyDown","keyCode","Group","Label","disabled","Check","inline","label","checked","handleRadioReset","rounded","Array","isArray","index","React","readOnly","to","MoneyCreatePage","LayoutIndex","moneyState","useSelector","state","MoneySlice","dispatch","useDispatch","navigate","useNavigate","postMoneyAsync","deleteMoneyC","deleteMoneyAsync","patchMoneyC","_ref2","bigchoose","patchMoneyAsync","pathname","moveToMoneyModify","getMoneyListC","getMoneyListAsync"],"sourceRoot":""}