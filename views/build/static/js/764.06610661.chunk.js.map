{"version":3,"file":"static/js/764.06610661.chunk.js","mappings":"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","sources":["components/layout/Footer.js","api/chat.js","components/menus/BasicMenu.js","components/layout/Header.js","components/layout/LayoutIndex.js","components/diet/DietModifyComponent.js","pages/diet/DietModifyPage.js","hooks/useCustomDiet.js"],"sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <span style={{ fontSize: \"15px\", textAlign: \"right\" }}>\r\n            <img\r\n              alt=\"\"\r\n              src=\"/img/thumbs-up.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            \"미래는 오늘 여러분이 무엇을 하느냐에 달려 있습니다.\" - 마하트마\r\n            간디 <br />\r\n            The future depends on what we do in the present. -Mahatma Gandhi\r\n          </span>\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport jwtAxios from \"../util/jwtUtil\";\r\nimport { API_SERVER_HOST } from \"./memberApi\";\r\n//const prefix = `${API_SERVER_HOST}/api/chat`;\r\nconst prefix = `/api/chat`;\r\n\r\nexport const chatGetPost = async ({ chatroomname, chatroompassword }) => {\r\n  //console.log(\r\n  //  \"api/chat.js chatGetPost 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatGetPost 매개변수확인 chatroompassword -> \",\r\n  //  chatroompassword\r\n  //);\r\n  const res = await jwtAxios.post(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const chatList = async () => {\r\n  const res = await jwtAxios.get(`${prefix}/list`);\r\n  return res.data;\r\n};\r\n\r\n//\r\nexport const chatAdd = async ({\r\n  chatroomname,\r\n  chatroompassword,\r\n  loginState,\r\n}) => {\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroompassword -> \",\r\n  //  chatroompassword\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  const res = await jwtAxios.post(`${prefix}/create`, {\r\n    chatroomname,\r\n    chatroompassword,\r\n    loginState,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\n//삭제\r\nexport const chatDelete = async ({ chatroomname, chatroompassword }) => {\r\n  const res = await jwtAxios.delete(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\n//채팅\r\nimport { io } from \"socket.io-client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { chatAdd, chatGetPost } from \"../../api/chat\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\n\r\nconst BasicMenu = (props) => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  //채팅\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgList, setMsgList] = useState([]);\r\n  const [chatroomname, setChatroomname] = useState(\"\");\r\n  const [chatroompassword, setChatroompassword] = useState(\"\");\r\n\r\n  const refChatRoom = useRef();\r\n  const refChatRoompassword = useRef();\r\n  const { moveToLogin } = useCustomLogin();\r\n  const refModalBody = useRef();\r\n  //소켓\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const handleMsg = (e) => {\r\n    //console.log(\"handleMsg 이벤트핸들러 진입 ->\", e.target.value);\r\n    setMsg(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroomnameInput = (e) => {\r\n    //console.log(\"handleChatroomnameInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroomname(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroompasswordInput = (e) => {\r\n    //console.log(\"handleChatroompasswordInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroompassword(() => e.target.value);\r\n  };\r\n  const chatStartClick = (e) => {\r\n    //console.log(\"chatStartClick 이벤트핸들러함수 진입 \");\r\n\r\n    e.preventDefault();\r\n    if (!isLogin) {\r\n      alert(\"로그인 후 이용가능합니다.\");\r\n      return moveToLogin();\r\n    }\r\n\r\n    if (chatroomname === \"\" || chatroomname === undefined) {\r\n      alert(\"방 이름을 입력하세요!\");\r\n      return;\r\n    }\r\n    if (chatroompassword === \"\" || chatroompassword === undefined) {\r\n      alert(\"방 비밀번호를 입력하세요!\");\r\n      return;\r\n    }\r\n\r\n    //네임스페이스둘경우\r\n    //const socket = io(\"/pic\", {\r\n    const socket = io({\r\n      //const socket = io(\"https://picdiary2025.store/\", {\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"52.78.155.180\", {\r\n\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"http://52.78.155.180:8082\", {\r\n\r\n      //path: \"/my-custom-path/\",\r\n      //추가\r\n      //transports: [\"websocket\"], //폴링시도\r\n      //path: \"/ws\",\r\n      autoConnect: false,\r\n\r\n      // query: {\r\n      //   username: loginState, //email\r\n      //   chatroomname: e.target.chatroomname.value,\r\n      //   chatroompassword: e.target.chatroompassword.value,\r\n      // },\r\n    });\r\n    socket.connect();\r\n\r\n    setSocket(() => socket);\r\n\r\n    const sendData = {\r\n      username: loginState, //email\r\n      chatroomname,\r\n      chatroompassword,\r\n    };\r\n    socket.emit(\"roomcreate\", sendData);\r\n  }; //chatStartClick\r\n\r\n  const handleSubmitChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    //console.log(\"handleSubmitChat() 진입 \");\r\n    const sendData = {\r\n      //message: e.target.chatcontents.value,\r\n      message: msg,\r\n      username: loginState,\r\n      chatroomname,\r\n    };\r\n\r\n    socket.emit(\"message\", sendData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    function messageCallback(msg) {\r\n      //console.log(\"handleSubmitChat() 진입 message 콜백함수 진입 msg-> \", msg);\r\n\r\n      const { message, username, chatroomname } = msg;\r\n\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: message,\r\n          type: loginState === username ? \"me\" : \"other\",\r\n          id: username,\r\n        },\r\n      ]);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n      setMsg(() => \"\");\r\n    }\r\n    function goodbyeCallback(msg) {\r\n      // console.log(\r\n      //   \"out 이벤트 리액트에서 받아서 goodbyeCallback() 진입 msg => \",\r\n      //   msg\r\n      // );\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg.message,\r\n          type: \"goodbye\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n\r\n      const socketidcheck = socket.id;\r\n      //console.log(\"goodbyeCallback() 소켓 id확인 \", socketidcheck);\r\n    }\r\n\r\n    function roomcreateCallback(msg) {\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg,\r\n          type: \"welcome\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n      setModalVisible(() => true);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    } //callback\r\n    socket?.on(\"roomcreate\", roomcreateCallback);\r\n    socket?.on(\"message\", messageCallback);\r\n    socket?.on(\"out\", goodbyeCallback);\r\n\r\n    return () => {\r\n      socket?.off(\"message\");\r\n      socket?.off(\"out\");\r\n      socket?.off(\"roomcreate\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const chatCloseModal = () => {\r\n    //console.log(\"chatCloseModal() 진입\");\r\n    if (window.confirm(\"채팅방에서 나가시겠습니까?\")) {\r\n      //console.log(\"chatCloseModal onClick 내 out 소켓이벤트 전달전 \");\r\n      socket.emit(\"out\", { chatroomname, loginState, chatroompassword });\r\n      setSocket(null);\r\n      setMsgList([]);\r\n      setChatroomname(\"\");\r\n      setChatroompassword(\"\");\r\n      setModalVisible(() => false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"bg-body-tertiary\"\r\n        expand=\"lg\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand>\r\n            <Image\r\n              src=\"/img/sunglass.png\"\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n            />\r\n            하루관리\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {isLogin ? (\r\n                <>\r\n                  <Nav.Link href=\"/diary\">사진일기</Nav.Link>\r\n                  <Nav.Link href=\"/diet\">식단관리</Nav.Link>\r\n                  <Nav.Link href=\"/exercise\">운동관리</Nav.Link>\r\n                  <Nav.Link href=\"/money\">금전관리</Nav.Link>\r\n                  <Nav.Link href=\"/logout\">로그아웃</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Nav.Link href=\"/login\">로그인</Nav.Link>\r\n                  <Nav.Link href=\"/join\">회원가입</Nav.Link>\r\n                </>\r\n              )}\r\n            </Nav>\r\n            <Form onSubmit={(e) => chatStartClick(e)}>\r\n              {\" \"}\r\n              <InputGroup size=\"sm\" style={{ width: \"600px\" }}>\r\n                <InputGroup.Text>채팅방명</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroomname\"\r\n                  onChange={handleChatroomnameInput}\r\n                  value={chatroomname}\r\n                  ref={refChatRoom}\r\n                />\r\n                <InputGroup.Text>방비밀번호</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroompassword\"\r\n                  ref={refChatRoompassword}\r\n                  onChange={handleChatroompasswordInput}\r\n                  value={chatroompassword}\r\n                />\r\n                <Button variant=\"outline-secondary\" type=\"submit\">\r\n                  채팅하기\r\n                </Button>\r\n              </InputGroup>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {modalVisible && (\r\n        <>\r\n          <div className=\"modal show\" style={{ display: \"block\" }}>\r\n            <Modal.Dialog>\r\n              <Modal.Header>\r\n                <Modal.Title> 채팅방명 : {chatroomname} </Modal.Title>\r\n                &nbsp; &nbsp;\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  style={{ textAlign: \"left\" }}\r\n                  onClick={() => chatCloseModal()}\r\n                  type=\"button\"\r\n                >\r\n                  채팅창닫기\r\n                </Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div style={{ overflow: \"scroll\", height: \"500px\" }}>\r\n                  <ul>\r\n                    {msgList.map((v, i) =>\r\n                      v.type === \"welcome\" || v.type === \"goodbye\" ? (\r\n                        <li key={i} style={{ listStyle: \"none\" }}>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                          <div>{v.msg}</div>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                        </li>\r\n                      ) : v.type === \"me\" ? (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_1`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      ) : (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_2`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#000\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    )}\r\n                    <li ref={refModalBody} style={{ listStyle: \"none\" }} />\r\n                  </ul>\r\n                </div>\r\n              </Modal.Body>\r\n              <Form onSubmit={(e) => handleSubmitChat(e)}>\r\n                <Modal.Footer>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                      채팅내용\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                      onChange={(e) => handleMsg(e)}\r\n                      value={msg}\r\n                      name=\"chatcontents\"\r\n                    />\r\n                  </InputGroup>\r\n\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    type=\"submit\"\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    메시지보내기\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal.Dialog>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicMenu;\r\n","import BasicMenu from \"../menus/BasicMenu\";\r\n\r\nconst Header = (props) => {\r\n  return <BasicMenu isLogin={props.isLogin} />;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, cloneElement } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst LayoutIndex = ({ children }) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const { loginState, isLogin } = useCustomLogin();\r\n\r\n  //console.log(\"loginState -> \", loginState);\r\n  //console.log(\"isLogin -> \", isLogin);\r\n\r\n  // const clonedElement = cloneElement(children, { today: date });\r\n\r\n  return (\r\n    <>\r\n      <Header isLogin={isLogin} />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutIndex;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport useCustomDiet from \"../../hooks/useCustomDiet\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { deleteDiet, getDietEach, patchDiet } from \"../../api/dietApi\";\r\n\r\nconst chooseReturn = (number) => {\r\n  // console.log(\r\n  //   \"DietCreateComponent.js chooseReturn() 진입 매개변수 => \",\r\n  //   number,\r\n  //   \"typeof -> \",\r\n  //   typeof number\r\n  // );\r\n  if (!number) {\r\n    return;\r\n  }\r\n  const str = number;\r\n  const arr = str.split(\"\");\r\n  //console.log(\"DietCreateComponent.js chooseReturn() 진입 배열변경 => \", arr);\r\n  let result = \"\";\r\n  for (let n of arr) {\r\n    switch (n) {\r\n      case \"1\":\r\n        return (result = \"🥦아침\");\r\n      case \"2\":\r\n        return (result = \"🍄점심\");\r\n      case \"3\":\r\n        return (result = \"🧅저녁\");\r\n      case \"4\":\r\n        return (result = \"🧄간식\");\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  //console.log(result);\r\n};\r\n\r\nconst chooseSwitch = (choose) => {\r\n  if (!choose) {\r\n    return;\r\n  }\r\n  //console.log(\"chooseSwitch 매개변수 -> \", choose);\r\n  switch (choose) {\r\n    case \"1\":\r\n      return \"아침\";\r\n    case \"2\":\r\n      return \"점심\";\r\n    case \"3\":\r\n      return \"저녁\";\r\n    case \"4\":\r\n      return \"간식\";\r\n    default:\r\n      return \"아침\";\r\n  }\r\n};\r\n\r\nconst chooseCheckbox = (number) => {\r\n  // console.log(\r\n  //   \"DietCreateComponent.js chooseCheckbox() 진입 매개변수 => \",\r\n  //   number,\r\n  //   \"typeof -> \",\r\n  //   typeof number\r\n  // );\r\n  if (!number) {\r\n    return;\r\n  }\r\n  const str = number;\r\n  const arr = str.split(\"\");\r\n  //console.log(\"DietCreateComponent.js chooseCheckbox() 진입 배열변경 => \", arr);\r\n  return arr;\r\n};\r\n\r\n//Dietdetail quantity choose content dateobject email 5개\r\n//수정리액트상태 quantity choose content dateobject email compound배열\r\n\r\nconst initDetailState = {\r\n  content: \"\",\r\n  quantity: 0,\r\n  choose: \"\",\r\n  dateobject: \"\",\r\n  email: \"\",\r\n  compound: [], //Diet모델에 넣을것\r\n};\r\n\r\n//initState -> content, quantity, email, choose,dataobject\r\n//initDetailState -> content, quantity\r\n\r\nconst DietModifyComponent = () => {\r\n  const [dietModifyParam, setDietModifyParam] = useState(initDetailState);\r\n  const refQuantity = useRef(null);\r\n\r\n  const { choose, dateobject } = useParams();\r\n  const [chooseResult, setChooseResult] = useState(\"\");\r\n  const [dietModifyFinalArray, setDietModifyFinalArray] = useState([]);\r\n  const [finalObjectArray, setFinalObjectArray] = useState([]);\r\n  const [chooseCheckArray, setChooseCheckArray] = useState([]);\r\n  const [detailVisible, setDetailVisible] = useState(false);\r\n  const [inputVisible, setInputVisible] = useState(true);\r\n  let { loginState } = useCustomLogin();\r\n  const {\r\n    patchDietC,\r\n    moveToDietList,\r\n    moveToDietModify,\r\n    deleteDietC,\r\n    moveToDietRead,\r\n  } = useCustomDiet();\r\n  const navigate = useNavigate();\r\n\r\n  // console.log(\r\n  //   \"DietModifyComponent.js 경로값확인 choose-> \",\r\n  //   choose,\r\n  //   \", dateobject -> \",\r\n  //   dateobject\r\n  // );\r\n\r\n  const handleModifyChange = useCallback(\r\n    (e) => {\r\n      //console.log(e.target.value, e.target.name);\r\n      //console.log(dietModifyParam);\r\n\r\n      const regex = new RegExp(/^[0-9]+$/);\r\n\r\n      if (e.target.name === \"quantity\") {\r\n        let value = Number(e.target.value);\r\n\r\n        const result = regex.test(value);\r\n        //console.log(\"결과 \", result);\r\n        if (!regex.test(value) || value === \"NaN\") {\r\n          alert(\"식단 양은 숫자만 입력가능합니다.\");\r\n          refQuantity.current.value = 0;\r\n          return;\r\n        }\r\n      }\r\n      dietModifyParam[e.target.name] = e.target.value;\r\n      setDietModifyParam((prev) => {\r\n        return { ...prev, dietModifyParam };\r\n      });\r\n    },\r\n    [dietModifyParam]\r\n  );\r\n\r\n  const handleDetailOnClick = () => {\r\n    //refDetailText.current = dietDetailParam.content + dietDetailParam.quantity;\r\n\r\n    if (dietModifyParam.content === \"\" || dietModifyParam.quantity === 0) {\r\n      alert(\"내용을 모두 입력해주세요!\");\r\n      return;\r\n    }\r\n\r\n    const compound = dietModifyParam.content + dietModifyParam.quantity;\r\n    //console.log(\"dietModifyParam 입력한 속성값 합침 -> \", compound);\r\n\r\n    //dietModifyFinalArray.forEach((i) =>\r\n    //console.log(\"dietDetailFinalArray -> \", i)\r\n    //);\r\n    const sameResult = dietModifyFinalArray.filter((i) => i === compound);\r\n    //console.log(\"handleDetailOnclick sameResult-> \", sameResult);\r\n    if (sameResult.length !== 0) {\r\n      alert(\"이미 식단에 추가했습니다!\");\r\n      setDietModifyParam(initDetailState);\r\n\r\n      return;\r\n    }\r\n\r\n    // console.log(\r\n    //   \"★★ dietModifyParam.quantity 타입확인\",\r\n    //   typeof dietModifyParam.quantity\r\n    // );\r\n    setFinalObjectArray([\r\n      ...finalObjectArray,\r\n      {\r\n        content: dietModifyParam.content,\r\n        quantity: Number(dietModifyParam.quantity),\r\n      },\r\n    ]);\r\n\r\n    setDietModifyFinalArray((dietDetailFinalArray) => [\r\n      ...dietDetailFinalArray,\r\n      compound,\r\n    ]);\r\n\r\n    dietModifyParam[\"content\"] = \"\";\r\n    dietModifyParam[\"quantity\"] = 0;\r\n    setDietModifyParam((prev) => {\r\n      return dietModifyParam;\r\n    });\r\n    setDetailVisible(true);\r\n  };\r\n\r\n  //------------------------수정이벤트핸들러 submit버튼처리\r\n  const handleModifyDiet = (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log(\r\n    //   \"handleModifyDiet() 내 e.target.choose.value-> \",\r\n    //   e.target.choose.value\r\n    // );\r\n    setInputVisible(false);\r\n    if (dietModifyFinalArray.length === 0) {\r\n      alert(\"식단내용을 입력해주세요!\");\r\n      setInputVisible(true);\r\n      return;\r\n    }\r\n    // console.log(\"refQuantity.current -> \", refQuantity.current);\r\n    // dietModifyParam[\"choose\"] = choose;\r\n    // dietModifyParam[\"email\"] = loginState;\r\n    // dietModifyParam[\"dateobject\"] = dateobject;\r\n    // dietModifyParam[\"compond\"] = dietModifyFinalArray;\r\n\r\n    // setDietModifyParam(dietModifyParam)\r\n    //initState -> content, quantity, email, choose,dataobject\r\n    //initDetailState -> content, quantity\r\n\r\n    // const dietDetailFinalObject = dietModifyFinalArray.join(\" \");\r\n    // console.log(\r\n    //   \"DietCreateComponent.js dietDetailFinalObject 문자열로 만듬 -> \",\r\n    //   dietDetailFinalObject\r\n    // );\r\n    //dietModifyParam[\"quantity\"] = 0;\r\n    //dietModifyParam[\"content\"] = dietDetailFinalObject;\r\n    //setDietModifyParam({ ...dietModifyParam });\r\n    //console.log(\"DietCreateComponent.js handleModifyDiet -> \", dietModifyParam);\r\n\r\n    // const { picture } = e.target;\r\n    // postDietC({ dietParam, picture })\r\n\r\n    // console.log(\r\n    //   \"DietCreateComponent.js finalObjectArray -> \",\r\n    //   finalObjectArray\r\n    // );\r\n\r\n    //수정 보냄 axios\r\n    patchDiet({ finalObjectArray, choose, dateobject })\r\n      .then((result) => {\r\n        // console.log(\r\n        //   \"DietCreateComponent.js axios patchDietC then() 진입 -> \",\r\n        //   result\r\n        // );\r\n        if (result.result === \"success\") {\r\n          alert(dateobject + \" 일자 식단 수정했습니다.!\");\r\n          // if (result.payload.image) {\r\n          //   URL.revokeObjectURL(image);\r\n          //   setImage(\"\");\r\n          // }\r\n          //console.log(result.id);\r\n          dietModifyParam[\"content\"] = \"\";\r\n          dietModifyParam[\"quantity\"] = 0;\r\n          setDietModifyParam((prev) => {\r\n            return dietModifyParam;\r\n          });\r\n          moveToDietRead({ choose, dateobject });\r\n        }\r\n        if (result.error) {\r\n          //console.log(\"result.error -> \", result.error);\r\n          alert(dateobject + \" 일자 식단 수정 실패했습니다.\");\r\n          moveToDietModify({ choose, dateobject });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        //console.log(\"DietCreateComponent.js axios patchDietC catch()\", err);\r\n        alert(dateobject + \"일자 식단 수정 실패했습니다.\");\r\n        moveToDietModify({ choose, dateobject });\r\n      });\r\n  };\r\n\r\n  const handleDetailRemoveOnClick = (e) => {\r\n    //console.log(\r\n    //   \"handleDetailRemoveOnClick() dataset =>\",\r\n    //   e.target.dataset.finalcontent,\r\n    //   \"e.target.dataset.finalquantity -> \",\r\n    //   e.target.dataset.finalquantity\r\n    // );\r\n    const finalcontent = e.target.dataset.finalcontent;\r\n    const finalquantity = e.target.dataset.finalquantity;\r\n\r\n    // const newProduce = produce(dietDetailFinalArray, (draft) => {\r\n    //   draft.filter((d) => d !== finalcontent);\r\n    // });\r\n\r\n    const newProduce = dietModifyFinalArray.filter(\r\n      (i) => i !== `${finalcontent}${finalquantity}`\r\n    );\r\n    //console.log(\"handleDetailRemoveOnClick() newProduce =>\", newProduce);\r\n    setDietModifyFinalArray([...newProduce]);\r\n\r\n    const newFinalObject = finalObjectArray.filter(\r\n      (i) => i.content !== finalcontent && i.quantity !== finalquantity\r\n    );\r\n    setFinalObjectArray([...newFinalObject]);\r\n    return;\r\n  };\r\n\r\n  //-----------------------------------식단삭제\r\n  const handleDeleteOnClick = () => {\r\n    if (window.confirm(\"해당 식단을 삭제하십니까?\")) {\r\n      deleteDiet({ choose, dateobject })\r\n        .then((result) => {\r\n          //console.log(\"DietModifyComponent.js then() 진입 \", result.data);\r\n          if (result.result === \"success\") {\r\n            alert(dateobject + \"일자의 식단이 삭제되었습니다.\");\r\n\r\n            moveToDietList();\r\n          }\r\n          if (result.error === \"error\") {\r\n            alert(dateobject + \"일자의 식단 삭제를 실패했습니다.\");\r\n            moveToDietRead({ dateobject, choose });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          //console.log(\"DietModifyComponent.js catch() 진입 \", err);\r\n          // alert(dietParam.dateobject + \"일자의 식단 삭제를 실패했습니다.\");\r\n          moveToDietRead({ dateobject, choose });\r\n        });\r\n    } //window.confirm\r\n  };\r\n\r\n  //받아옴\r\n\r\n  //dietModifyFianlArray 는 밥200 문자열 배열구성\r\n  //finalObjectArray 분리되어 content, quantitty 객체배열구성 -> detailVisible 보임\r\n\r\n  useEffect(() => {\r\n    const getDietEachEI = () =>\r\n      getDietEach({ choose, dateobject })\r\n        .then((result) => {\r\n          //console.log(\"DietModifyComponent.js useEffect() then() -> \", result);\r\n\r\n          result.forEach((i) => {\r\n            const compound = i.content + i.quantity;\r\n            //console.log(\"compound -> \", compound);\r\n            setDietModifyFinalArray((prev) => [...prev, compound]);\r\n            const newFinalObject = { content: i.content, quantity: i.quantity };\r\n            setFinalObjectArray((prev) => [...prev, newFinalObject]);\r\n          });\r\n          setDetailVisible(true);\r\n        })\r\n        .catch((err) => {\r\n          //console.log(\"DietModifyComponent.js useEffect() catch() -> \", err);\r\n        });\r\n    getDietEachEI();\r\n\r\n    return () => {\r\n      setDietModifyFinalArray([]);\r\n      setFinalObjectArray([]);\r\n    };\r\n  }, []);\r\n  //console.log(\"dietModifyFinalArray -> \", dietModifyFinalArray);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <br />\r\n\r\n      <h4>식단수정</h4>\r\n      <hr />\r\n      <br />\r\n\r\n      <Form onSubmit={handleModifyDiet}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>식단일자</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"dateobject\"\r\n            value={dateobject}\r\n            disabled\r\n          />\r\n          <Form.Text className=\"text-muted\"></Form.Text>\r\n        </Form.Group>\r\n        <br />\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>시간선택</Form.Label>\r\n\r\n          <div key={`inline-radio`} className=\"mb-3\">\r\n            <Form.Check\r\n              inline\r\n              label=\"아침\"\r\n              name=\"choose\"\r\n              type={\"radio\"}\r\n              value={1}\r\n              // onChange={handleChange}\r\n              disabled\r\n              checked={choose === \"1\" ? true : false}\r\n            />\r\n            <Form.Check\r\n              inline\r\n              label=\"점심\"\r\n              name=\"choose\"\r\n              type={\"radio\"}\r\n              value={2}\r\n              //onChange={handleChange}\r\n              disabled\r\n              checked={choose === \"2\" ? true : false}\r\n            />\r\n            <Form.Check\r\n              inline\r\n              label=\"저녁\"\r\n              name=\"choose\"\r\n              type={\"radio\"}\r\n              value={3}\r\n              //onChange={handleChange}\r\n              disabled\r\n              checked={choose === \"3\" ? true : false}\r\n            />\r\n            <Form.Check\r\n              inline\r\n              label=\"간식\"\r\n              name=\"choose\"\r\n              type={\"radio\"}\r\n              value={4}\r\n              //onChange={handleChange}\r\n              disabled\r\n              checked={choose === \"4\" ? true : false}\r\n            />\r\n          </div>\r\n        </Form.Group>\r\n        <br />\r\n        {detailVisible && (\r\n          <>\r\n            {/* {dietDetailFinalArray.map((i, index) => ( */}\r\n            {finalObjectArray.map((i, index) => (\r\n              <React.Fragment key={index}>\r\n                {/* <Form key={index}> */}\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Text>내용&nbsp;&nbsp;</InputGroup.Text>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    readOnly\r\n                    value={`${i.content}${i.quantity}`}\r\n                  />\r\n                  <Button\r\n                    variant=\"outline-danger\"\r\n                    type=\"button\"\r\n                    data-finalcontent={i.content}\r\n                    data-finalquantity={i.quantity}\r\n                    onClick={handleDetailRemoveOnClick}\r\n                  >\r\n                    삭제\r\n                  </Button>\r\n                </InputGroup>\r\n                {/* </Form> */}\r\n              </React.Fragment>\r\n            ))}\r\n          </>\r\n        )}\r\n        {inputVisible && (\r\n          <>\r\n            <br />\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Text>내용&nbsp;&nbsp;</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"content\"\r\n                value={dietModifyParam.content}\r\n                onChange={handleModifyChange}\r\n              />\r\n              <InputGroup.Text>양(단위 g/ml)&nbsp;&nbsp;</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"quantity\"\r\n                value={dietModifyParam.quantity}\r\n                onChange={handleModifyChange}\r\n                ref={refQuantity}\r\n              />\r\n\r\n              <Button\r\n                variant=\"outline-warning\"\r\n                type=\"button\"\r\n                onClick={handleDetailOnClick}\r\n              >\r\n                추가\r\n              </Button>\r\n            </InputGroup>\r\n            <br />\r\n          </>\r\n        )}\r\n        <Button variant=\"outline-primary\" type=\"submit\">\r\n          식단수정완료\r\n        </Button>\r\n        &nbsp;&nbsp;\r\n        <Button\r\n          variant=\"outline-warning\"\r\n          type=\"button\"\r\n          onClick={() => handleDeleteOnClick()}\r\n        >\r\n          식단삭제\r\n        </Button>\r\n        &nbsp;\r\n        <Link to={`../`}>\r\n          <Button variant=\"outline-secondary\">식단 달력이동</Button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DietModifyComponent;\r\n","import DietModifyComponent from \"../../components/diet/DietModifyComponent\";\r\nimport LayoutIndex from \"../../components/layout/LayoutIndex\";\r\n\r\nconst DietModifyPage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <DietModifyComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietModifyPage;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getDietListAsync,\r\n  postDietAsync,\r\n  patchDietAsync,\r\n  deleteDietAsync,\r\n} from \"../slices/dietSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomDiet = () => {\r\n  const dietState = useSelector((state) => state.dietSlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //  const postDietC = ({ dietParam, picture }) => {\r\n\r\n  const postDietC = ({ dietParam, finalObjectArray }) => {\r\n    const payload = dispatch(postDietAsync({ dietParam, finalObjectArray }));\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getDietListC = async () => {\r\n    await dispatch(getDietListAsync());\r\n  };\r\n\r\n  //수정\r\n  // 사진존재시 const patchDietC = ({ diaryParam, picture }) => {\r\n  const patchDietC = (diaryParam) => {\r\n    const payload = dispatch(patchDietAsync(diaryParam));\r\n    return payload; //thunk에서 받은 액션결과전달\r\n  };\r\n\r\n  //추가\r\n  const moveToDietRead = ({ dateobject, choose }) => {\r\n    navigate({ pathname: `../read/${choose}/${dateobject}`, replace: \"true\" });\r\n  };\r\n\r\n  //추가\r\n  const moveToDietReadAll = (dateobject) => {\r\n    navigate({ pathname: `../readall/${dateobject}` });\r\n  };\r\n\r\n  const moveToDietList = () => {\r\n    navigate({ pathname: \"../\", replace: \"true\" });\r\n  };\r\n\r\n  //추가\r\n  const moveToDietModify = ({ choose, dateobject }) => {\r\n    navigate({ pathname: `../modify/${dateobject}/${choose}` });\r\n  };\r\n\r\n  //추가\r\n  const moveToDietCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}` });\r\n  };\r\n\r\n  const deleteDietC = ({ choose, dateobject }) => {\r\n    const payload = dispatch(deleteDietAsync({ choose, dateobject }));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    dietState,\r\n    postDietC,\r\n    //    getDietC,\r\n    deleteDietC,\r\n    moveToDietReadAll,\r\n    patchDietC,\r\n    moveToDietRead,\r\n    moveToDietModify,\r\n    moveToDietCreate,\r\n    getDietListC,\r\n    moveToDietList,\r\n  };\r\n};\r\n\r\nexport default useCustomDiet;\r\n"],"names":["Footer","_jsx","Navbar","className","children","Container","Brand","_jsxs","style","fontSize","textAlign","alt","src","width","height","props","loginState","isLogin","useCustomLogin","modalVisible","setModalVisible","useState","msg","setMsg","msgList","setMsgList","chatroomname","setChatroomname","chatroompassword","setChatroompassword","refChatRoom","useRef","refChatRoompassword","moveToLogin","refModalBody","socket","setSocket","useEffect","on","_refModalBody$current2","prev","type","id","current","scrollIntoView","behavior","block","_refModalBody$current","message","username","off","_Fragment","expand","display","alignItems","justifyContent","fluid","Image","Collapse","Nav","Link","href","Form","onSubmit","e","preventDefault","alert","undefined","io","autoConnect","connect","sendData","emit","chatStartClick","InputGroup","size","Text","Control","name","onChange","target","value","ref","Button","variant","Modal","Dialog","Header","Title","onClick","window","confirm","Body","overflow","map","v","i","listStyle","flex","padding","backgroundColor","marginTop","fontWeight","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","handleSubmitChat","handleMsg","BasicMenu","_ref","date","setDate","Date","initDetailState","content","quantity","choose","dateobject","email","compound","DietModifyComponent","dietModifyParam","setDietModifyParam","refQuantity","useParams","chooseResult","setChooseResult","dietModifyFinalArray","setDietModifyFinalArray","finalObjectArray","setFinalObjectArray","chooseCheckArray","setChooseCheckArray","detailVisible","setDetailVisible","inputVisible","setInputVisible","patchDietC","moveToDietList","moveToDietModify","deleteDietC","moveToDietRead","useCustomDiet","handleModifyChange","useNavigate","useCallback","regex","RegExp","Number","test","handleDetailRemoveOnClick","finalcontent","dataset","finalquantity","newProduce","filter","newFinalObject","getDietEach","then","result","forEach","catch","err","length","patchDiet","error","Group","Label","disabled","Check","inline","label","checked","index","React","readOnly","handleDetailOnClick","dietDetailFinalArray","deleteDiet","to","DietModifyPage","LayoutIndex","dietState","useSelector","state","dietSlice","dispatch","useDispatch","navigate","postDietC","dietParam","postDietAsync","_ref4","deleteDietAsync","moveToDietReadAll","pathname","diaryParam","patchDietAsync","_ref2","replace","_ref3","moveToDietCreate","getDietListC","async","getDietListAsync"],"sourceRoot":""}