{"version":3,"file":"static/js/657.bf48cdab.chunk.js","mappings":"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","sources":["components/layout/Footer.js","api/chat.js","components/menus/BasicMenu.js","components/layout/Header.js","components/layout/LayoutIndex.js","components/exercise/ExerciseCreateComponent.js","pages/exercise/ExerciseCreatePage.js","hooks/useCustomExercise.js"],"sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <span style={{ fontSize: \"15px\", textAlign: \"right\" }}>\r\n            <img\r\n              alt=\"\"\r\n              src=\"/img/thumbs-up.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            \"미래는 오늘 여러분이 무엇을 하느냐에 달려 있습니다.\" - 마하트마\r\n            간디 <br />\r\n            The future depends on what we do in the present. -Mahatma Gandhi\r\n          </span>\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport jwtAxios from \"../util/jwtUtil\";\r\nimport { API_SERVER_HOST } from \"./memberApi\";\r\n//const prefix = `${API_SERVER_HOST}/api/chat`;\r\nconst prefix = `/api/chat`;\r\n\r\nexport const chatGetPost = async ({ chatroomname, chatroompassword }) => {\r\n  //console.log(\r\n  //  \"api/chat.js chatGetPost 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatGetPost 매개변수확인 chatroompassword -> \",\r\n  //  chatroompassword\r\n  //);\r\n  const res = await jwtAxios.post(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const chatList = async () => {\r\n  const res = await jwtAxios.get(`${prefix}/list`);\r\n  return res.data;\r\n};\r\n\r\n//\r\nexport const chatAdd = async ({\r\n  chatroomname,\r\n  chatroompassword,\r\n  loginState,\r\n}) => {\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroompassword -> \",\r\n  //  chatroompassword\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  const res = await jwtAxios.post(`${prefix}/create`, {\r\n    chatroomname,\r\n    chatroompassword,\r\n    loginState,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\n//삭제\r\nexport const chatDelete = async ({ chatroomname, chatroompassword }) => {\r\n  const res = await jwtAxios.delete(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\n//채팅\r\nimport { io } from \"socket.io-client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { chatAdd, chatGetPost } from \"../../api/chat\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\n\r\nconst BasicMenu = (props) => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  //채팅\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgList, setMsgList] = useState([]);\r\n  const [chatroomname, setChatroomname] = useState(\"\");\r\n  const [chatroompassword, setChatroompassword] = useState(\"\");\r\n\r\n  const refChatRoom = useRef();\r\n  const refChatRoompassword = useRef();\r\n  const { moveToLogin } = useCustomLogin();\r\n  const refModalBody = useRef();\r\n  //소켓\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const handleMsg = (e) => {\r\n    //console.log(\"handleMsg 이벤트핸들러 진입 ->\", e.target.value);\r\n    setMsg(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroomnameInput = (e) => {\r\n    //console.log(\"handleChatroomnameInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroomname(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroompasswordInput = (e) => {\r\n    //console.log(\"handleChatroompasswordInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroompassword(() => e.target.value);\r\n  };\r\n  const chatStartClick = (e) => {\r\n    //console.log(\"chatStartClick 이벤트핸들러함수 진입 \");\r\n\r\n    e.preventDefault();\r\n    if (!isLogin) {\r\n      alert(\"로그인 후 이용가능합니다.\");\r\n      return moveToLogin();\r\n    }\r\n\r\n    if (chatroomname === \"\" || chatroomname === undefined) {\r\n      alert(\"방 이름을 입력하세요!\");\r\n      return;\r\n    }\r\n    if (chatroompassword === \"\" || chatroompassword === undefined) {\r\n      alert(\"방 비밀번호를 입력하세요!\");\r\n      return;\r\n    }\r\n\r\n    //네임스페이스둘경우\r\n    //const socket = io(\"/pic\", {\r\n    const socket = io({\r\n      //const socket = io(\"https://picdiary2025.store/\", {\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"52.78.155.180\", {\r\n\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"http://52.78.155.180:8082\", {\r\n\r\n      //path: \"/my-custom-path/\",\r\n      //추가\r\n      //transports: [\"websocket\"], //폴링시도\r\n      //path: \"/ws\",\r\n      autoConnect: false,\r\n\r\n      // query: {\r\n      //   username: loginState, //email\r\n      //   chatroomname: e.target.chatroomname.value,\r\n      //   chatroompassword: e.target.chatroompassword.value,\r\n      // },\r\n    });\r\n    socket.connect();\r\n\r\n    setSocket(() => socket);\r\n\r\n    const sendData = {\r\n      username: loginState, //email\r\n      chatroomname,\r\n      chatroompassword,\r\n    };\r\n    socket.emit(\"roomcreate\", sendData);\r\n  }; //chatStartClick\r\n\r\n  const handleSubmitChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    //console.log(\"handleSubmitChat() 진입 \");\r\n    const sendData = {\r\n      //message: e.target.chatcontents.value,\r\n      message: msg,\r\n      username: loginState,\r\n      chatroomname,\r\n    };\r\n\r\n    socket.emit(\"message\", sendData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    function messageCallback(msg) {\r\n      //console.log(\"handleSubmitChat() 진입 message 콜백함수 진입 msg-> \", msg);\r\n\r\n      const { message, username, chatroomname } = msg;\r\n\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: message,\r\n          type: loginState === username ? \"me\" : \"other\",\r\n          id: username,\r\n        },\r\n      ]);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n      setMsg(() => \"\");\r\n    }\r\n    function goodbyeCallback(msg) {\r\n      // console.log(\r\n      //   \"out 이벤트 리액트에서 받아서 goodbyeCallback() 진입 msg => \",\r\n      //   msg\r\n      // );\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg.message,\r\n          type: \"goodbye\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n\r\n      const socketidcheck = socket.id;\r\n      //console.log(\"goodbyeCallback() 소켓 id확인 \", socketidcheck);\r\n    }\r\n\r\n    function roomcreateCallback(msg) {\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg,\r\n          type: \"welcome\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n      setModalVisible(() => true);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    } //callback\r\n    socket?.on(\"roomcreate\", roomcreateCallback);\r\n    socket?.on(\"message\", messageCallback);\r\n    socket?.on(\"out\", goodbyeCallback);\r\n\r\n    return () => {\r\n      socket?.off(\"message\");\r\n      socket?.off(\"out\");\r\n      socket?.off(\"roomcreate\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const chatCloseModal = () => {\r\n    //console.log(\"chatCloseModal() 진입\");\r\n    if (window.confirm(\"채팅방에서 나가시겠습니까?\")) {\r\n      //console.log(\"chatCloseModal onClick 내 out 소켓이벤트 전달전 \");\r\n      socket.emit(\"out\", { chatroomname, loginState, chatroompassword });\r\n      setSocket(null);\r\n      setMsgList([]);\r\n      setChatroomname(\"\");\r\n      setChatroompassword(\"\");\r\n      setModalVisible(() => false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"bg-body-tertiary\"\r\n        expand=\"lg\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand>\r\n            <Image\r\n              src=\"/img/sunglass.png\"\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n            />\r\n            하루관리\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {isLogin ? (\r\n                <>\r\n                  <Nav.Link href=\"/diary\">사진일기</Nav.Link>\r\n                  <Nav.Link href=\"/diet\">식단관리</Nav.Link>\r\n                  <Nav.Link href=\"/exercise\">운동관리</Nav.Link>\r\n                  <Nav.Link href=\"/money\">금전관리</Nav.Link>\r\n                  <Nav.Link href=\"/logout\">로그아웃</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Nav.Link href=\"/login\">로그인</Nav.Link>\r\n                  <Nav.Link href=\"/join\">회원가입</Nav.Link>\r\n                </>\r\n              )}\r\n            </Nav>\r\n            <Form onSubmit={(e) => chatStartClick(e)}>\r\n              {\" \"}\r\n              <InputGroup size=\"sm\" style={{ width: \"600px\" }}>\r\n                <InputGroup.Text>채팅방명</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroomname\"\r\n                  onChange={handleChatroomnameInput}\r\n                  value={chatroomname}\r\n                  ref={refChatRoom}\r\n                />\r\n                <InputGroup.Text>방비밀번호</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroompassword\"\r\n                  ref={refChatRoompassword}\r\n                  onChange={handleChatroompasswordInput}\r\n                  value={chatroompassword}\r\n                />\r\n                <Button variant=\"outline-secondary\" type=\"submit\">\r\n                  채팅하기\r\n                </Button>\r\n              </InputGroup>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {modalVisible && (\r\n        <>\r\n          <div className=\"modal show\" style={{ display: \"block\" }}>\r\n            <Modal.Dialog>\r\n              <Modal.Header>\r\n                <Modal.Title> 채팅방명 : {chatroomname} </Modal.Title>\r\n                &nbsp; &nbsp;\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  style={{ textAlign: \"left\" }}\r\n                  onClick={() => chatCloseModal()}\r\n                  type=\"button\"\r\n                >\r\n                  채팅창닫기\r\n                </Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div style={{ overflow: \"scroll\", height: \"500px\" }}>\r\n                  <ul>\r\n                    {msgList.map((v, i) =>\r\n                      v.type === \"welcome\" || v.type === \"goodbye\" ? (\r\n                        <li key={i} style={{ listStyle: \"none\" }}>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                          <div>{v.msg}</div>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                        </li>\r\n                      ) : v.type === \"me\" ? (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_1`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      ) : (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_2`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#000\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    )}\r\n                    <li ref={refModalBody} style={{ listStyle: \"none\" }} />\r\n                  </ul>\r\n                </div>\r\n              </Modal.Body>\r\n              <Form onSubmit={(e) => handleSubmitChat(e)}>\r\n                <Modal.Footer>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                      채팅내용\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                      onChange={(e) => handleMsg(e)}\r\n                      value={msg}\r\n                      name=\"chatcontents\"\r\n                    />\r\n                  </InputGroup>\r\n\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    type=\"submit\"\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    메시지보내기\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal.Dialog>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicMenu;\r\n","import BasicMenu from \"../menus/BasicMenu\";\r\n\r\nconst Header = (props) => {\r\n  return <BasicMenu isLogin={props.isLogin} />;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, cloneElement } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst LayoutIndex = ({ children }) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const { loginState, isLogin } = useCustomLogin();\r\n\r\n  //console.log(\"loginState -> \", loginState);\r\n  //console.log(\"isLogin -> \", isLogin);\r\n\r\n  // const clonedElement = cloneElement(children, { today: date });\r\n\r\n  return (\r\n    <>\r\n      <Header isLogin={isLogin} />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutIndex;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { getChooseExercise, postExercise } from \"../../api/exerciseApi\";\r\nimport {\r\n  Link,\r\n  useNavigate,\r\n  useParams,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport useCustomExercise from \"../../hooks/useCustomExercise\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nconst initState = {\r\n  minute: 0,\r\n  choose: \"\", //운동종류\r\n  content: \"\",\r\n  whenchoose: \"\",\r\n};\r\n\r\nconst initDetailState = {\r\n  minute: 0,\r\n  choose: \"\", //운동종류,\r\n  content: \"\",\r\n};\r\n\r\nconst ExerciseCreateComponent = () => {\r\n  const { dateobject } = useParams();\r\n\r\n  //조회에서 넘어오는값\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const whenchoose = searchParams.get(\"whenchoose\");\r\n\r\n  const [exerciseParam, setExerciseParam] = useState(initState);\r\n  const [exerciseDetailParam, setExerciseDetailParam] = useState({\r\n    ...initDetailState,\r\n  });\r\n  const [chooseCheckArray, setChooseCheckArray] = useState([]);\r\n  const [inputVisible, setInputVisible] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n  const [detailVisible, setDetailVisible] = useState(false);\r\n\r\n  const refQuantity = useRef(null);\r\n\r\n  const [exerciseDetailFinalArray, setExerciseDetailFinalArray] = useState([]);\r\n  const [finalObjectArray, setFinalObjectArray] = useState([]);\r\n  const { moveToExerciseList, moveToExerciseCreate } = useCustomExercise();\r\n  const navigate = useNavigate();\r\n  const [first, setFirst] = useState(false);\r\n  const [second, setSecond] = useState(false);\r\n  const [third, setThird] = useState(false);\r\n\r\n  const [firstblock, setFirstblock] = useState(false);\r\n  const [secondblock, setSecondblock] = useState(false);\r\n  const [thirdblock, setThirdblock] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (whenchoose) {\r\n      // console.log(\r\n      //   \"ExerciseCreateComponent.js 쿼리파라미터값 whenchoose -> \",\r\n      //   whenchoose\r\n      // );\r\n      exerciseParam[\"whenchoose\"] = whenchoose;\r\n      // setExerciseParam((prev) => {\r\n      //   return { ...prev, exerciseParam };\r\n      // });\r\n\r\n      setExerciseParam({ ...exerciseParam });\r\n    }\r\n\r\n    return () => {\r\n      setExerciseParam(initState);\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      //console.log(\"handleChange() 진입\", e.target.name, e.target.value);\r\n\r\n      const regex = new RegExp(/^[0-9]+$/);\r\n\r\n      if (e.target.name === \"minute\") {\r\n        let value = Number(e.target.value);\r\n\r\n        const result = regex.test(value);\r\n        //console.log(\"regex결과 \", result);\r\n        if (!regex.test(value) || value === \"NaN\") {\r\n          alert(\"운동시간은 숫자만 입력가능합니다.\");\r\n          refQuantity.current.value = 0;\r\n          return;\r\n        }\r\n      }\r\n      exerciseParam[e.target.name] = e.target.value;\r\n      // setExerciseParam((prev) => {\r\n      //   return { ...prev, exerciseParam };\r\n      // });\r\n      setExerciseParam({ ...exerciseParam });\r\n\r\n      // console.log(\r\n      //   \"handleChange() 진입 setExerciseParam() 결과 \",\r\n      //   exerciseParam\r\n      // );\r\n    },\r\n    [exerciseParam]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dateobject !== \"\") {\r\n      const getChooseExerciseEI = async () => {\r\n        await getChooseExercise(dateobject)\r\n          .then((result) => {\r\n            // console.log(\r\n            //   \"ExerciseCreateComponent.js useEffect() axios 결과 then() -> \",\r\n            //   result\r\n            // );\r\n\r\n            if (result.result.length !== 0) {\r\n              // console.log(\r\n              //   \"ExerciseCreateComponent.js useEffect() axios 결과 배열존재할경우 진입 -> \"\r\n              // );\r\n\r\n              let alertcontent = \"\";\r\n              result.result.forEach((v) => {\r\n                if (v === \"1\") {\r\n                  //console.log(\"1진입\");\r\n                  setFirstblock(true);\r\n                  //const indexf = resultwhenchoose.indexOf(\"1\");\r\n                  //resultwhenchoose.splice(indexf, 1);\r\n                  alertcontent += \"아침 \";\r\n                }\r\n                if (v === \"2\") {\r\n                  //console.log(\"2진입\");\r\n                  setSecondblock(true);\r\n\r\n                  //const indexf = resultwhenchoose.indexOf(\"2\");\r\n                  //resultwhenchoose.splice(indexf, 1);\r\n                  alertcontent += \"점심 \";\r\n                }\r\n                if (v === \"3\") {\r\n                  //console.log(\"3진입\");\r\n                  setThirdblock(true);\r\n                  //        const indexf = resultwhenchoose.indexOf(\"3\");\r\n                  //      resultwhenchoose.splice(indexf, 1);\r\n                  alertcontent += \"저녁 \";\r\n                }\r\n              }); //forEach\r\n\r\n              alert(\r\n                dateobject +\r\n                  \"일자에 \" +\r\n                  alertcontent +\r\n                  \"운동은 이미 작성되어있습니다\"\r\n              );\r\n\r\n              setVisible(true);\r\n            } //if\r\n\r\n            if (\r\n              result.message === \"Network Error\" ||\r\n              result.name === \"AxiosError\"\r\n            ) {\r\n              // console.log(\r\n              //   \"ExerciseCreateComponent.js useEffect() axios 결과 then() 네트워크에러진입-> \"\r\n              // );\r\n              navigate(\"/login\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            // console.log(\r\n            //   \"ExerciseCreateComponent.js useEffect() axios 결과 catch() -> \",\r\n            //   err\r\n            // );\r\n          });\r\n      };\r\n\r\n      getChooseExerciseEI();\r\n    }\r\n    return () => {\r\n      //setChooseCheckArray(() => []);\r\n      setFirst(false);\r\n      setSecond(false);\r\n      setThird(false);\r\n      setFirstblock(false);\r\n      setSecondblock(false);\r\n      setThirdblock(false);\r\n    };\r\n  }, []);\r\n\r\n  //운동시간에 여러 운동등록할경우 필요\r\n  const handleDetailChange = useCallback(\r\n    (e) => {\r\n      //console.log(e.target.value, e.target.name);\r\n\r\n      const regex = new RegExp(/^[0-9]+$/);\r\n\r\n      if (e.target.name === \"minute\") {\r\n        let value = Number(e.target.value);\r\n\r\n        const result = regex.test(value);\r\n        //console.log(\"regex결과 \", result);\r\n        if (!regex.test(value) || value === \"NaN\") {\r\n          alert(\"운동시간은 숫자만 입력가능합니다.\");\r\n          refQuantity.current.value = 0;\r\n          return;\r\n        }\r\n      }\r\n      exerciseDetailParam[e.target.name] = e.target.value;\r\n      setExerciseDetailParam({ ...exerciseDetailParam });\r\n    },\r\n    [exerciseDetailParam]\r\n  );\r\n  const handleDetailOnClick = () => {\r\n    //refDetailText.current = dietDetailParam.content + dietDetailParam.quantity;\r\n\r\n    if (\r\n      exerciseDetailParam.content === \"\" ||\r\n      exerciseDetailParam.minute === 0\r\n    ) {\r\n      alert(\"내용을 모두 입력해주세요!\");\r\n      return;\r\n    }\r\n\r\n    const compound = exerciseDetailParam.content + exerciseDetailParam.minute;\r\n    // exerciseDetailFinalArray.forEach((i) =>\r\n    //console.log(\"dietDetailFinalArray -> \", i)\r\n    //);\r\n    const sameResult = exerciseDetailFinalArray.filter((i) => i === compound);\r\n    //console.log(\"handleDetailOnclick sameResult-> \", sameResult);\r\n    if (sameResult.length !== 0) {\r\n      alert(\"이미 운동에 추가했습니다!\");\r\n      setExerciseDetailParam({ ...initDetailState });\r\n\r\n      return;\r\n    }\r\n    setFinalObjectArray([\r\n      ...finalObjectArray,\r\n      {\r\n        content: exerciseDetailParam.content,\r\n        minute: exerciseDetailParam.minute,\r\n        choose: exerciseDetailParam.choose,\r\n      },\r\n    ]);\r\n\r\n    //    console.log(\"handleDetailOnclick -> \", compound);\r\n    //console.log(\"typeof -> \", typeof compound);\r\n    setExerciseDetailFinalArray((dietDetailFinalArray) => [\r\n      ...dietDetailFinalArray,\r\n      compound,\r\n    ]);\r\n    setExerciseDetailParam({ ...initDetailState });\r\n    setDetailVisible(true);\r\n  };\r\n\r\n  //-----------------등록 form submit 이벤트\r\n  const handleSubmitExercise = (e) => {\r\n    // console.log(\r\n    //   \"ExerciseCreateComponent.js handleSubmitExercise() 등록전 확인 exerciseParam -> \",\r\n    //   exerciseParam\r\n    // );\r\n\r\n    e.preventDefault();\r\n    if (exerciseParam.whenchoose === \"\") {\r\n      alert(\"운동시간을 선택해주세요\");\r\n      refQuantity.current.focus();\r\n\r\n      return;\r\n    }\r\n\r\n    if (exerciseParam.choose === \"\") {\r\n      alert(\"운동종목을 선택해주세요\");\r\n      refQuantity.current.focus();\r\n\r\n      return;\r\n    }\r\n\r\n    if (exerciseParam.minute === \"0\") {\r\n      alert(\"운동량을 입력해주세요\");\r\n      refQuantity.current.focus();\r\n      return;\r\n    }\r\n    if (\r\n      exerciseParam.choose !== \"\" &&\r\n      exerciseParam.minute !== 0 &&\r\n      exerciseParam.whenchoose !== \"\"\r\n    ) {\r\n      postExercise({ dateobject, exerciseParam })\r\n        .then((result) => {\r\n          // console.log(\r\n          //   \"ExerciseCreateComponent.js handleSubmitExercise() axios then() result => \",\r\n          //   result\r\n          // );\r\n          // console.log(\r\n          //   \"ExerciseCreateComponent.js handleSubmitExercise() axios then() result.result ->\",\r\n          //   result.result\r\n          // );\r\n          if (result.result) {\r\n            alert(dateobject + \"일자 운동이 등록되었습니다.\");\r\n            moveToExerciseList();\r\n          } else {\r\n            alert(dateobject + \"일자 운동등록을 실패했습니다.\");\r\n            moveToExerciseCreate({ dateobject });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          // console.log(\r\n          //   \"ExerciseCreateComponent.js handleSubmitExercise() axios catch() \",\r\n          //   err\r\n          // );\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleDetailRemoveOnClick = (e) => {\r\n    // console.log(\r\n    //   \"handleDetailRemoveOnClick() dataset =>\",\r\n    //   e.target.dataset.finalcontent,\r\n    //   \"e.target.dataset.finalminute -> \",\r\n    //   e.target.dataset.finalminute\r\n    // );\r\n    const finalcontent = e.target.dataset.finalcontent;\r\n    const finalminute = e.target.dataset.finalminute;\r\n\r\n    // const newProduce = produce(dietDetailFinalArray, (draft) => {\r\n    //   draft.filter((d) => d !== finalcontent);\r\n    // });\r\n\r\n    const newProduce = exerciseDetailFinalArray.filter(\r\n      (i) => i !== `${finalcontent}${finalminute}`\r\n    );\r\n    //console.log(\"handleDetailRemoveOnClick() newProduce =>\", newProduce);\r\n    setExerciseDetailFinalArray([...newProduce]);\r\n\r\n    const newFinalObject = finalObjectArray.filter(\r\n      (i) => i.content !== finalcontent && i.quantity !== finalminute\r\n    );\r\n    setFinalObjectArray([...newFinalObject]);\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <br />\r\n\r\n      <h4>운동관리</h4>\r\n      <hr />\r\n      <br />\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>시간선택</Form.Label>\r\n\r\n        <div key={`inline-radio`} className=\"mb-3\">\r\n          {!whenchoose && (\r\n            <>\r\n              <Image\r\n                src=\"/img/biceps.png\"\r\n                style={{ width: \"50px\", height: \"50px\" }}\r\n                rounded\r\n              />\r\n              &nbsp;\r\n              <Form.Check\r\n                inline\r\n                label=\"아침\"\r\n                name=\"whenchoose\"\r\n                type={\"radio\"}\r\n                value={1}\r\n                onChange={handleChange}\r\n                disabled={firstblock ? true : false}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <Image\r\n                src=\"/img/tennis.png\"\r\n                style={{ width: \"50px\", height: \"50px\" }}\r\n                rounded\r\n              />\r\n              &nbsp;\r\n              <Form.Check\r\n                inline\r\n                label=\"점심\"\r\n                name=\"whenchoose\"\r\n                type={\"radio\"}\r\n                value={2}\r\n                onChange={handleChange}\r\n                disabled={secondblock ? true : false}\r\n              />\r\n              &nbsp;&nbsp;\r\n              <Image\r\n                src=\"/img/basketball.png\"\r\n                style={{ width: \"50px\", height: \"50px\" }}\r\n                rounded\r\n              />\r\n              &nbsp;\r\n              <Form.Check\r\n                inline\r\n                label=\"저녁\"\r\n                name=\"whenchoose\"\r\n                type={\"radio\"}\r\n                value={3}\r\n                onChange={handleChange}\r\n                disabled={thirdblock ? true : false}\r\n              />\r\n            </>\r\n          )}\r\n          {whenchoose && (\r\n            <>\r\n              <Image\r\n                src=\"/img/biceps.png\"\r\n                style={{ width: \"50px\", height: \"50px\" }}\r\n                rounded\r\n              />\r\n              &nbsp;\r\n              {first ? (\r\n                <Form.Check\r\n                  inline\r\n                  label=\"아침\"\r\n                  name=\"whenchoose\"\r\n                  type={\"radio\"}\r\n                  value={1}\r\n                  onChange={handleChange}\r\n                  checked={true}\r\n                />\r\n              ) : (\r\n                <Form.Check\r\n                  inline\r\n                  label=\"아침\"\r\n                  name=\"whenchoose\"\r\n                  type={\"radio\"}\r\n                  value={1}\r\n                  onChange={handleChange}\r\n                  disabled={firstblock ? true : false}\r\n                />\r\n              )}\r\n              &nbsp;&nbsp;\r\n              <Image\r\n                src=\"/img/tennis.png\"\r\n                style={{ width: \"50px\", height: \"50px\" }}\r\n                rounded\r\n              />\r\n              &nbsp;\r\n              {second ? (\r\n                <Form.Check\r\n                  inline\r\n                  label=\"점심\"\r\n                  name=\"whenchoose\"\r\n                  type={\"radio\"}\r\n                  value={2}\r\n                  onChange={handleChange}\r\n                  checked={true}\r\n                />\r\n              ) : (\r\n                <Form.Check\r\n                  inline\r\n                  label=\"점심\"\r\n                  name=\"whenchoose\"\r\n                  type={\"radio\"}\r\n                  value={2}\r\n                  onChange={handleChange}\r\n                  disabled={secondblock ? true : false}\r\n                />\r\n              )}\r\n              &nbsp;&nbsp;\r\n              <Image\r\n                src=\"/img/basketball.png\"\r\n                style={{ width: \"50px\", height: \"50px\" }}\r\n                rounded\r\n              />\r\n              &nbsp;\r\n              {third ? (\r\n                <Form.Check\r\n                  inline\r\n                  label=\"저녁\"\r\n                  name=\"whenchoose\"\r\n                  type={\"radio\"}\r\n                  value={3}\r\n                  onChange={handleChange}\r\n                  checked={true}\r\n                />\r\n              ) : (\r\n                <Form.Check\r\n                  inline\r\n                  label=\"저녁\"\r\n                  name=\"whenchoose\"\r\n                  type={\"radio\"}\r\n                  value={3}\r\n                  onChange={handleChange}\r\n                  disabled={thirdblock ? true : false}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Form.Group>\r\n      <br />\r\n      <Form onSubmit={handleSubmitExercise}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>운동항목</Form.Label>\r\n          <br />\r\n          <Form.Check\r\n            inline\r\n            type=\"radio\"\r\n            label=\"달리기\"\r\n            name=\"choose\"\r\n            value=\"1\"\r\n            // value={exerciseDetailParam.choose}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            type=\"radio\"\r\n            label=\"웨이트\"\r\n            value=\"2\"\r\n            name=\"choose\"\r\n            onChange={handleChange}\r\n\r\n            //onChange={handleDetailChange}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            type=\"radio\"\r\n            label=\"구기종목(야구,축구,농구 등)&복싱\"\r\n            value=\"3\"\r\n            name=\"choose\"\r\n            //onChange={handleDetailChange}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            type=\"radio\"\r\n            label=\"등산\"\r\n            value=\"4\"\r\n            name=\"choose\"\r\n            //onChange={handleDetailChange}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            type=\"radio\"\r\n            label=\"필라테스요가\"\r\n            value=\"5\"\r\n            name=\"choose\"\r\n            //onChange={handleDetailChange}\r\n\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            type=\"radio\"\r\n            label=\"그외\"\r\n            value=\"6\"\r\n            name=\"choose\"\r\n            //onChange={handleDetailChange}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <br />\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>운동시간(단위:분)</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"minute\"\r\n            value={exerciseParam.minute || 0}\r\n            onChange={handleChange}\r\n            ref={refQuantity}\r\n            required\r\n          />{\" \"}\r\n        </Form.Group>\r\n        <br />\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>운동내용&후기</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"content\"\r\n            value={exerciseParam.content || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <br />\r\n        <Button variant=\"outline-primary\" type=\"submit\">\r\n          운동등록\r\n        </Button>\r\n        &nbsp;\r\n        <Link to={`../list`}>\r\n          <Button variant=\"outline-secondary\" type=\"button\">\r\n            운동달력이동\r\n          </Button>\r\n        </Link>\r\n        &nbsp;\r\n        <Link to={`/`}>\r\n          <Button variant=\"outline-success\" type=\"button\">\r\n            메인으로\r\n          </Button>\r\n        </Link>\r\n      </Form>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseCreateComponent;\r\n","import LayoutIndex from \"../../components/layout/LayoutIndex\";\r\nimport ExerciseCreateComponent from \"../../components/exercise/ExerciseCreateComponent\";\r\nconst ExerciseCreatePage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <ExerciseCreateComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseCreatePage;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getExerciseListAsync,\r\n  postExerciseAsync,\r\n  patchExerciseAsync,\r\n  deleteExerciseAsync,\r\n} from \"../slices/exerciseSlice\";\r\nimport { replace, useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomExercise = () => {\r\n  const exerciseState = useSelector((state) => state.exerciseSlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const postExerciseC = ({ diaryParam, picture }) => {\r\n    const payload = dispatch(postExerciseAsync({ diaryParam, picture }));\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getExerciseListC = async () => {\r\n    await dispatch(getExerciseListAsync());\r\n  };\r\n\r\n  //수정\r\n  const patchExerciseC = ({ exerciseParam }) => {\r\n    const payload = dispatch(patchExerciseAsync({ exerciseParam }));\r\n    return payload; //thunk에서 받은 액션결과전달\r\n  };\r\n\r\n  const moveToExerciseRead = (dateobject) => {\r\n    navigate({ pathname: `../read/${dateobject}` });\r\n  };\r\n\r\n  const moveToExerciseList = () => {\r\n    navigate({ pathname: \"../\", replace: \"true\" });\r\n  };\r\n\r\n  const moveToExerciseModify = ({ dateobject, whenchoose }) => {\r\n    navigate({ pathname: `../modify/${dateobject}/${whenchoose}` });\r\n  };\r\n\r\n  const moveToExerciseCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}`, replace: \"true\" });\r\n  };\r\n\r\n  const deleteExerciseC = (id) => {\r\n    const payload = dispatch(deleteExerciseAsync(id));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    exerciseState,\r\n    postExerciseC,\r\n    deleteExerciseC,\r\n    patchExerciseC,\r\n    moveToExerciseRead,\r\n    moveToExerciseModify,\r\n    moveToExerciseCreate,\r\n    getExerciseListC,\r\n    moveToExerciseList,\r\n  };\r\n};\r\n\r\nexport default useCustomExercise;\r\n"],"names":["Footer","_jsx","Navbar","className","children","Container","Brand","_jsxs","style","fontSize","textAlign","alt","src","width","height","props","loginState","isLogin","useCustomLogin","modalVisible","setModalVisible","useState","msg","setMsg","msgList","setMsgList","chatroomname","setChatroomname","chatroompassword","setChatroompassword","refChatRoom","useRef","refChatRoompassword","moveToLogin","refModalBody","socket","setSocket","useEffect","on","_refModalBody$current2","prev","type","id","current","scrollIntoView","behavior","block","_refModalBody$current","message","username","off","_Fragment","expand","display","alignItems","justifyContent","fluid","Image","Collapse","Nav","Link","href","Form","onSubmit","e","preventDefault","alert","undefined","io","autoConnect","connect","sendData","emit","chatStartClick","InputGroup","size","Text","Control","name","onChange","target","value","ref","Button","variant","Modal","Dialog","Header","Title","onClick","window","confirm","Body","overflow","map","v","i","listStyle","flex","padding","backgroundColor","marginTop","fontWeight","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","handleSubmitChat","handleMsg","BasicMenu","_ref","date","setDate","Date","initState","minute","choose","content","whenchoose","initDetailState","ExerciseCreateComponent","dateobject","useParams","searchParams","useSearchParams","get","exerciseParam","setExerciseParam","exerciseDetailParam","setExerciseDetailParam","chooseCheckArray","setChooseCheckArray","inputVisible","setInputVisible","visible","setVisible","detailVisible","setDetailVisible","refQuantity","exerciseDetailFinalArray","setExerciseDetailFinalArray","finalObjectArray","setFinalObjectArray","moveToExerciseList","moveToExerciseCreate","useCustomExercise","navigate","useNavigate","first","setFirst","second","setSecond","third","setThird","firstblock","setFirstblock","secondblock","setSecondblock","thirdblock","setThirdblock","handleChange","useCallback","regex","RegExp","Number","test","async","getChooseExercise","then","result","length","alertcontent","forEach","catch","err","getChooseExerciseEI","Group","Label","rounded","Check","inline","label","disabled","checked","focus","postExercise","required","to","ExerciseCreatePage","LayoutIndex","exerciseState","useSelector","state","exerciseSlice","dispatch","useDispatch","postExerciseC","diaryParam","picture","postExerciseAsync","deleteExerciseC","deleteExerciseAsync","patchExerciseC","_ref2","patchExerciseAsync","moveToExerciseRead","pathname","moveToExerciseModify","_ref3","replace","getExerciseListC","getExerciseListAsync"],"sourceRoot":""}