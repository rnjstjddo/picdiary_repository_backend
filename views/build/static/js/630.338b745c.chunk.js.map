{"version":3,"file":"static/js/630.338b745c.chunk.js","mappings":"iOAeA,MA6CMA,EAAgBC,IAEpBC,QAAQC,IAAI,+BAEZ,MAAM,MAAEC,EAAK,WAAEC,GAAeJ,EAAMK,EAEpC,OAAOF,EAAMG,KAAKD,IAChBE,EAAAA,EAAAA,KAACC,EAAAA,SAAc,CAAAC,SACZJ,EAAEK,GACDL,EAAEM,SACAJ,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAAH,UACEI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAI,WAAWV,EAAEK,KAAKD,SAAA,CAAC,gBAE3BF,EAAAA,EAAAA,KAACS,EAAAA,EACC,CACAC,IAAK,2DAA2DZ,EAAEa,OAClEC,SAAO,EACPC,QAAQ,MACRC,MAAO,CACLC,QAAS,QACTC,OAAQ,SACRC,SAAU,OACVC,UAAW,OACXC,UAAW,mBAMnBnB,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAI,WAAWV,EAAEK,KAAKD,SAAC,kBAG/BF,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,KAzBiBP,EAAEK,KA4BvB,EA6RJ,EA1R2BiB,KACzB,MAAOC,IAAgBC,EAAAA,EAAAA,OACjB,aAAEC,IAAiBC,EAAAA,EAAAA,MACnB,gBAAEC,IAAoBC,EAAAA,EAAAA,MACrB9B,EAAO+B,IAAYC,EAAAA,EAAAA,UAAS,IAE7BC,GAAWC,EAAAA,EAAAA,OAEVC,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,KAC1CK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,KACxCO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,KACxCS,EAAiBC,IAAsBV,EAAAA,EAAAA,UAAS,KAEhDW,EAAaC,IAAkBZ,EAAAA,EAAAA,UAAS,IACxCa,EAAYC,IAAiBd,EAAAA,EAAAA,UAAS,IACtCe,EAAqBC,IAA0BhB,EAAAA,EAAAA,UAAS,KACxDiB,EAAoBC,IAAyBlB,EAAAA,EAAAA,UAAS,KACtDmB,EAAUC,IAAepB,EAAAA,EAAAA,UAAS,KAClCqB,EAASC,IAActB,EAAAA,EAAAA,UAAS,KAChCuB,EAAUC,IAAexB,EAAAA,EAAAA,UAAS,KAClCyB,EAASC,IAAc1B,EAAAA,EAAAA,UAAS,KAChC2B,EAAUC,IAAe5B,EAAAA,EAAAA,UAAS,KAClC6B,EAAOC,IAAY9B,EAAAA,EAAAA,UAAS,IAC5B+B,EAAMC,IAAWhC,EAAAA,EAAAA,WAAS,GAEjClC,QAAQC,IAAI,yCAEZ,IAAIkE,EAAmBxC,EAAayC,IAAI,QACpCC,EAAoB1C,EAAayC,IAAI,UAEzCE,EAAAA,EAAAA,kBAAgB,KACdtE,QAAQC,IAAI,mCACZqD,GAAY,IAAM,KAClBY,GAAQ,KAAM,IACd,IAAIK,EAAO,IAAIC,KAEXC,EAAYF,EAAKG,cACjBC,EAAaJ,EAAKK,WAAa,EACnCD,EAAaA,EAAa,GAAK,IAAMA,EAAaA,EAClDJ,EAAO,GAAGE,KAAaE,OAEE,OAArBR,GAAmD,OAAtBE,IAC/BrE,QAAQC,IACN,yGACAkE,GAEFnE,QAAQC,IACN,yGACAoE,GAEFvB,GAAe,IAAM+B,OAAOR,KAC5BrB,GAAc,IAAMmB,IAEpBI,EAAO,IAAIC,KAAK,GAAGL,KAAoBE,QACvCrE,QAAQC,IAAI,UAAWsE,IAEzBvE,QAAQC,IAAI,4DAA8CsE,GAE1D7B,GAAe,IAAM6B,IACrB,MAAMO,EAAW,IAAIN,KAAKD,GAC1B/B,EAAe,GAAKsC,EAASJ,eAC7BpC,EAAgBwC,EAASF,WAAa,GACtChC,GAAmB,IAAMkC,GAAS,GACjC,CAACX,EAAkBE,KAEtBU,EAAAA,EAAAA,YAAU,KACR,GAAwB,KAApBpC,EAAwB,CAC1B3C,QAAQC,IACN,kEACA0C,GAGF,MAAM,SAAEc,EAAQ,QAAEE,EAAO,SAAEE,EAAQ,QAAEN,GA3JrByB,KACpBhF,QAAQC,IAAI,+BAEZ,IAAIsE,EAAO,IAAIC,KAAKQ,GACpB,MAAMzC,EAAc,IAAIiC,KAAKD,GAAMG,cAC7BrC,EAAe,IAAImC,KAAKD,GAAMK,WAAa,EAC3CnB,EAAW,IAAIe,KAAKD,EAAKU,QAAQ,IAAIC,SAgBrC3B,EAAU,IAAIiB,KAAKjC,EAAaF,EAAc,GAAG8C,UAEjDtB,EAAWJ,EAAWF,EAkB5B,MAAO,CAAEE,WAAUF,UAASM,WAAUF,QAhBI,EAA1ByB,KAAKC,KAAKxB,EAAW,GAgBU,EAkHzCyB,CAAa3C,GAEfa,EAAWD,GACXG,EAAYD,GACZG,EAAWD,GACXG,EAAYD,EACd,CAEA,MAAO,KACL7D,QAAQC,IAAI,gFAEZuD,GAAW,IAAM,KACjBE,GAAY,IAAM,KAClBE,GAAW,IAAM,KACjBE,GAAY,IAAM,IAAG,CACtB,GACA,CAACnB,KAGJoC,EAAAA,EAAAA,YAAU,KAGR,GAFA/E,QAAQC,IAAI,yEAEC,IAATgE,EAAe,CACjBjE,QAAQC,IAAI,gHAEZ,IAAIoD,EAAW,GAEf,IAAK,IAAIjD,EAAI,EAAGmF,EAAI,EAAGnF,GAAKmD,EAASnD,IAAKmF,IAAK,CAC7CvF,QAAQC,IAAI,kFAEZ,IAAIsC,EAAc,IAAIiC,KAAK7B,GAAiB+B,cACxCrC,EAAe,IAAImC,KAAK7B,GAAiBiC,WAAa,EAC1DvC,EAAeA,EAAe,GAAK,IAAMA,EAAeA,EACxD,IACIlC,EAAa,GAAGoC,KAAeF,KADrBjC,EAAI,GAAK,IAAMA,EAAIA,IAGjCiD,EAASkC,GAAK,CACZC,SAAUpF,EACVD,WAAYA,EACZD,MAAOA,EAAMuF,QAAQC,GAAMA,EAAEvF,aAAeA,IAEhD,CACAmD,GAAY,IAAMD,IAElB,MAAMsC,EAAiBlC,EAAW,EAClC,IAAIR,EAAsB,GAE1B,GAAuB,IAAnB0C,EACF,IAAK,IAAIvF,EAAI,EAAGmF,EAAI,EAAGnF,GAAKuF,EAAgBvF,IAAKmF,IAC/CtC,EAAoBsC,GAAKnF,EAG7B8C,GAAuB,IAAMD,IAG7B,MAAM2C,EAAgBjC,EAAUE,EAChC,IAAIV,EAAqB,GAEzB,GAAsB,IAAlByC,EACF,IAAK,IAAIxF,EAAI,EAAGmF,EAAI,EAAGnF,GAAKwF,EAAexF,IAAKmF,IAC9CpC,EAAmBoC,GAAKnF,EAG5BgD,GAAsB,IAAMD,GAC9B,IACC,CAACc,KAEJc,EAAAA,EAAAA,YAAU,KAGR,GAFA/E,QAAQC,IAAI,4BAEQ,KAAhBwC,EAAoB,CACtBzC,QAAQC,IACN,8GACAwC,GAGF,MAAMoD,EAAiBC,aACvBC,EAAAA,EAAAA,IAAa,CAAEtD,gBACZuD,MAAMC,IACLjG,QAAQC,IACN,mEACAgG,GAEEA,GACFhE,GAAS,IAAMgE,IAEjB/B,GAAQ,EAAK,IAEdgC,OAAOC,IACNnG,QAAQC,IAAI,4CAAmCkG,GAC/CpE,EAAgBoE,EAAI,IAExBN,GACF,IACC,CAACpD,IA8CJ,OACE7B,EAAAA,EAAAA,MAAA,OAAKwF,UAAU,YAAW5F,SAAA,CACvB,KACDF,EAAAA,EAAAA,KAAA,WAAS8F,UAAU,OAAM5F,UACvBI,EAAAA,EAAAA,MAAA,OAAKwF,UAAU,SAAShF,MAAO,CAAEE,OAAQ,UAAWd,SAAA,EAClDI,EAAAA,EAAAA,MAAA,OAAKwF,UAAU,YAAW5F,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAK8F,UAAU,oBAAmB5F,UAChCF,EAAAA,EAAAA,KAAA,UAAQ+F,QAASA,IAlDJ5D,KACvBzC,QAAQC,IAAI,sCAA6BwC,GACzC,MAAM6D,EAAW,IAAI9B,KAAK/B,GAC1B,IAAI8D,EAAmB,IAAI/B,KAAK8B,EAASE,SAASF,EAAS1B,WAAa,IACpE6B,EAAoB,IAAIjC,KAAK+B,GAAkB7B,cACnD1E,QAAQC,IACN,uDACAwG,GAGF,IAAIC,EAAoB,IAAIlC,KAAK+B,GAAkB3B,WAAa,EAChE8B,EACEA,EAAoB,GAAK,IAAMA,EAAoBA,EACrD1G,QAAQC,IACN,uDACAyG,GAGFvE,EAAS,SAASsE,WAA2BC,IAAoB,EAgChCC,CAAgBlE,GAAajC,SAAC,oBAEvDI,EAAAA,EAAAA,MAAA,MAAIwF,UAAU,eAAc5F,SAAA,CACzB+B,EAAY,UAAGF,EAAa,aAE/B/B,EAAAA,EAAAA,KAAA,OAAK8F,UAAU,oBAAmB5F,UAChCF,EAAAA,EAAAA,KAAA,UAAQ+F,QAASA,IAlCN5D,KACrBzC,QAAQC,IAAI,8CAAqCwC,GACjD,MAAM6D,EAAW,IAAI9B,KAAK/B,GAE1B,IAAImE,EAAkB,IAAIpC,KAAK8B,EAASE,SAASF,EAAS1B,aAC1D5E,QAAQC,IAAI,kDAAyC2G,GAErD,IAAIC,EAAmB,IAAIrC,KAAKoC,GAAiBlC,cACjD1E,QAAQC,IAAI,mDAA0C4G,GAEtD,IAAIC,EAAmB,IAAItC,KAAKoC,GAAiBhC,WAAa,EAC9DkC,EACEA,EAAmB,GAAK,IAAMA,EAAmBA,EACnD9G,QAAQC,IAAI,mDAA0C6G,GAEtD3E,EAAS,SAAS0E,WAA0BC,IAAmB,EAmB9BC,CAActE,GAAajC,SAAC,uBAGvDF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAIc,MAAO,CAAE4F,UAAW,QAASC,MAAO,UAAWzG,UACjDF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,oIAELF,EAAAA,EAAAA,KAAA,UAEAM,EAAAA,EAAAA,MAAA,OAAKwF,UAAU,sBAAqB5F,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAAE,SAAe,UAAN,QACTF,EAAAA,EAAAA,KAAA,OAAAE,SAAe,UAAN,QACTF,EAAAA,EAAAA,KAAA,OAAAE,SAAe,UAAN,QACTF,EAAAA,EAAAA,KAAA,OAAAE,SAAe,UAAN,QACTF,EAAAA,EAAAA,KAAA,OAAAE,SAAe,UAAN,QACTF,EAAAA,EAAAA,KAAA,OAAAE,SAAe,UAAN,QACTF,EAAAA,EAAAA,KAAA,OAAAE,SAAe,UAAN,WAGXI,EAAAA,EAAAA,MAAA,OAAKwF,UAAU,uBAAsB5F,SAAA,CAClCyC,EAAoB5C,KAAI,CAACD,EAAG8G,KAC3B5G,EAAAA,EAAAA,KAAA,SAAU4G,KAGX7D,EAAShD,KAAI,CAACD,EAAG8G,KAChBtG,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,CAEsB,IAAnBJ,EAAEF,MAAMiH,QACP7G,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CACHC,GAAI,aAAaV,EAAED,aACnBiB,MAAO,CAAEgG,eAAgB,OAAQH,MAAO,WAAYzG,SAEnDJ,EAAEoF,YAGLlF,EAAAA,EAAAA,KAAA,UACE+F,QAASA,KAAMgB,OApDX7B,EAoDwBpF,EAAEoF,cAnD9C8B,MAAM9B,EAAW,yGADGA,KAoDoC,EACxCpE,MAAO,CAAEmG,IAAK,SAAU/G,SAEvBJ,EAAEoF,YAIPlF,EAAAA,EAAAA,KAACR,EAAY,CAAaM,EAAGA,GAAV8G,KAlBXA,KAqBX/D,EAAmB9C,KAAI,CAACD,EAAG8G,KAC1B5G,EAAAA,EAAAA,KAAA,SAAU4G,eAKd,EC3WV,EAVsBM,KAElBlH,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAAH,UACEF,EAAAA,EAAAA,KAACmH,EAAAA,EAAW,CAAAjH,UACVF,EAAAA,EAAAA,KAACoB,EAAkB,O,+CCIpB,MCADgG,EAASC,2FACf3H,QAAQC,IAAIyH,GAEZ,MAAME,EAAcA,KAClB,GAAIC,UAAUC,YAAa,CAAC,IAADC,EAAAC,EACzB,SAASC,EAAWC,GAClBC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUJ,GAEhD,CAEA,SAASK,EAAcC,GAAW,IAADC,EAAAC,EAQ/BT,EALkB,CAEhBU,SAJ8B,QAAlBF,EAAGD,EAASI,cAAM,IAAAH,OAAA,EAAfA,EAAiBE,SAKhCE,UAJ+B,QAAlBH,EAAGF,EAASI,cAAM,IAAAF,OAAA,EAAfA,EAAiBG,WAOrC,CAEA,SAASC,IACP9I,QAAQC,IAAI,8BACd,CAEA,SAAS8I,IACPlB,UAAUC,YAAYkB,mBAAmBT,EAAeO,EAC1D,CAEA,IAAIG,EAAed,aAAae,QAAQ,UACxClJ,QAAQC,IACN,gIACAoI,KAAKC,UAAUW,IAEjBA,EAAeZ,KAAKc,MAAMF,GAEL,OAAjBA,GAEFF,IAOF,MD7CuBK,EAACC,EAAMC,EAAIC,KAEpCvJ,QAAQC,IAAI,yCACZ,IAAIuJ,EAASpE,KAAKqE,GAAK,IACnBC,EAAS,IAAQtE,KAAKqE,GAEtBE,EAhBG,WACE,EAgBLC,EAfM,GAeUJ,EAChBK,EAfM,GAeUL,EAChBM,EAfK,IAeSN,EACdO,EAfK,GAeSP,EAEdQ,EACF5E,KAAK6E,IAAc,IAAV7E,KAAKqE,GAAoB,GAARI,GAC1BzE,KAAK6E,IAAc,IAAV7E,KAAKqE,GAAoB,GAARG,GAC5BI,EAAK5E,KAAKnF,IAAImF,KAAK8E,IAAIN,GAASxE,KAAK8E,IAAIL,IAAUzE,KAAKnF,IAAI+J,GAC5D,IAAIG,EAAK/E,KAAK6E,IAAc,IAAV7E,KAAKqE,GAAoB,GAARG,GACnCO,EAAM/E,KAAKgF,IAAID,EAAIH,GAAM5E,KAAK8E,IAAIN,GAAUI,EAC5C,IAAIK,EAAKjF,KAAK6E,IAAc,IAAV7E,KAAKqE,GAAmB,GAAPM,GACnCM,EAAMV,EAAKQ,EAAM/E,KAAKgF,IAAIC,EAAIL,GAC9B,IAAIM,EAAK,CAAC,EACV,GAAY,QAARjB,EAAgB,CAClBiB,EAAQ,IAAIhB,EACZgB,EAAQ,IAAIf,EACZ,IAAIgB,EAAKnF,KAAK6E,IAAc,IAAV7E,KAAKqE,GAAYH,EAAKE,EAAS,IACjDe,EAAMZ,EAAKQ,EAAM/E,KAAKgF,IAAIG,EAAIP,GAC9B,IAAIQ,EAAQjB,EAAKC,EAASM,EACtBU,EAAQpF,KAAKqE,KAAIe,GAAS,EAAMpF,KAAKqE,IACrCe,GAASpF,KAAKqE,KAAIe,GAAS,EAAMpF,KAAKqE,IAC1Ce,GAASR,EACTM,EAAM,EAAIlF,KAAKqF,MAAMF,EAAKnF,KAAKsF,IAAIF,GAlC9B,GAkC4C,IACjDF,EAAM,EAAIlF,KAAKqF,MAAMJ,EAAKE,EAAKnF,KAAK8E,IAAIM,GAlCnC,IAkCiD,GACxD,KAAO,CACLF,EAAM,EAAIhB,EACVgB,EAAM,EAAIf,EACV,IAAIoB,EAAKrB,EAvCJ,GAwCDsB,EAAKP,EAAKd,EAvCT,IAyCL,GADAgB,EAAKnF,KAAKyF,KAAKF,EAAKA,EAAKC,EAAKA,GAC1BZ,EAAK,EAAK,OAAQO,EACtB,IAAIO,EAAO1F,KAAKgF,IAAKT,EAAKQ,EAAMI,EAAI,EAAMP,GAG1C,GAFAc,EAAO,EAAM1F,KAAK2F,KAAKD,GAAkB,GAAV1F,KAAKqE,GAEhCrE,KAAK4F,IAAIL,IAAO,EAClBH,EAAQ,OAER,GAAIpF,KAAK4F,IAAIJ,IAAO,GAElB,GADAJ,EAAkB,GAAVpF,KAAKqE,GACTkB,EAAK,EAAK,OAAQH,OACjBA,EAAQpF,KAAK6F,MAAMN,EAAIC,GAEhC,IAAIM,EAAOV,EAAQR,EAAKF,EACxBQ,EAAQ,IAAIQ,EAAOpB,EACnBY,EAAQ,IAAIY,EAAOxB,CACrB,CACA,OAAOY,CAAE,ECdUlB,CACf,OACAvE,OAAmB,QAAbkD,EAACkB,SAAY,IAAAlB,OAAA,EAAZA,EAAcY,UACrB9D,OAAmB,QAAbmD,EAACiB,SAAY,IAAAjB,OAAA,EAAZA,EAAca,WAGzB,GAGWsC,EAAarF,UAAyC,IAAlC,YAAEsF,EAAW,YAAEC,GAAaC,EAG3D,IAAIC,EAAmB,KAEvB,MAAMC,EAAW5D,IACjB5H,QAAQC,IAAI,uEAAgCuL,GAC5CxL,QAAQC,IAAI,oDAAsCmL,GAClDpL,QAAQC,IAAI,sDAAwCoL,GACpD,IAAK,IAADI,EAAAC,EAAAC,EAAAC,EACF,MAAM3F,QAAe4F,EAAAA,EAAMzH,IAhE7B,2EAgEsC,CAClC0H,OAAQ,CACNC,WAAYrE,EACZsE,UAAW,GACXC,OAAQ,EACRC,SAAU,OACVC,UAAWf,EACXgB,UAAWf,EACXgB,GAAIb,EAASc,EACbC,GAAIf,EAASgB,KAKjB,OAFAjB,EAAyB,OAANtF,QAAM,IAANA,GAAY,QAANwF,EAANxF,EAAQwG,YAAI,IAAAhB,GAAU,QAAVC,EAAZD,EAAciB,gBAAQ,IAAAhB,GAAM,QAANC,EAAtBD,EAAwBiB,YAAI,IAAAhB,GAAO,QAAPC,EAA5BD,EAA8BiB,aAAK,IAAAhB,OAA7B,EAANA,EAAqCiB,KACxD7M,QAAQC,IAAI,8BAAqBsL,GAC1BA,CACT,CAAE,MAAOuB,GACP9M,QAAQC,IAAI,yCAAsB6M,EACpC,E,6ECpFF,MAsBA,EAtBeC,KAEXzM,EAAAA,EAAAA,KAAC0M,EAAAA,EAAM,CAAC5G,UAAU,mBAAkB5F,UAClCF,EAAAA,EAAAA,KAAC2M,EAAAA,EAAS,CAAAzM,UACRF,EAAAA,EAAAA,KAAC0M,EAAAA,EAAOE,MAAK,CAAA1M,UACXI,EAAAA,EAAAA,MAAA,QAAMQ,MAAO,CAAE+L,SAAU,OAAQnG,UAAW,SAAUxG,SAAA,EACpDF,EAAAA,EAAAA,KAAA,OACE8M,IAAI,GACJpM,IAAI,qBACJqM,MAAM,KACNC,OAAO,KACPlH,UAAU,6BACT,IAAI,0LAEJ9F,EAAAA,EAAAA,KAAA,SAAM,4E,2GCArB,MA6XA,EA7XmBP,IACjB,MAAM,WAAEwN,EAAU,QAAEC,IAAYxL,EAAAA,EAAAA,MACzByL,EAAcC,IAAmBxL,EAAAA,EAAAA,WAAS,IAG1CyL,EAAKC,IAAU1L,EAAAA,EAAAA,UAAS,KACxB2L,EAASC,IAAc5L,EAAAA,EAAAA,UAAS,KAChC6L,EAAcC,IAAmB9L,EAAAA,EAAAA,UAAS,KAC1C+L,EAAkBC,IAAuBhM,EAAAA,EAAAA,UAAS,IAEnDiM,GAAcC,EAAAA,EAAAA,UACdC,GAAsBD,EAAAA,EAAAA,WACtB,YAAEE,IAAgBtM,EAAAA,EAAAA,KAClBuM,GAAeH,EAAAA,EAAAA,WAEdI,EAAQC,IAAavM,EAAAA,EAAAA,UAAS,OAkFrC6C,EAAAA,EAAAA,YAAU,KAqDF,OAANyJ,QAAM,IAANA,GAAAA,EAAQE,GAAG,cAfX,SAA4Bf,GAAM,IAADgB,EAC/Bb,GAAYc,GAAS,IAChBA,EACH,CACEjB,IAAKA,EACLkB,KAAM,UACNpO,GAAI,OAGRiN,GAAgB,KAAM,IACF,QAApBiB,EAAAJ,EAAaO,eAAO,IAAAH,GAApBA,EAAsBI,eAAe,CACnCC,SAAU,SACVC,MAAO,OAEX,IAEM,OAANT,QAAM,IAANA,GAAAA,EAAQE,GAAG,WArDX,SAAyBf,GAAM,IAADuB,EAC5BlP,QAAQC,IAAI,uFAAgD0N,GAE5D,MAAM,QAAEwB,EAAO,SAAEC,EAAQ,aAAErB,GAAiBJ,EAE5CG,GAAYc,GAAS,IAChBA,EACH,CACEjB,IAAKwB,EACLN,KAAMtB,IAAe6B,EAAW,KAAO,QACvC3O,GAAI2O,MAGY,QAApBF,EAAAX,EAAaO,eAAO,IAAAI,GAApBA,EAAsBH,eAAe,CACnCC,SAAU,SACVC,MAAO,QAETrB,GAAO,IAAM,IACf,IAoCM,OAANY,QAAM,IAANA,GAAAA,EAAQE,GAAG,OAnCX,SAAyBf,GACvB3N,QAAQC,IACN,kHACA0N,GAEFG,GAAYc,GAAS,IAChBA,EACH,CACEjB,IAAKA,EAAIwB,QACTN,KAAM,UACNpO,GAAI,OAIR,MAAM4O,EAAgBb,EAAO/N,GAC7BT,QAAQC,IAAI,iDAA8BoP,EAC5C,IAqBO,KACC,OAANb,QAAM,IAANA,GAAAA,EAAQc,IAAI,WACN,OAANd,QAAM,IAANA,GAAAA,EAAQc,IAAI,OACN,OAANd,QAAM,IAANA,GAAAA,EAAQc,IAAI,aAAa,IAE1B,CAACd,IAeJ,OACE5N,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAC0M,EAAAA,EAAM,CACL5G,UAAU,mBACVmJ,OAAO,KACPnO,MAAO,CACLC,QAAS,OACTmO,WAAY,SACZC,eAAgB,UAChBjP,UAEFI,EAAAA,EAAAA,MAACqM,EAAAA,EAAS,CAACyC,OAAK,EAAAlP,SAAA,EACdI,EAAAA,EAAAA,MAACoM,EAAAA,EAAOE,MAAK,CAAA1M,SAAA,EACXF,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACJC,IAAI,oBACJI,MAAO,CAAEkM,OAAQ,OAAQD,MAAO,UAChC,+BAGJzM,EAAAA,EAAAA,MAACoM,EAAAA,EAAO2C,SAAQ,CAAAnP,SAAA,EACdI,EAAAA,EAAAA,MAACgP,EAAAA,EAAG,CAACxJ,UAAU,UAAS5F,SAAA,EACtBF,EAAAA,EAAAA,KAACsP,EAAAA,EAAI/O,KAAI,CAACgP,KAAK,IAAGrP,SAAC,SAClBgN,GACC5M,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAH,SAAA,EACEF,EAAAA,EAAAA,KAACsP,EAAAA,EAAI/O,KAAI,CAACgP,KAAK,SAAQrP,SAAC,8BACxBF,EAAAA,EAAAA,KAACsP,EAAAA,EAAI/O,KAAI,CAACgP,KAAK,QAAOrP,SAAC,8BACvBF,EAAAA,EAAAA,KAACsP,EAAAA,EAAI/O,KAAI,CAACgP,KAAK,YAAWrP,SAAC,8BAC3BF,EAAAA,EAAAA,KAACsP,EAAAA,EAAI/O,KAAI,CAACgP,KAAK,SAAQrP,SAAC,8BACxBF,EAAAA,EAAAA,KAACsP,EAAAA,EAAI/O,KAAI,CAACgP,KAAK,UAASrP,SAAC,iCAG3BI,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAH,SAAA,EACEF,EAAAA,EAAAA,KAACsP,EAAAA,EAAI/O,KAAI,CAACgP,KAAK,SAAQrP,SAAC,wBACxBF,EAAAA,EAAAA,KAACsP,EAAAA,EAAI/O,KAAI,CAACgP,KAAK,QAAOrP,SAAC,oCAI7BI,EAAAA,EAAAA,MAACkP,EAAAA,EAAI,CAACC,SAAWjD,GApLHA,KAItB,GAHA9M,QAAQC,IAAI,iFAEZ6M,EAAEkD,kBACGxC,EAEH,OADAlG,MAAM,yEACCgH,IAGT,GAAqB,KAAjBP,QAAwCkC,IAAjBlC,EAEzB,YADAzG,MAAM,6DAGR,GAAyB,KAArB2G,QAAgDgC,IAArBhC,EAE7B,YADA3G,MAAM,yEAMR,MAAMkH,GAAS0B,EAAAA,EAAAA,IAAG,CAYhBC,aAAa,IAQf3B,EAAO4B,UAEP3B,GAAU,IAAMD,IAEhB,MAAM6B,EAAW,CACfjB,SAAU7B,EACVQ,eACAE,oBAEFO,EAAO8B,KAAK,aAAcD,EAAS,EAmIJE,CAAezD,GAAGtM,SAAA,CACtC,KACDI,EAAAA,EAAAA,MAAC4P,EAAAA,EAAU,CAACC,KAAK,KAAKrP,MAAO,CAAEiM,MAAO,SAAU7M,SAAA,EAC9CF,EAAAA,EAAAA,KAACkQ,EAAAA,EAAWE,KAAI,CAAAlQ,SAAC,8BACjBF,EAAAA,EAAAA,KAACwP,EAAAA,EAAKa,QAAO,CAGX9B,KAAK,OACL+B,KAAK,eACLC,SAtMiB/D,IAE/BkB,GAAgB,IAAMlB,EAAEgE,OAAOC,OAAM,EAqMvBA,MAAOhD,EACPiD,IAAK7C,KAEP7N,EAAAA,EAAAA,KAACkQ,EAAAA,EAAWE,KAAI,CAAAlQ,SAAC,oCACjBF,EAAAA,EAAAA,KAACwP,EAAAA,EAAKa,QAAO,CAGX9B,KAAK,OACL+B,KAAK,mBACLI,IAAK3C,EACLwC,SA5MqB/D,IAEnCoB,GAAoB,IAAMpB,EAAEgE,OAAOC,OAAM,EA2M3BA,MAAO9C,KAET3N,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAM,CAAC9P,QAAQ,oBAAoB0N,KAAK,SAAQrO,SAAC,2CAQ3DiN,IACCnN,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAAH,UACEF,EAAAA,EAAAA,KAAA,OAAK8F,UAAU,aAAahF,MAAO,CAAEC,QAAS,SAAUb,UACtDI,EAAAA,EAAAA,MAACsQ,EAAAA,EAAMC,OAAM,CAAA3Q,SAAA,EACXI,EAAAA,EAAAA,MAACsQ,EAAAA,EAAME,OAAM,CAAA5Q,SAAA,EACXI,EAAAA,EAAAA,MAACsQ,EAAAA,EAAMG,MAAK,CAAA7Q,SAAA,CAAC,+BAASuN,EAAa,OAAe,aAElDzN,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAM,CACL9P,QAAQ,oBACRC,MAAO,CAAE4F,UAAW,QACpBX,QAASA,KA1FvBrG,QAAQC,IAAI,sCACRqR,OAAOC,QAAQ,gFACjBvR,QAAQC,IAAI,wFACZuO,EAAO8B,KAAK,MAAO,CAAEvC,eAAcR,aAAYU,qBAC/CQ,EAAU,MACVX,EAAW,IACXE,EAAgB,IAChBE,EAAoB,IACpBR,GAAgB,KAAM,OAmFVmB,KAAK,SAAQrO,SACd,uCAIHF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAMM,KAAI,CAAAhR,UACTF,EAAAA,EAAAA,KAAA,OAAKc,MAAO,CAAEqQ,SAAU,SAAUnE,OAAQ,SAAU9M,UAClDI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CACGqN,EAAQxN,KAAI,CAACqR,EAAGtR,IACJ,YAAXsR,EAAE7C,MAAiC,YAAX6C,EAAE7C,MACxBjO,EAAAA,EAAAA,MAAA,MAAYQ,MAAO,CAAEuQ,UAAW,QAASnR,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OACEc,MAAO,CACLkM,OAAQ,QACRsE,KAAM,WACNC,QAAS,SACTC,gBAAiB,cAGrBxR,EAAAA,EAAAA,KAAA,OAAAE,SAAMkR,EAAE/D,OACRrN,EAAAA,EAAAA,KAAA,OACEc,MAAO,CACLkM,OAAQ,QACRsE,KAAM,WACNC,QAAS,SACTC,gBAAiB,eAfd1R,GAmBI,OAAXsR,EAAE7C,MACJjO,EAAAA,EAAAA,MAAA,MACEQ,MAAO,CACL4F,UAAW,OACX2K,UAAW,QACXnR,SAAA,EAGFF,EAAAA,EAAAA,KAAA,OACEc,MAAO,CACL2Q,UAAW,MACX5E,SAAU,OACV6E,WAAY,QACZxR,SAEDkR,EAAEjR,MAELH,EAAAA,EAAAA,KAAA,OACEc,MAAO,CACLyQ,QAAS,MACTxQ,QAAS,eACT4Q,qBAAsB,OACtBC,uBAAwB,OACxBC,wBAAyB,OACzBL,gBAAiB,WACjBtR,SAEDkR,EAAE/D,QArBA,GAAGvN,QAyBVQ,EAAAA,EAAAA,MAAA,MACEQ,MAAO,CACL4F,UAAW,QACX2K,UAAW,QACXnR,SAAA,EAGFF,EAAAA,EAAAA,KAAA,OACEc,MAAO,CACL2Q,UAAW,MACX5E,SAAU,OACV6E,WAAY,QACZxR,SAEDkR,EAAEjR,MAELH,EAAAA,EAAAA,KAAA,OACEc,MAAO,CACLyQ,QAAS,MACTxQ,QAAS,eACT4Q,qBAAsB,OACtBC,uBAAwB,OACxBC,wBAAyB,OACzBL,gBAAiB,OACjB7K,MAAO,QACPzG,SAEDkR,EAAE/D,QAtBA,GAAGvN,UA2BdE,EAAAA,EAAAA,KAAA,MAAI0Q,IAAKzC,EAAcnN,MAAO,CAAEuQ,UAAW,kBAIjDrR,EAAAA,EAAAA,KAACwP,EAAAA,EAAI,CAACC,SAAWjD,GA1QHA,KACxBA,EAAEkD,iBAEFhQ,QAAQC,IAAI,oCACZ,MAAMoQ,EAAW,CAEflB,QAASxB,EACTyB,SAAU7B,EACVQ,gBAGFS,EAAO8B,KAAK,UAAWD,EAAS,EA+PC+B,CAAiBtF,GAAGtM,UACzCI,EAAAA,EAAAA,MAACsQ,EAAAA,EAAMnE,OAAM,CAAAvM,SAAA,EACXI,EAAAA,EAAAA,MAAC4P,EAAAA,EAAU,CAACpK,UAAU,OAAM5F,SAAA,EAC1BF,EAAAA,EAAAA,KAACkQ,EAAAA,EAAWE,KAAI,CAACjQ,GAAG,4BAA2BD,SAAC,8BAGhDF,EAAAA,EAAAA,KAACwP,EAAAA,EAAKa,QAAO,CACX,aAAW,UACX,mBAAiB,4BACjBE,SAAW/D,GArVZA,KAEjBc,GAAO,IAAMd,EAAEgE,OAAOC,OAAM,EAmVOsB,CAAUvF,GAC3BiE,MAAOpD,EACPiD,KAAK,qBAITtQ,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAM,CACL9P,QAAQ,kBACR0N,KAAK,SACLzN,MAAO,CAAE4F,UAAW,SAAUxG,SAC/B,uDASZ,ECpYP,EAJgBT,IACPO,EAAAA,EAAAA,KAACgS,EAAS,CAAC9E,QAASzN,EAAMyN,UCqBnC,EAnBoBlC,IAAmB,IAAlB,SAAE9K,GAAU8K,EAC/B,MAAO/G,EAAMU,IAAW/C,EAAAA,EAAAA,UAAS,IAAIsC,OAE/B,WAAE+I,EAAU,QAAEC,IAAYxL,EAAAA,EAAAA,KAOhC,OACEpB,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAC8Q,EAAM,CAAC5D,QAASA,IAChBhN,GACDF,EAAAA,EAAAA,KAACyM,EAAM,MACN,C,oECXP,MA6DA,EA7DuBwF,KACrB,MAAMC,GAAaC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,aAE1CC,GAAWC,EAAAA,EAAAA,MAEX1Q,GAAWC,EAAAA,EAAAA,MA0CjB,MAAO,CACLoQ,aACAM,WA1CiBxH,IAA8B,IAA7B,WAAEyH,EAAU,QAAErS,GAAS4K,EAEzC,OADgBsH,GAASI,EAAAA,EAAAA,IAAe,CAAED,aAAYrS,YACxC,EA0CduS,aAToBxS,GACJmS,GAASM,EAAAA,EAAAA,IAAiBzS,IAS1C0S,YAlCkBC,IAA8B,IAA7B,WAAEL,EAAU,QAAErS,GAAS0S,EAE1C,OADgBR,GAASS,EAAAA,EAAAA,IAAgB,CAAEN,aAAYrS,YACzC,EAiCd4S,gBA7BuB7S,IACvB0B,EAAS,CAAEoR,SAAU,WAAW9S,KAAO,EA6BvC+S,kBArByB/S,IACzB0B,EAAS,CAAEoR,SAAU,aAAa9S,KAAO,EAqBzCgT,kBAjByBtT,IACzBgC,EAAS,CAAEoR,SAAU,aAAapT,KAAe,EAiBjDuT,cA3CoB5N,gBACd8M,GAASe,EAAAA,EAAAA,MAAoB,EA2CnCC,gBA7BsBA,KACtBzR,EAAS,CAAEoR,SAAU,OAAQ,EA6B9B,C,0DC5DH,MAAMM,EAASA,CAACC,EAAOC,IAChBD,EAGEE,SAASF,GAFPC,EAkEX,EA7DsBjS,KACpB,MAAMK,GAAWC,EAAAA,EAAAA,OAEV6R,EAASC,IAAchS,EAAAA,EAAAA,WAAS,IAEhCiS,IAAevS,EAAAA,EAAAA,MAEhBwS,EAAOD,EAAY/P,IAAI,QAAU4P,SAASG,EAAY/P,IAAI,SAAW,EACrEqM,EAAO0D,EAAY/P,IAAI,QAAU4P,SAASG,EAAY/P,IAAI,SAAW,GAErEiQ,GAAeC,EAAAA,EAAAA,IAAmB,CAAEF,OAAM3D,SAAQ8D,WAuCxD,MAAO,CACLC,WAtCkBC,IAClB,IAAIC,EAAW,GAEf,GAAID,EAAW,CACb,MAAME,EAAUd,EAAOY,EAAUL,KAAM,GACjCQ,EAAUf,EAAOY,EAAUhE,KAAM,IAEvCiE,GAAWJ,EAAAA,EAAAA,IAAmB,CAC5BF,KAAMO,EACNlE,KAAMmE,IACLL,UACL,MACEG,EAAWL,EAIbH,GAAYD,EAAQ,EAuBpBG,OACA3D,OACAoE,aArBoBC,IACpB3S,EAAS,CAAEoR,SAAU,aAAauB,IAAOC,OAAQV,GAAe,EAqBhEJ,UACAe,WAlBkBF,IAClB3S,EAAS,CAAEoR,SAAU,WAAWuB,IAAOC,OAAQV,GAAe,EAkB9D/F,YAVkBA,KAClBnM,EAAS,CAAEoR,SAAU,UAAW,EAUhC1R,aAfmBA,KACnBM,EAAS,CAAEoR,SAAU,aAAc,EAepC,C","sources":["components/diary/DiaryListComponent.js","pages/diary/DiaryListPage.js","utils/xy.js","api/openApi.js","components/layout/Footer.js","components/menus/BasicMenu.js","components/layout/Header.js","components/layout/LayoutIndex.js","hooks/useCustomDiary.js","hooks/useCustomMove.js"],"sourcesContent":["import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { Link, Navigate, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport \"../layout/stylesCalendar.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport useCustomDiary from \"../../hooks/useCustomDiary\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { getDiaryList } from \"../../api/diaryApi\";\r\n\r\nconst makeCalendar = (d) => {\r\n  console.log(\"makeCalendar() 진입\");\r\n\r\n  let date = new Date(d);\r\n  const currentYear = new Date(date).getFullYear(); //예)Mon Apr 01 2024 10:27:04 GMT+0900 (한국 표준시)\r\n  const currentMonth = new Date(date).getMonth() + 1;\r\n  const firstDay = new Date(date.setDate(1)).getDay(); //1 앞에0안붙는다\r\n\r\n  //현재 달력첫째날\r\n  let calfirst = \"\";\r\n  function getCalfirst() {\r\n    calfirst += `${currentYear}-`;\r\n\r\n    if (currentMonth < 10) {\r\n      calfirst += `0${currentMonth}`;\r\n    } else {\r\n      calfirst += `${currentMonth}`;\r\n    }\r\n    //calfirst += `01`\r\n    return calfirst;\r\n  } //calfirst 현재달력첫날\r\n\r\n  const lastDay = new Date(currentYear, currentMonth, 0).getDate();\r\n  //console.log(\"lastDay값 ->\"+lastDay)//30\r\n  const limitDay = firstDay + lastDay;\r\n  //console.log(\"limitDay값 ->\"+limitDay)//31\r\n  const nextDay = Math.ceil(limitDay / 7) * 7;\r\n  //console.log(\"nextDay값 ->\"+nextDay)//35 35-31=4칸 빈칸만들어진다.\r\n\r\n  //   for (let i = 0; i < firstDay; i++) {\r\n  //     <div class=\"calnoColor\"></div>;\r\n  // }//for\r\n\r\n  //   for (let i = 1; i <= lastDay; i++) {\r\n  //     <CalendarItem/>;\r\n  //   }\r\n  //   if (nextDay !== 0) {\r\n  //     for (let i = limitDay; i < nextDay; i++) {\r\n  //       <div className=\"calnoColor\"></div>\r\n  //     }\r\n  //   } else {\r\n  //   }\r\n  return { firstDay, lastDay, limitDay, nextDay };\r\n};\r\n\r\nconst CalendarItem = (props) => {\r\n  //UserId, content ,createdAt ,id , picture4\r\n  console.log(\"CalendarItem() 진입\");\r\n\r\n  const { diary, dateobject } = props.i; //api서버후 db에서 받은값\r\n  // console.log(\"props.i \", props.i.diary[0]);\r\n  return diary.map((i) => (\r\n    <React.Fragment key={i.id}>\r\n      {i.id ? (\r\n        i.picture ? (\r\n          <>\r\n            <Link to={`../read/${i.id}`}>\r\n              👌\r\n              <Image\r\n                //src={`http://localhost:8001/img/${i.picture}`}\r\n                src={`https://picdiary-bucket.s3.ap-northeast-2.amazonaws.com/${i.path}`}\r\n                rounded\r\n                variant=\"top\"\r\n                style={{\r\n                  display: \"block\",\r\n                  margin: \"0 auto\",\r\n                  maxWidth: \"50px\",\r\n                  maxHeight: \"50px\",\r\n                  objectFit: \"contain\",\r\n                }}\r\n              />\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <Link to={`../read/${i.id}`}>👌</Link>\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </React.Fragment>\r\n  ));\r\n};\r\n\r\nconst DiaryListComponent = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const { moveToCreate } = useCustomMove();\r\n  const { exceptionHandle } = useCustomLogin();\r\n  const [diary, setDiary] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [currentMonth, setCurrentMonth] = useState(\"\");\r\n  const [currentYear, setCurrentYear] = useState(\"\");\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [fullcurrentDate, setFullCurrentDate] = useState(\"\");\r\n\r\n  const [searchMonth, setSearchMonth] = useState(0);\r\n  const [searchYear, setSearchYear] = useState(0);\r\n  const [beforeDateItemArray, setBeforeDateItemArray] = useState([]);\r\n  const [afterDateItemArray, setAfterDateItemArray] = useState([]);\r\n  const [dateItem, setDateItem] = useState([]);\r\n  const [lastDay, setLastDay] = useState(\"\");\r\n  const [firstDay, setFirstDay] = useState(\"\");\r\n  const [nextDay, setNextDay] = useState(\"\");\r\n  const [limitDay, setLimitDay] = useState(\"\");\r\n  const [check, setCheck] = useState(0);\r\n  const [make, setMake] = useState(false);\r\n\r\n  console.log(\"컴포넌트 시작\");\r\n\r\n  let searchParamsYear = searchParams.get(\"year\");\r\n  let searchParamsMonth = searchParams.get(\"month\");\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(\"useLayoutEffect()  진입\");\r\n    setDateItem(() => []);\r\n    setMake(() => false);\r\n    let date = new Date();\r\n\r\n    let basicYear = date.getFullYear();\r\n    let basicMonth = date.getMonth() + 1;\r\n    basicMonth = basicMonth < 10 ? \"0\" + basicMonth : basicMonth;\r\n    date = `${basicYear}-${basicMonth}-01`;\r\n\r\n    if (searchParamsYear !== null && searchParamsMonth !== null) {\r\n      console.log(\r\n        \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n        searchParamsYear\r\n      );\r\n      console.log(\r\n        \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n        searchParamsMonth\r\n      );\r\n      setSearchMonth(() => Number(searchParamsMonth));\r\n      setSearchYear(() => searchParamsYear);\r\n\r\n      date = new Date(`${searchParamsYear}-${searchParamsMonth}-01`);\r\n      console.log(\"date-> \", date);\r\n    }\r\n    console.log(\"useLayoutEffect()  setCurrentDate() 넣기전-> \", date);\r\n\r\n    setCurrentDate(() => date);\r\n    const longdate = new Date(date);\r\n    setCurrentYear(\"\" + longdate.getFullYear());\r\n    setCurrentMonth(longdate.getMonth() + 1);\r\n    setFullCurrentDate(() => longdate);\r\n  }, [searchParamsYear, searchParamsMonth]);\r\n\r\n  useEffect(() => {\r\n    if (fullcurrentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() fullcurrentDate 존재할경우 =>  \",\r\n        fullcurrentDate\r\n      );\r\n\r\n      const { firstDay, nextDay, limitDay, lastDay } =\r\n        makeCalendar(fullcurrentDate);\r\n\r\n      setLastDay(lastDay);\r\n      setFirstDay(firstDay);\r\n      setNextDay(nextDay);\r\n      setLimitDay(limitDay);\r\n    } //if\r\n\r\n    return () => {\r\n      console.log(\"useEffect() makeCalendar() 반환변수들 초기화\");\r\n\r\n      setLastDay(() => \"\");\r\n      setFirstDay(() => \"\");\r\n      setNextDay(() => \"\");\r\n      setLimitDay(() => \"\");\r\n    };\r\n  }, [fullcurrentDate]);\r\n\r\n  //달력에서 이전빈칸\r\n  useEffect(() => {\r\n    console.log(\"useEffect() 달력 데이터넣기 진입\");\r\n\r\n    if (make === true) {\r\n      console.log(\"useEffect() 달력 데이터넣기 진입 make상태가 true진입\");\r\n\r\n      let dateItem = [];\r\n\r\n      for (let i = 1, j = 0; i <= lastDay; i++, j++) {\r\n        console.log(\"useEffect() 달력 데이터넣기 for문 진입\");\r\n\r\n        let currentYear = new Date(fullcurrentDate).getFullYear();\r\n        let currentMonth = new Date(fullcurrentDate).getMonth() + 1;\r\n        currentMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\r\n        let ichange = i < 10 ? \"0\" + i : i;\r\n        let dateobject = `${currentYear}-${currentMonth}-${ichange}`;\r\n\r\n        dateItem[j] = {\r\n          dateitem: i,\r\n          dateobject: dateobject,\r\n          diary: diary.filter((a) => a.dateobject === dateobject),\r\n        };\r\n      }\r\n      setDateItem(() => dateItem);\r\n\r\n      const beforeDateItem = firstDay - 0;\r\n      let beforeDateItemArray = [];\r\n\r\n      if (beforeDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= beforeDateItem; i++, j++) {\r\n          beforeDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setBeforeDateItemArray(() => beforeDateItemArray);\r\n\r\n      //달력에서 이후빈칸\r\n      const afterDateItem = nextDay - limitDay;\r\n      let afterDateItemArray = [];\r\n\r\n      if (afterDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= afterDateItem; i++, j++) {\r\n          afterDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setAfterDateItemArray(() => afterDateItemArray);\r\n    }\r\n  }, [make]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect() 진입\");\r\n\r\n    if (currentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() 진입 axios 비동기요청 currentDate 존재할경우 ->\",\r\n        currentDate\r\n      );\r\n\r\n      const getDiaryListEI = async () => {};\r\n      getDiaryList({ currentDate })\r\n        .then((result) => {\r\n          console.log(\r\n            \"DiaryListComponet.js  useEffect axios 후 then()진입 \",\r\n            result\r\n          );\r\n          if (result) {\r\n            setDiary(() => result);\r\n          }\r\n          setMake(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"DiaryListComponet.js catch()진입 \", err);\r\n          exceptionHandle(err);\r\n        });\r\n      getDiaryListEI();\r\n    } //if\r\n  }, [currentDate]);\r\n\r\n  // 이전달 이동\r\n  const BeforeMonthMove = (currentDate) => {\r\n    console.log(\"BeforeMonthMove() 진입  => \", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n    let beforechangeDate = new Date(tempdate.setMonth(tempdate.getMonth() - 1));\r\n    let beforecurrentYear = new Date(beforechangeDate).getFullYear();\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforecurrentYear => \",\r\n      beforecurrentYear\r\n    );\r\n\r\n    let beforechangeMonth = new Date(beforechangeDate).getMonth() + 1;\r\n    beforechangeMonth =\r\n      beforechangeMonth < 10 ? \"0\" + beforechangeMonth : beforechangeMonth;\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforechangeMonth => \",\r\n      beforechangeMonth\r\n    );\r\n\r\n    navigate(`?year=${beforecurrentYear}&month=${beforechangeMonth}`);\r\n  };\r\n\r\n  //다음달이동\r\n  const NextMonthMove = (currentDate) => {\r\n    console.log(\"NextMonthMove() 진입 currentDate ->\", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n\r\n    let afterchangeDate = new Date(tempdate.setMonth(tempdate.getMonth()));\r\n    console.log(\"NextMonthMove() 진입 afterchangeDate ->\", afterchangeDate);\r\n\r\n    let aftercurrentYear = new Date(afterchangeDate).getFullYear();\r\n    console.log(\"NextMonthMove() 진입 aftercurrentYear ->\", aftercurrentYear);\r\n\r\n    let afterchangeMonth = new Date(afterchangeDate).getMonth() + 2;\r\n    afterchangeMonth =\r\n      afterchangeMonth < 10 ? \"0\" + afterchangeMonth : afterchangeMonth;\r\n    console.log(\"NextMonthMove() 진입 afterchangeMonth ->\", afterchangeMonth);\r\n\r\n    navigate(`?year=${aftercurrentYear}&month=${afterchangeMonth}`);\r\n  };\r\n\r\n  const alertHandler = (dateitem) => {\r\n    alert(dateitem + \"일 사진 다이어리를 이미 작성했습니다!\");\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      {\" \"}\r\n      <section className=\"py-5\">\r\n        <div className=\"calrap\" style={{ margin: \"0 auto\" }}>\r\n          <div className=\"calheader\">\r\n            <div className=\"calbtn calprevDay\">\r\n              <button onClick={() => BeforeMonthMove(currentDate)}>이전</button>\r\n            </div>\r\n            <h2 className=\"caldateTitle\">\r\n              {currentYear}년 {currentMonth}월\r\n            </h2>\r\n            <div className=\"calbtn calnextDay\">\r\n              <button onClick={() => NextMonthMove(currentDate)}>이후</button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <h6 style={{ textAlign: \"right\", color: \"tomato\" }}>\r\n            <i>일자 클릭시 다이어리등록페이지로 이동합니다!</i>\r\n          </h6>\r\n          <br />\r\n\r\n          <div className=\"calgrid caldateHead\">\r\n            <div key=\"{0}\">일</div>\r\n            <div key=\"{1}\">월</div>\r\n            <div key=\"{2}\">화</div>\r\n            <div key=\"{3}\">수</div>\r\n            <div key=\"{4}\">목</div>\r\n            <div key=\"{5}\">금</div>\r\n            <div key=\"{6}\">토</div>\r\n          </div>\r\n\r\n          <div className=\"calgrid caldateBoard\">\r\n            {beforeDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n\r\n            {dateItem.map((i, index) => (\r\n              <div key={index}>\r\n                {/* <Button onclick={moveToCreate} >{i} </Button> */}\r\n                {i.diary.length === 0 ? (\r\n                  <Link\r\n                    to={`../create/${i.dateobject}`}\r\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  >\r\n                    {i.dateitem}\r\n                  </Link>\r\n                ) : (\r\n                  <button\r\n                    onClick={() => alertHandler(i.dateitem)}\r\n                    style={{ all: \"unset\" }}\r\n                  >\r\n                    {i.dateitem}\r\n                  </button>\r\n                )}\r\n\r\n                <CalendarItem key={index} i={i} />\r\n              </div>\r\n            ))}\r\n            {afterDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryListComponent;\r\n","import LayoutIndex from \"../../components/layout/LayoutIndex\";\r\nimport DiaryListComponent from \"../../components/diary/DiaryListComponent\";\r\n\r\nconst DiaryListPage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <DiaryListComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiaryListPage;\r\n","/** 위도, 경도를 x,y 격자 포인트로 변경 */\r\nvar RE = 6371.00877; // 지구 반경(km)\r\nvar GRID = 5.0; // 격자 간격(km)\r\nvar SLAT1 = 30.0; // 투영 위도1(degree)\r\nvar SLAT2 = 60.0; // 투영 위도2(degree)\r\nvar OLON = 126.0; // 기준점 경도(degree)\r\nvar OLAT = 38.0; // 기준점 위도(degree)\r\nvar XO = 43; // 기준점 X좌표(GRID)\r\nvar YO = 136; // 기1준점 Y좌표(GRID)\r\n\r\n// LCC DFS 좌표변환 ( code : \"toXY\"(위경도->좌표, v1:위도, v2:경도), \"toLL\"(좌표->위경도,v1:x, v2:y) )\r\nexport const dfs_xy_conv = (code, v1, v2) => {\r\n  // LCC DFS 좌표변환을 위한 기초 자료\r\n  console.log(\" dfs_xy_conv 함수진입\");\r\n  var DEGRAD = Math.PI / 180.0;\r\n  var RADDEG = 180.0 / Math.PI;\r\n\r\n  var re = RE / GRID;\r\n  var slat1 = SLAT1 * DEGRAD;\r\n  var slat2 = SLAT2 * DEGRAD;\r\n  var olon = OLON * DEGRAD;\r\n  var olat = OLAT * DEGRAD;\r\n\r\n  var sn =\r\n    Math.tan(Math.PI * 0.25 + slat2 * 0.5) /\r\n    Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\r\n  var sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sf = (Math.pow(sf, sn) * Math.cos(slat1)) / sn;\r\n  var ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\r\n  ro = (re * sf) / Math.pow(ro, sn);\r\n  var rs = {};\r\n  if (code == \"toXY\") {\r\n    rs[\"lat\"] = v1;\r\n    rs[\"lng\"] = v2;\r\n    var ra = Math.tan(Math.PI * 0.25 + v1 * DEGRAD * 0.5);\r\n    ra = (re * sf) / Math.pow(ra, sn);\r\n    var theta = v2 * DEGRAD - olon;\r\n    if (theta > Math.PI) theta -= 2.0 * Math.PI;\r\n    if (theta < -Math.PI) theta += 2.0 * Math.PI;\r\n    theta *= sn;\r\n    rs[\"x\"] = Math.floor(ra * Math.sin(theta) + XO + 0.5);\r\n    rs[\"y\"] = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\r\n  } else {\r\n    rs[\"x\"] = v1;\r\n    rs[\"y\"] = v2;\r\n    var xn = v1 - XO;\r\n    var yn = ro - v2 + YO;\r\n    ra = Math.sqrt(xn * xn + yn * yn);\r\n    if (sn < 0.0) return -ra;\r\n    var alat = Math.pow((re * sf) / ra, 1.0 / sn);\r\n    alat = 2.0 * Math.atan(alat) - Math.PI * 0.5;\r\n\r\n    if (Math.abs(xn) <= 0.0) {\r\n      theta = 0.0;\r\n    } else {\r\n      if (Math.abs(yn) <= 0.0) {\r\n        theta = Math.PI * 0.5;\r\n        if (xn < 0.0) return -theta;\r\n      } else theta = Math.atan2(xn, yn);\r\n    }\r\n    var alon = theta / sn + olon;\r\n    rs[\"lat\"] = alat * RADDEG;\r\n    rs[\"lng\"] = alon * RADDEG;\r\n  }\r\n  return rs;\r\n};\r\n","import axios from \"axios\";\r\nimport { dfs_xy_conv } from \"../utils/xy\";\r\n\r\n//const URL = \"http://apis.data.go.kr/B551182/\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0\r\nconst URL =\r\n  \"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\r\n//?serviceKey=인증키&numOfRows=10&pageNo=1\r\n//&base_date=20210628&base_time=0600&nx=55&ny=127\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\nconsole.log(apiKey);\r\n\r\nconst navigatorFn = () => {\r\n  if (navigator.geolocation) {\r\n    function saveCoords(coordsObj) {\r\n      localStorage.setItem(\"COORDS\", JSON.stringify(coordsObj));\r\n      //localstorage의 key, value 값은 모두 string 타입으로 저장되기때문에 변환시켜준다.\r\n    }\r\n\r\n    function handleSuccess(position) {\r\n      const latitude = position.coords?.latitude;\r\n      const longitude = position.coords?.longitude;\r\n      const coordsObj = {\r\n        // 객체의 key,  value 값이 동일할 때에는 한번만 써줘도 된다.\r\n        latitude, // localStorage에 객체로 value에 저장하기위해서 객체에 넣어준다.\r\n        longitude,\r\n      };\r\n      saveCoords(coordsObj); // localStorage에 위치 저장\r\n    }\r\n\r\n    function handleError() {\r\n      console.log(\"cant not access to location\");\r\n    }\r\n\r\n    function askForCoords() {\r\n      navigator.geolocation.getCurrentPosition(handleSuccess, handleError);\r\n    }\r\n\r\n    let loadedCoords = localStorage.getItem(\"COORDS\");\r\n    console.log(\r\n      \"loadCoords 로컬저장소에서 저장된 위도경도 가져오기 : \",\r\n      JSON.stringify(loadedCoords)\r\n    );\r\n    loadedCoords = JSON.parse(loadedCoords);\r\n\r\n    if (loadedCoords === null) {\r\n      // localStorage에 좌표값이 저장되어있지않다면\r\n      askForCoords(); // 좌표값을 물어본다\r\n    }\r\n    const xyresult = dfs_xy_conv(\r\n      \"toXY\",\r\n      Number(loadedCoords?.latitude),\r\n      Number(loadedCoords?.longitude)\r\n    );\r\n    return xyresult;\r\n  } //if\r\n}; //navigatorFn\r\n\r\nexport const weatherapi = async ({ weatherDate, weatherTime }) => {\r\n  // const {  } = params;\r\n\r\n  var weatherapiresult = null;\r\n\r\n  const xyresult = navigatorFn();\r\n  console.log(\"weatherapi() 내 위경도를 xy변경후 : \", xyresult);\r\n  console.log(\"weatherapi() 내 weatherDate 확인 ->  \", weatherDate);\r\n  console.log(\"weatherapi() 내 weatherTime 확인 ->  : \", weatherTime);\r\n  try {\r\n    const result = await axios.get(URL, {\r\n      params: {\r\n        serviceKey: apiKey,\r\n        numOfRows: 10,\r\n        pageNo: 1,\r\n        dataType: \"JSON\",\r\n        base_date: weatherDate,\r\n        base_time: weatherTime,\r\n        nx: xyresult.x,\r\n        ny: xyresult.y,\r\n      },\r\n    });\r\n    weatherapiresult = result?.data?.response?.body?.items?.item;\r\n    console.log(\"openAPI axios 결과 \", weatherapiresult);\r\n    return weatherapiresult;\r\n  } catch (e) {\r\n    console.log(\"openAPI axios 에러발생\", e);\r\n  }\r\n}; //weatherapi\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <span style={{ fontSize: \"15px\", textAlign: \"right\" }}>\r\n            <img\r\n              alt=\"\"\r\n              src=\"/img/thumbs-up.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            \"미래는 오늘 여러분이 무엇을 하느냐에 달려 있습니다.\" - 마하트마\r\n            간디 <br />\r\n            The future depends on what we do in the present. -Mahatma Gandhi\r\n          </span>\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Footer;\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\n//채팅\r\nimport { io } from \"socket.io-client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { chatAdd, chatGetPost } from \"../../api/chat\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\n\r\nconst BasicMenu = (props) => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  //채팅\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgList, setMsgList] = useState([]);\r\n  const [chatroomname, setChatroomname] = useState(\"\");\r\n  const [chatroompassword, setChatroompassword] = useState(\"\");\r\n\r\n  const refChatRoom = useRef();\r\n  const refChatRoompassword = useRef();\r\n  const { moveToLogin } = useCustomLogin();\r\n  const refModalBody = useRef();\r\n  //소켓\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const handleMsg = (e) => {\r\n    //console.log(\"handleMsg 이벤트핸들러 진입 ->\", e.target.value);\r\n    setMsg(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroomnameInput = (e) => {\r\n    //console.log(\"handleChatroomnameInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroomname(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroompasswordInput = (e) => {\r\n    //console.log(\"handleChatroompasswordInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroompassword(() => e.target.value);\r\n  };\r\n  const chatStartClick = (e) => {\r\n    console.log(\"chatStartClick 이벤트핸들러함수 진입 \");\r\n\r\n    e.preventDefault();\r\n    if (!isLogin) {\r\n      alert(\"로그인 후 이용가능합니다.\");\r\n      return moveToLogin();\r\n    }\r\n\r\n    if (chatroomname === \"\" || chatroomname === undefined) {\r\n      alert(\"방 이름을 입력하세요!\");\r\n      return;\r\n    }\r\n    if (chatroompassword === \"\" || chatroompassword === undefined) {\r\n      alert(\"방 비밀번호를 입력하세요!\");\r\n      return;\r\n    }\r\n\r\n    //네임스페이스둘경우\r\n    //const socket = io(\"/pic\", {\r\n    const socket = io({\r\n      //const socket = io(\"https://picdiary2025.store/\", {\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"52.78.155.180\", {\r\n\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"http://52.78.155.180:8082\", {\r\n\r\n      //path: \"/my-custom-path/\",\r\n      //추가\r\n      //transports: [\"websocket\"], //폴링시도\r\n      //path: \"/ws\",\r\n      autoConnect: false,\r\n\r\n      // query: {\r\n      //   username: loginState, //email\r\n      //   chatroomname: e.target.chatroomname.value,\r\n      //   chatroompassword: e.target.chatroompassword.value,\r\n      // },\r\n    });\r\n    socket.connect();\r\n\r\n    setSocket(() => socket);\r\n\r\n    const sendData = {\r\n      username: loginState, //email\r\n      chatroomname,\r\n      chatroompassword,\r\n    };\r\n    socket.emit(\"roomcreate\", sendData);\r\n  }; //chatStartClick\r\n\r\n  const handleSubmitChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"handleSubmitChat() 진입 \");\r\n    const sendData = {\r\n      //message: e.target.chatcontents.value,\r\n      message: msg,\r\n      username: loginState,\r\n      chatroomname,\r\n    };\r\n\r\n    socket.emit(\"message\", sendData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    function messageCallback(msg) {\r\n      console.log(\"handleSubmitChat() 진입 message 콜백함수 진입 msg-> \", msg);\r\n\r\n      const { message, username, chatroomname } = msg;\r\n\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: message,\r\n          type: loginState === username ? \"me\" : \"other\",\r\n          id: username,\r\n        },\r\n      ]);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n      setMsg(() => \"\");\r\n    }\r\n    function goodbyeCallback(msg) {\r\n      console.log(\r\n        \"out 이벤트 리액트에서 받아서 goodbyeCallback() 진입 msg => \",\r\n        msg\r\n      );\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg.message,\r\n          type: \"goodbye\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n\r\n      const socketidcheck = socket.id;\r\n      console.log(\"goodbyeCallback() 소켓 id확인 \", socketidcheck);\r\n    }\r\n\r\n    function roomcreateCallback(msg) {\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg,\r\n          type: \"welcome\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n      setModalVisible(() => true);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    } //callback\r\n    socket?.on(\"roomcreate\", roomcreateCallback);\r\n    socket?.on(\"message\", messageCallback);\r\n    socket?.on(\"out\", goodbyeCallback);\r\n\r\n    return () => {\r\n      socket?.off(\"message\");\r\n      socket?.off(\"out\");\r\n      socket?.off(\"roomcreate\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const chatCloseModal = () => {\r\n    console.log(\"chatCloseModal() 진입\");\r\n    if (window.confirm(\"채팅방에서 나가시겠습니까?\")) {\r\n      console.log(\"chatCloseModal onClick 내 out 소켓이벤트 전달전 \");\r\n      socket.emit(\"out\", { chatroomname, loginState, chatroompassword });\r\n      setSocket(null);\r\n      setMsgList([]);\r\n      setChatroomname(\"\");\r\n      setChatroompassword(\"\");\r\n      setModalVisible(() => false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"bg-body-tertiary\"\r\n        expand=\"lg\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand>\r\n            <Image\r\n              src=\"/img/sunglass.png\"\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n            />\r\n            하루관리\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {isLogin ? (\r\n                <>\r\n                  <Nav.Link href=\"/diary\">사진일기</Nav.Link>\r\n                  <Nav.Link href=\"/diet\">식단관리</Nav.Link>\r\n                  <Nav.Link href=\"/exercise\">운동관리</Nav.Link>\r\n                  <Nav.Link href=\"/money\">금전관리</Nav.Link>\r\n                  <Nav.Link href=\"/logout\">로그아웃</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Nav.Link href=\"/login\">로그인</Nav.Link>\r\n                  <Nav.Link href=\"/join\">회원가입</Nav.Link>\r\n                </>\r\n              )}\r\n            </Nav>\r\n            <Form onSubmit={(e) => chatStartClick(e)}>\r\n              {\" \"}\r\n              <InputGroup size=\"sm\" style={{ width: \"600px\" }}>\r\n                <InputGroup.Text>채팅방명</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroomname\"\r\n                  onChange={handleChatroomnameInput}\r\n                  value={chatroomname}\r\n                  ref={refChatRoom}\r\n                />\r\n                <InputGroup.Text>방비밀번호</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroompassword\"\r\n                  ref={refChatRoompassword}\r\n                  onChange={handleChatroompasswordInput}\r\n                  value={chatroompassword}\r\n                />\r\n                <Button variant=\"outline-secondary\" type=\"submit\">\r\n                  채팅하기\r\n                </Button>\r\n              </InputGroup>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {modalVisible && (\r\n        <>\r\n          <div className=\"modal show\" style={{ display: \"block\" }}>\r\n            <Modal.Dialog>\r\n              <Modal.Header>\r\n                <Modal.Title> 채팅방명 : {chatroomname} </Modal.Title>\r\n                &nbsp; &nbsp;\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  style={{ textAlign: \"left\" }}\r\n                  onClick={() => chatCloseModal()}\r\n                  type=\"button\"\r\n                >\r\n                  채팅창닫기\r\n                </Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div style={{ overflow: \"scroll\", height: \"500px\" }}>\r\n                  <ul>\r\n                    {msgList.map((v, i) =>\r\n                      v.type === \"welcome\" || v.type === \"goodbye\" ? (\r\n                        <li key={i} style={{ listStyle: \"none\" }}>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                          <div>{v.msg}</div>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                        </li>\r\n                      ) : v.type === \"me\" ? (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_1`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      ) : (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_2`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#000\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    )}\r\n                    <li ref={refModalBody} style={{ listStyle: \"none\" }} />\r\n                  </ul>\r\n                </div>\r\n              </Modal.Body>\r\n              <Form onSubmit={(e) => handleSubmitChat(e)}>\r\n                <Modal.Footer>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                      채팅내용\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                      onChange={(e) => handleMsg(e)}\r\n                      value={msg}\r\n                      name=\"chatcontents\"\r\n                    />\r\n                  </InputGroup>\r\n\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    type=\"submit\"\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    메시지보내기\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal.Dialog>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicMenu;\r\n","import BasicMenu from \"../menus/BasicMenu\";\r\n\r\nconst Header = (props) => {\r\n  return <BasicMenu isLogin={props.isLogin} />;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, cloneElement } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst LayoutIndex = ({ children }) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const { loginState, isLogin } = useCustomLogin();\r\n\r\n  //console.log(\"loginState -> \", loginState);\r\n  //console.log(\"isLogin -> \", isLogin);\r\n\r\n  // const clonedElement = cloneElement(children, { today: date });\r\n\r\n  return (\r\n    <>\r\n      <Header isLogin={isLogin} />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutIndex;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getDiaryListAsync,\r\n  postDiaryAsync,\r\n  patchDiaryAsync,\r\n  deleteDiaryAsync,\r\n} from \"../slices/diarySlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomDiary = () => {\r\n  const diaryState = useSelector((state) => state.diarySlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const postDiaryC = ({ diaryParam, picture }) => {\r\n    const payload = dispatch(postDiaryAsync({ diaryParam, picture }));\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getDiaryListC = async () => {\r\n    await dispatch(getDiaryListAsync());\r\n  };\r\n\r\n  //수정\r\n  const patchDiaryC = ({ diaryParam, picture }) => {\r\n    const payload = dispatch(patchDiaryAsync({ diaryParam, picture }));\r\n    return payload; //thunk에서 받은 액션결과전달\r\n  };\r\n\r\n  //추가\r\n  const moveToDiaryRead = (id) => {\r\n    navigate({ pathname: `../read/${id}` });\r\n  };\r\n\r\n  const moveToDiaryList = () => {\r\n    navigate({ pathname: \"../\" });\r\n  };\r\n\r\n  //추가\r\n  const moveToDiaryModify = (id) => {\r\n    navigate({ pathname: `../modify/${id}` });\r\n  };\r\n\r\n  //추가\r\n  const moveToDiaryCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}` });\r\n  };\r\n\r\n  const deleteDiaryC = (id) => {\r\n    const payload = dispatch(deleteDiaryAsync(id));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    diaryState,\r\n    postDiaryC,\r\n    //    getDiaryC,\r\n    deleteDiaryC,\r\n    patchDiaryC,\r\n    moveToDiaryRead,\r\n    moveToDiaryModify,\r\n    moveToDiaryCreate,\r\n    getDiaryListC,\r\n    moveToDiaryList,\r\n  };\r\n};\r\n\r\nexport default useCustomDiary;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n  if (!param) {\r\n    return defaultValue;\r\n  }\r\n  return parseInt(param);\r\n};\r\n\r\nconst useCustomMove = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const [queryParams] = useSearchParams();\r\n\r\n  const page = queryParams.get(\"page\") ? parseInt(queryParams.get(\"page\")) : 1;\r\n  const size = queryParams.get(\"size\") ? parseInt(queryParams.get(\"size\")) : 10;\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString();\r\n\r\n  const moveToList = (pageParam) => {\r\n    let queryStr = \"\";\r\n\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    //    navigate({ pathname: `../list`, search: queryStr });\r\n\r\n    setRefresh(!refresh);\r\n  }; //moveToList\r\n\r\n  //추가\r\n  const moveToModify = (num) => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToRead = (num) => {\r\n    navigate({ pathname: `../read/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToCreate = () => {\r\n    navigate({ pathname: `../create` });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    navigate({ pathname: `/login` });\r\n  };\r\n  return {\r\n    moveToList,\r\n    page,\r\n    size,\r\n    moveToModify,\r\n    refresh,\r\n    moveToRead,\r\n    moveToLogin,\r\n    moveToCreate,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n"],"names":["CalendarItem","props","console","log","diary","dateobject","i","map","_jsx","React","children","id","picture","_Fragment","_jsxs","Link","to","Image","src","path","rounded","variant","style","display","margin","maxWidth","maxHeight","objectFit","DiaryListComponent","searchParams","useSearchParams","moveToCreate","useCustomMove","exceptionHandle","useCustomLogin","setDiary","useState","navigate","useNavigate","currentMonth","setCurrentMonth","currentYear","setCurrentYear","currentDate","setCurrentDate","fullcurrentDate","setFullCurrentDate","searchMonth","setSearchMonth","searchYear","setSearchYear","beforeDateItemArray","setBeforeDateItemArray","afterDateItemArray","setAfterDateItemArray","dateItem","setDateItem","lastDay","setLastDay","firstDay","setFirstDay","nextDay","setNextDay","limitDay","setLimitDay","check","setCheck","make","setMake","searchParamsYear","get","searchParamsMonth","useLayoutEffect","date","Date","basicYear","getFullYear","basicMonth","getMonth","Number","longdate","useEffect","d","setDate","getDay","getDate","Math","ceil","makeCalendar","j","dateitem","filter","a","beforeDateItem","afterDateItem","getDiaryListEI","async","getDiaryList","then","result","catch","err","className","onClick","tempdate","beforechangeDate","setMonth","beforecurrentYear","beforechangeMonth","BeforeMonthMove","afterchangeDate","aftercurrentYear","afterchangeMonth","NextMonthMove","textAlign","color","index","length","textDecoration","alertHandler","alert","all","DiaryListPage","LayoutIndex","apiKey","process","navigatorFn","navigator","geolocation","_loadedCoords","_loadedCoords2","saveCoords","coordsObj","localStorage","setItem","JSON","stringify","handleSuccess","position","_position$coords","_position$coords2","latitude","coords","longitude","handleError","askForCoords","getCurrentPosition","loadedCoords","getItem","parse","dfs_xy_conv","code","v1","v2","DEGRAD","PI","RADDEG","re","slat1","slat2","olon","olat","sn","tan","cos","sf","pow","ro","rs","ra","theta","floor","sin","xn","yn","sqrt","alat","atan","abs","atan2","alon","weatherapi","weatherDate","weatherTime","_ref","weatherapiresult","xyresult","_result$data","_result$data$response","_result$data$response2","_result$data$response3","axios","params","serviceKey","numOfRows","pageNo","dataType","base_date","base_time","nx","x","ny","y","data","response","body","items","item","e","Footer","Navbar","Container","Brand","fontSize","alt","width","height","loginState","isLogin","modalVisible","setModalVisible","msg","setMsg","msgList","setMsgList","chatroomname","setChatroomname","chatroompassword","setChatroompassword","refChatRoom","useRef","refChatRoompassword","moveToLogin","refModalBody","socket","setSocket","on","_refModalBody$current2","prev","type","current","scrollIntoView","behavior","block","_refModalBody$current","message","username","socketidcheck","off","expand","alignItems","justifyContent","fluid","Collapse","Nav","href","Form","onSubmit","preventDefault","undefined","io","autoConnect","connect","sendData","emit","chatStartClick","InputGroup","size","Text","Control","name","onChange","target","value","ref","Button","Modal","Dialog","Header","Title","window","confirm","Body","overflow","v","listStyle","flex","padding","backgroundColor","marginTop","fontWeight","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","handleSubmitChat","handleMsg","BasicMenu","useCustomDiary","diaryState","useSelector","state","diarySlice","dispatch","useDispatch","postDiaryC","diaryParam","postDiaryAsync","deleteDiaryC","deleteDiaryAsync","patchDiaryC","_ref2","patchDiaryAsync","moveToDiaryRead","pathname","moveToDiaryModify","moveToDiaryCreate","getDiaryListC","getDiaryListAsync","moveToDiaryList","getNum","param","defaultValue","parseInt","refresh","setRefresh","queryParams","page","queryDefault","createSearchParams","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","moveToModify","num","search","moveToRead"],"sourceRoot":""}