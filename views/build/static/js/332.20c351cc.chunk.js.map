{"version":3,"file":"static/js/332.20c351cc.chunk.js","mappings":"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","sources":["utils/xy.js","api/openApi.js","components/main/MainComponent.js","api/mainApi.js","pages/MainPage.js","hooks/useCustomMove.js"],"sourcesContent":["/** 위도, 경도를 x,y 격자 포인트로 변경 */\r\nvar RE = 6371.00877; // 지구 반경(km)\r\nvar GRID = 5.0; // 격자 간격(km)\r\nvar SLAT1 = 30.0; // 투영 위도1(degree)\r\nvar SLAT2 = 60.0; // 투영 위도2(degree)\r\nvar OLON = 126.0; // 기준점 경도(degree)\r\nvar OLAT = 38.0; // 기준점 위도(degree)\r\nvar XO = 43; // 기준점 X좌표(GRID)\r\nvar YO = 136; // 기1준점 Y좌표(GRID)\r\n\r\n// LCC DFS 좌표변환 ( code : \"toXY\"(위경도->좌표, v1:위도, v2:경도), \"toLL\"(좌표->위경도,v1:x, v2:y) )\r\nexport const dfs_xy_conv = (code, v1, v2) => {\r\n  // LCC DFS 좌표변환을 위한 기초 자료\r\n  console.log(\" dfs_xy_conv 함수진입\");\r\n  var DEGRAD = Math.PI / 180.0;\r\n  var RADDEG = 180.0 / Math.PI;\r\n\r\n  var re = RE / GRID;\r\n  var slat1 = SLAT1 * DEGRAD;\r\n  var slat2 = SLAT2 * DEGRAD;\r\n  var olon = OLON * DEGRAD;\r\n  var olat = OLAT * DEGRAD;\r\n\r\n  var sn =\r\n    Math.tan(Math.PI * 0.25 + slat2 * 0.5) /\r\n    Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\r\n  var sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sf = (Math.pow(sf, sn) * Math.cos(slat1)) / sn;\r\n  var ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\r\n  ro = (re * sf) / Math.pow(ro, sn);\r\n  var rs = {};\r\n  if (code == \"toXY\") {\r\n    rs[\"lat\"] = v1;\r\n    rs[\"lng\"] = v2;\r\n    var ra = Math.tan(Math.PI * 0.25 + v1 * DEGRAD * 0.5);\r\n    ra = (re * sf) / Math.pow(ra, sn);\r\n    var theta = v2 * DEGRAD - olon;\r\n    if (theta > Math.PI) theta -= 2.0 * Math.PI;\r\n    if (theta < -Math.PI) theta += 2.0 * Math.PI;\r\n    theta *= sn;\r\n    rs[\"x\"] = Math.floor(ra * Math.sin(theta) + XO + 0.5);\r\n    rs[\"y\"] = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\r\n  } else {\r\n    rs[\"x\"] = v1;\r\n    rs[\"y\"] = v2;\r\n    var xn = v1 - XO;\r\n    var yn = ro - v2 + YO;\r\n    ra = Math.sqrt(xn * xn + yn * yn);\r\n    if (sn < 0.0) return -ra;\r\n    var alat = Math.pow((re * sf) / ra, 1.0 / sn);\r\n    alat = 2.0 * Math.atan(alat) - Math.PI * 0.5;\r\n\r\n    if (Math.abs(xn) <= 0.0) {\r\n      theta = 0.0;\r\n    } else {\r\n      if (Math.abs(yn) <= 0.0) {\r\n        theta = Math.PI * 0.5;\r\n        if (xn < 0.0) return -theta;\r\n      } else theta = Math.atan2(xn, yn);\r\n    }\r\n    var alon = theta / sn + olon;\r\n    rs[\"lat\"] = alat * RADDEG;\r\n    rs[\"lng\"] = alon * RADDEG;\r\n  }\r\n  return rs;\r\n};\r\n","import axios from \"axios\";\r\nimport { dfs_xy_conv } from \"../utils/xy\";\r\n\r\n//const URL = \"http://apis.data.go.kr/B551182/\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0\r\nconst URL =\r\n  \"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\r\n//?serviceKey=인증키&numOfRows=10&pageNo=1\r\n//&base_date=20210628&base_time=0600&nx=55&ny=127\r\n\r\nconst apiKey =\r\n  \"G1zKspcc/ZudD4n/spBIwniRMfSdVJJtOxngQ2Zym02R3+gVNkCHR2yPbBgoFMrciEDEzYmvTvrFA2KS4xSIgw==\";\r\n\r\nconst navigatorFn = () => {\r\n  if (navigator.geolocation) {\r\n    function saveCoords(coordsObj) {\r\n      localStorage.setItem(\"COORDS\", JSON.stringify(coordsObj));\r\n      //localstorage의 key, value 값은 모두 string 타입으로 저장되기때문에 변환시켜준다.\r\n    }\r\n\r\n    function handleSuccess(position) {\r\n      const latitude = position.coords?.latitude;\r\n      const longitude = position.coords?.longitude;\r\n      const coordsObj = {\r\n        // 객체의 key,  value 값이 동일할 때에는 한번만 써줘도 된다.\r\n        latitude, // localStorage에 객체로 value에 저장하기위해서 객체에 넣어준다.\r\n        longitude,\r\n      };\r\n      saveCoords(coordsObj); // localStorage에 위치 저장\r\n    }\r\n\r\n    function handleError() {\r\n      console.log(\"cant not access to location\");\r\n    }\r\n\r\n    function askForCoords() {\r\n      navigator.geolocation.getCurrentPosition(handleSuccess, handleError);\r\n    }\r\n\r\n    let loadedCoords = localStorage.getItem(\"COORDS\");\r\n    console.log(\r\n      \"loadCoords 로컬저장소에서 저장된 위도경도 가져오기 : \",\r\n      JSON.stringify(loadedCoords)\r\n    );\r\n    loadedCoords = JSON.parse(loadedCoords);\r\n\r\n    if (loadedCoords === null) {\r\n      // localStorage에 좌표값이 저장되어있지않다면\r\n      askForCoords(); // 좌표값을 물어본다\r\n    }\r\n    const xyresult = dfs_xy_conv(\r\n      \"toXY\",\r\n      Number(loadedCoords?.latitude),\r\n      Number(loadedCoords?.longitude)\r\n    );\r\n    return xyresult;\r\n  } //if\r\n}; //navigatorFn\r\n\r\nexport const weatherapi = async ({ weatherDate, weatherTime }) => {\r\n  // const {  } = params;\r\n\r\n  var weatherapiresult = null;\r\n\r\n  const xyresult = navigatorFn();\r\n  console.log(\"weatherapi() 내 위경도를 xy변경후 : \", xyresult);\r\n  console.log(\"weatherapi() 내 weatherDate 확인 ->  \", weatherDate);\r\n  console.log(\"weatherapi() 내 weatherTime 확인 ->  : \", weatherTime);\r\n  try {\r\n    //로컬시\r\n    // const result = await axios.get(URL, {\r\n    //   params: {\r\n    //     serviceKey: apiKey,\r\n    //     numOfRows: 10,\r\n    //     pageNo: 1,\r\n    //     dataType: \"JSON\",\r\n    //     base_date: weatherDate,\r\n    //     base_time: weatherTime,\r\n    //     nx: xyresult.x,\r\n    //     ny: xyresult.y,\r\n    //   },\r\n    // });\r\n    //weatherapiresult = result?.data?.response?.body?.items?.item;\r\n    //console.log(\"openAPI 공공 api axios 결과 \", weatherapiresult);\r\n\r\n    const params = {\r\n      serviceKey: apiKey,\r\n      numOfRows: 10,\r\n      pageNo: 1,\r\n      dataType: \"JSON\",\r\n      base_date: weatherDate,\r\n      base_time: weatherTime,\r\n      nx: xyresult.x,\r\n      ny: xyresult.y,\r\n    };\r\n\r\n    console.log(\r\n      \"openApi.js axios.post(/api/main/openapi) 보내기전 요청본문 내용확인 -> \",\r\n      params\r\n    );\r\n\r\n    await axios\r\n      .post(\"/api/main/openapi\", { url: URL, params })\r\n      .then((result) => {\r\n        weatherapiresult = result.data.result;\r\n        console.log(\r\n          \"openApi.js axios.post(/api/main/openapi) 결과 result.data.result-> \",\r\n          weatherapiresult\r\n        );\r\n      });\r\n    console.log(\r\n      \"openApi.js axios.post(/api/main/openapi) 결과 result.data.result-> \",\r\n      weatherapiresult\r\n    );\r\n\r\n    return weatherapiresult;\r\n  } catch (e) {\r\n    console.log(\"openApi.js axios.post(/api/main/openapi) 에러발생\", e);\r\n  }\r\n}; //weatherapi\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { getTodayManagement } from \"../../api/mainApi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport ListGroupItem from \"react-bootstrap/esm/ListGroupItem\";\r\n\r\n// const switchFn = (category, obsrValue) => {\r\n//   let result = \"\";\r\n//   //  console.log(\"T1H 진입\");\r\n\r\n//   switch (category) {\r\n//     case \"T1H\":\r\n//       result += `기온 : ${obsrValue}`;\r\n//       break;\r\n//     case \"PTY\":\r\n//       result += `강수 : ${obsrValue}`;\r\n//       break;\r\n//     case \"REH\":\r\n//       result += `습도 : ${obsrValue}`;\r\n//       break;\r\n//     case \"RN1\":\r\n//       result += `강수량 : ${obsrValue}`;\r\n//       break;\r\n//     case \"WSD\":\r\n//       result += `풍속 : ${obsrValue}`;\r\n//       break;\r\n//     default:\r\n//       break;\r\n//   }\r\n//   //console.log(\"switchFn 결과 -> \", result);\r\n//   return result;\r\n// }; //switchFn\r\n\r\nconst switchFn = (obsrValue) => {\r\n  switch (obsrValue) {\r\n    case \"1\":\r\n      return \"비\";\r\n      break;\r\n    case \"2\":\r\n      return \"비/눈\";\r\n      break;\r\n    case \"3\":\r\n      return \"눈\";\r\n      break;\r\n    case \"4\":\r\n      return \"빗방울\";\r\n      break;\r\n    case \"5\":\r\n      return \"빗방울&눈날림\";\r\n      break;\r\n    case \"6\":\r\n      return \"눈날림\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst chooseReturn = (number) => {\r\n  if (!number) {\r\n    return;\r\n  }\r\n  switch (number) {\r\n    case \"1\":\r\n      return \"달리기\";\r\n    case \"2\":\r\n      return \"웨이트\";\r\n    case \"3\":\r\n      return `구기종목or복싱`;\r\n    case \"4\":\r\n      return \"등산\";\r\n    case \"5\":\r\n      return \"필라테스요가\";\r\n    case \"6\":\r\n      return \"그외\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MainComponent = () => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  console.log(isLogin);\r\n\r\n  const { exceptionHandle } = useCustomLogin();\r\n  console.log(loginState); //user, accessToken 2개 들어있다 이렇게 슬라이스에보관\r\n\r\n  //공공api\r\n  const [weatherVisible, setWeatherVisible] = useState(false);\r\n  const [weatherResult, setWeatherResult] = useState([]);\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [weatherTime, setWeatherTime] = useState(\"\");\r\n  const [weatherDate, setWeatherDate] = useState(\"\");\r\n  const [weatherStandard, setWeatherStandard] = useState(\"\");\r\n  const [selectMonth, setSelectMonth] = useState(3);\r\n  const [selectYear, setSelectYear] = useState(2025);\r\n  const [dateArray, setDateArray] = useState([]);\r\n  const [diaryResultArray, setDiaryResultArray] = useState([]);\r\n  const [exerciseResultArray, setExerciseResultArray] = useState([]);\r\n  const [findDate, setFindDate] = useState(\"\");\r\n  const [todayDate, setTodayDate] = useState(\"\");\r\n  //const [selectDate, setSelectDate] = useState(\"\");\r\n  //diet\r\n  //const [dietId, setDietId] = useState(\"\");\r\n  const { moveToLogin } = useCustomMove();\r\n  const [dietMorning, setDietMorning] = useState([]);\r\n  const [dietLunch, setDietLunch] = useState([]);\r\n  const [dietEvening, setDietEvening] = useState([]);\r\n  const [dietSnack, setDietSnack] = useState([]);\r\n  //money\r\n  const [moneyIncome, setMoneyIncome] = useState([]);\r\n  const [moneyExpense, setMoneyExpense] = useState([]);\r\n  //const [moneyId, setMoneyId] = useState(\"\");\r\n  const [moneySum, setMoneySum] = useState({});\r\n  //moneySum  sumincome sumexpense monthsumincome monthsumexpense\r\n\r\n  const [alertOpenApi, setAlertOpenApi] = useState(false);\r\n\r\n  //  base_date: \"20250310\",\r\n  // base_time: \"2200\",\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(\"MainComponent.js useLayoutEffect 기존데이터 초기화 진입\");\r\n    if (!isLogin) {\r\n      alert(\"로그인이 필요합니다!\");\r\n      return moveToLogin();\r\n    }\r\n  }, []);\r\n  useLayoutEffect(() => {\r\n    console.log(\r\n      \"MainComponent.js  useLayoutEffect 날짜구해서 state 데이터넣기 진입\"\r\n    );\r\n\r\n    let today = new Date();\r\n    // 현재 날짜를 가져옵니다.\r\n\r\n    //setTodayDate(() => today.getDate());\r\n\r\n    let hour =\r\n      today.getHours() < 10 ? \"0\" + today.getHours() : today.getHours();\r\n    let minutes =\r\n      today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\r\n    minutes = minutes < 30 ? \"00\" : \"30\";\r\n\r\n    setWeatherTime(() => hour + minutes); //위치기반한 날씨위한 시간\r\n    setWeatherStandard(() => `${hour}시 ${minutes}분`); //위치기반한 날씨위한 날짜\r\n    setCurrentDate(\r\n      //화면에 보일 오늘날짜\r\n      () =>\r\n        `${today.getFullYear()}년 ${\r\n          today.getMonth() + 1\r\n        }월 ${today.getDate()}일`\r\n    );\r\n\r\n    let monthfinal =\r\n      today.getMonth() + 1 < 10\r\n        ? \"0\" + (today.getMonth() + 1) // `\"0\"${today.getMonth() + 1}`\r\n        : today.getMonth() + 1;\r\n    let datefinal =\r\n      today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\r\n    setWeatherDate(() => `${today.getFullYear()}${monthfinal}${datefinal}`);\r\n    setFindDate(() => `${today.getFullYear()}-${monthfinal}-${datefinal}`);\r\n    setSelectMonth(today.getMonth() + 1);\r\n    setSelectYear(today.getFullYear());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const today = new Date();\r\n\r\n    setTodayDate(() => today.getDate());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"MainComponent.js useEffect() 위치기반 날씨 axios 요청 진입\");\r\n\r\n    const weatherapiEI = async () => {\r\n      await weatherapi({ weatherDate, weatherTime }).then((result) => {\r\n        console.log(\r\n          \"MainComponent.js useEffect() 위치기반 날씨 axios 요청 후 결과 -> \",\r\n          result\r\n        );\r\n\r\n        if (Array.isArray(result) && result.length !== 0) {\r\n          let newObj = [];\r\n\r\n          result?.forEach((r) => {\r\n            let newO = {};\r\n            if (r.category === \"T1H\") {\r\n              newO[\"category\"] = \"온도\";\r\n              newO[\"obsrValue\"] = r.obsrValue + \"(도)\";\r\n            }\r\n            if (r.category === \"REH\") {\r\n              newO[\"category\"] = \"습도\";\r\n              newO[\"obsrValue\"] = r.obsrValue + \"(%)\";\r\n            }\r\n            if (r.category === \"WSD\") {\r\n              newO[\"category\"] = \"풍속\";\r\n              newO[\"obsrValue\"] = r.obsrValue + \"(m/s)\";\r\n            }\r\n            if (r.category === \"PTY\" && r.obsrValue > 1) {\r\n              newO[\"category\"] = \"비/눈\";\r\n              newO[\"obsrValue\"] = switchFn(r.obsrValue);\r\n            }\r\n            if (r.category === \"RN1\" && newObj[\"PTY\"]) {\r\n              newO[\"category\"] = \"강수량\";\r\n              newO[\"obsrValue\"] = r.obsrValue + \"(시간당mm)\";\r\n            }\r\n            console.log(\"newO 객체 => \", newO);\r\n            if (Object.keys(newO).length !== 0) {\r\n              newObj.push(newO);\r\n            }\r\n          });\r\n\r\n          setWeatherResult(() => newObj);\r\n          setWeatherVisible(true);\r\n\r\n          console.log(\r\n            \"weatherapiEI setState 후 출력 weatherResult => \",\r\n            weatherResult\r\n          );\r\n        } //공공api데이터 존재할경우진입\r\n        else {\r\n          //결과 undefined\r\n          setAlertOpenApi(true);\r\n        }\r\n      }); //then\r\n    }; //weatherapiEI\r\n\r\n    if (weatherDate !== \"\" && weatherTime !== \"\") {\r\n      weatherapiEI();\r\n    }\r\n  }, [weatherDate]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useLayoutEffect() 서버axios요청으로 데이터 가져오기진입=>\");\r\n\r\n    const getTodayManagementEI = async () => {\r\n      await getTodayManagement(findDate)\r\n        .then((result) => {\r\n          console.log(\"useEffect()진입 axios 결과 -> \", result);\r\n\r\n          if (result.message === \"\") {\r\n            console.log(\"서버에서 res.locals 담긴 jwtemail 없어서 그냥 보임\");\r\n          } else {\r\n            //if (result) {\r\n            console.log(\"useEffect()진입 axios 결과 존재할경우 진입\");\r\n\r\n            setDiaryResultArray(() => result.diary);\r\n\r\n            if (result.diet.length !== 0) {\r\n              console.log(\"result.diet 넣기 진입\");\r\n\r\n              //setDietId(result.diet[0]?.Dietdetails[0]?.DietId);\r\n\r\n              //아래로 수정\r\n              //setDietId(result.diet[0].id);\r\n              result.diet?.forEach((v) => {\r\n                console.log(\r\n                  \"result.diet 넣기 진입 result.diet forEach 진입 => \",\r\n                  v\r\n                );\r\n\r\n                v.Dietdetails.forEach((d) => {\r\n                  console.log(\r\n                    \"result.diet 넣기 진입 result.diet.Dietdetails forEach 진입 => \",\r\n                    d\r\n                  );\r\n\r\n                  if (d.choose === \"1\") {\r\n                    console.log(\r\n                      \"result.diet 넣기 진입 result.diet.Dietdetails choose 1 진입\"\r\n                    );\r\n\r\n                    setDietMorning((prev) => [...prev, d]);\r\n                  } else if (d.choose === \"2\") {\r\n                    console.log(\r\n                      \"result.diet 넣기 진입 result.diet.Dietdetails choose 2 진입\"\r\n                    );\r\n\r\n                    setDietLunch((prev) => [...prev, d]);\r\n                  } else if (d.choose === \"3\") {\r\n                    console.log(\r\n                      \"result.diet 넣기 진입 result.diet.Dietdetails choose 3 진입\"\r\n                    );\r\n\r\n                    setDietEvening((prev) => [...prev, d]);\r\n                  } else {\r\n                    console.log(\r\n                      \"result.diet 넣기 진입 result.diet.Dietdetails choose 4 진입\"\r\n                    );\r\n\r\n                    setDietSnack((prev) => [...prev, d]);\r\n                  }\r\n                });\r\n              });\r\n            }\r\n\r\n            console.log(\"diet dietMorning-> \", dietMorning);\r\n            console.log(\"diet dietLunch-> \", dietLunch);\r\n            console.log(\"diet dietEvening-> \", dietEvening);\r\n            console.log(\"diet dietSnack-> \", dietSnack);\r\n\r\n            if (result.money.length !== 0) {\r\n              console.log(\"money 넣기 진입\");\r\n\r\n              result.money?.forEach((v) => {\r\n                console.log(\r\n                  \"result.money 넣기 진입 result.money forEach 진입 => \",\r\n                  v\r\n                );\r\n\r\n                v.Moneydetails.forEach((d) => {\r\n                  console.log(\r\n                    \"result.money 넣기 진입 result.money.Moneydetails forEach 진입 => \",\r\n                    d\r\n                  );\r\n\r\n                  if (d.choose === \"1\") {\r\n                    console.log(\r\n                      \"result.money 넣기 진입 result.money.Moneydetails choose 1 진입\"\r\n                    );\r\n                    d.amount = Number(d.amount).toLocaleString(\"ko-KR\");\r\n                    setMoneyIncome((prev) => [...prev, d]);\r\n                  } else if (d.choose === \"2\") {\r\n                    console.log(\r\n                      \"result.money 넣기 진입 result.money.Moneydetails choose 2 진입\"\r\n                    );\r\n                    d.amount = Number(d.amount).toLocaleString(\"ko-KR\");\r\n\r\n                    setMoneyExpense((prev) => [...prev, d]);\r\n                  }\r\n                });\r\n              });\r\n\r\n              console.log(\"money moneyIncome-> \", moneyIncome);\r\n              console.log(\"money moneyExpense-> \", moneyExpense);\r\n\r\n              let sum = {};\r\n\r\n              if (result.money.length !== 0 && result.sum.length !== 0) {\r\n                console.log(\"sum 넣기 진입\");\r\n\r\n                sum[\"sumincome\"] = Number(\r\n                  result.money[0].income\r\n                ).toLocaleString(\"ko-KR\");\r\n                sum[\"sumexpense\"] = Number(\r\n                  result.money[0].expense\r\n                ).toLocaleString(\"ko-KR\");\r\n                sum[\"monthsumincome\"] = Number(\r\n                  result.sum[0].sumincome\r\n                ).toLocaleString(\"ko-KR\");\r\n                sum[\"monthsumexpense\"] = Number(\r\n                  result.sum[0].sumexpense\r\n                ).toLocaleString(\"ko-KR\");\r\n                setMoneySum(() => sum);\r\n              }\r\n              //sum  sumincome sumexpense monthsumincome monthsumexpense\r\n              //setMoneyId(result.money[0]?.Moneydetails[0]?.MoneyId);\r\n            } //money배열존재할 경우\r\n\r\n            if (result.exercise.length !== 0) {\r\n              console.log(\"exercise 넣기 진입\");\r\n\r\n              result.exercise.forEach((v) => {\r\n                let objectexercise = {};\r\n                objectexercise[\"content\"] = v.content;\r\n                objectexercise[\"choose\"] = v.choose;\r\n                objectexercise[\"whenchoose\"] = v.whenchoose;\r\n                objectexercise[\"minute\"] = v.minute;\r\n                setExerciseResultArray((prev) => [...prev, objectexercise]);\r\n              });\r\n            } //if exericse state만들기\r\n          }\r\n        }) //then\r\n        .catch((err) => {\r\n          console.log(\"useEffect()진입 axios 에러-> \", err);\r\n          //          exceptionHandle(err);\r\n        });\r\n    }; //getTodayManagementEI()\r\n\r\n    if (findDate !== \"\") {\r\n      getTodayManagementEI();\r\n    }\r\n\r\n    return () => {\r\n      setDietEvening([]);\r\n      setDietMorning([]);\r\n      setDietSnack([]);\r\n      setDietLunch([]);\r\n      setMoneyExpense([]);\r\n      setMoneyIncome([]);\r\n      setExerciseResultArray([]);\r\n      setDiaryResultArray([]);\r\n      setExerciseResultArray([]);\r\n    };\r\n  }, [findDate]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect()진입 일자버튼 출력\");\r\n\r\n    const getDate = async () => {\r\n      let getDateResult = [];\r\n      let firstDay = new Date(selectYear, selectMonth - 1, 1).getDate();\r\n      let lastDay = new Date(selectYear, selectMonth, 0).getDate();\r\n      console.log(\"getDate() firstDay => \", firstDay);\r\n      console.log(\"getDate() lastDay=> \", lastDay);\r\n\r\n      for (let i = firstDay; i <= lastDay; i++) {\r\n        getDateResult.push(i);\r\n      }\r\n      setDateArray(() => getDateResult);\r\n    };\r\n    getDate(); //해당 월에해당하는 일자들 배열로 setState()넣기\r\n\r\n    return () => {\r\n      setDateArray([]);\r\n    };\r\n  }, []);\r\n\r\n  const handleSelectYear = (e) => {\r\n    setSelectYear(() => Number(e.target.value));\r\n\r\n    const getDate = async () => {\r\n      let getDateResult = [];\r\n      let firstDay = new Date(selectYear, selectMonth - 1, 1).getDate();\r\n      let lastDay = new Date(selectYear, selectMonth, 0).getDate();\r\n      console.log(\"getDate() firstDay => \", firstDay);\r\n      console.log(\"getDate() lastDay=> \", lastDay);\r\n\r\n      for (let i = firstDay; i <= lastDay; i++) {\r\n        getDateResult.push(i);\r\n      }\r\n      setDateArray(() => getDateResult);\r\n    };\r\n    getDate(); //해당 월에해당하는 일자들 배열로 setState()넣기\r\n  };\r\n\r\n  const handleSelectMonth = (e) => {\r\n    setSelectMonth(() => Number(e.target.value));\r\n\r\n    const getDate = async () => {\r\n      let getDateResult = [];\r\n      let firstDay = new Date(selectYear, selectMonth - 1, 1).getDate();\r\n      let lastDay = new Date(selectYear, selectMonth, 0).getDate();\r\n      console.log(\"getDate() firstDay => \", firstDay);\r\n      console.log(\"getDate() lastDay=> \", lastDay);\r\n\r\n      for (let i = firstDay; i <= lastDay; i++) {\r\n        getDateResult.push(i);\r\n      }\r\n      setDateArray(() => getDateResult);\r\n    };\r\n    getDate(); //해당 월에해당하는 일자들 배열로 setState()넣기\r\n  };\r\n\r\n  //달력일버튼나열\r\n  const handleDateManagement = (d) => {\r\n    console.log(\"handleDateManagement()진입 선택한 일자 -> \", d);\r\n    setTodayDate(() => d);\r\n    let selectMonthAdd = selectMonth < 10 ? \"0\" + selectMonth : selectMonth;\r\n    let dAdd = d < 10 ? \"0\" + d : d;\r\n\r\n    setFindDate(() => `${selectYear}-${selectMonthAdd}-${dAdd}`);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"useEffect()진입 findDate 변경으로 axios 호출위해\");\r\n\r\n  //   const getTodayManagementUE = async () => {\r\n  //     await getTodayManagement(findDate)\r\n  //       .then((result) => {\r\n  //         console.log(\"useEffect()진입 axios 결과 -> \", result);\r\n\r\n  //         //다어이리\r\n  //         setDiaryResultArray(() => result.diary);\r\n\r\n  //         //식단\r\n  //         if (result.diet.length !== 0) {\r\n  //           //setDietId(result.diet[0]?.Dietdetails[0]?.DietId);\r\n\r\n  //           //아래수정\r\n  //           //setDietId(result.diet[0].id);\r\n\r\n  //           result.diet.forEach((v) => {\r\n  //             v.Dietdetails.forEach((d) => {\r\n  //               if (d.choose === \"1\") {\r\n  //                 setDietMorning((prev) => [...prev, d]);\r\n  //               } else if (d.choose === \"2\") {\r\n  //                 setDietLunch((prev) => [...prev, d]);\r\n  //               } else if (d.choose === \"3\") {\r\n  //                 setDietEvening((prev) => [...prev, d]);\r\n  //               } else {\r\n  //                 setDietSnack((prev) => [...prev, d]);\r\n  //               }\r\n  //             });\r\n  //           });\r\n  //           //setDietId(result.diet[0]?.Dietdetails[0]?.DietId);\r\n  //         }\r\n  //         //가계부\r\n  //         if (result.money.length !== 0) {\r\n  //           result.money?.forEach((v) => {\r\n  //             v.Moneydetails.forEach((d) => {\r\n  //               if (d.choose === \"1\") {\r\n  //                 d.amount = Number(d.amount).toLocaleString(\"ko-KR\");\r\n  //                 setMoneyIncome((prev) => [...prev, d]);\r\n  //               } else if (d.choose === \"2\") {\r\n  //                 d.amount = Number(d.amount).toLocaleString(\"ko-KR\");\r\n\r\n  //                 setMoneyExpense((prev) => [...prev, d]);\r\n  //               }\r\n  //             });\r\n  //           });\r\n\r\n  //           let sum = {};\r\n\r\n  //           if (result.money.length !== 0 && result.sum.length !== 0) {\r\n  //             sum[\"sumincome\"] = Number(result.money[0].income).toLocaleString(\r\n  //               \"ko-KR\"\r\n  //             );\r\n  //             sum[\"sumexpense\"] = Number(\r\n  //               result.money[0].expense\r\n  //             ).toLocaleString(\"ko-KR\");\r\n  //             sum[\"monthsumincome\"] = Number(\r\n  //               result.sum[0].sumincome\r\n  //             ).toLocaleString(\"ko-KR\");\r\n  //             sum[\"monthsumexpense\"] = Number(\r\n  //               result.sum[0].sumexpense\r\n  //             ).toLocaleString(\"ko-KR\");\r\n  //             setMoneySum(() => sum);\r\n  //           }\r\n  //           //sum  sumincome sumexpense monthsumincome monthsumexpense\r\n  //           //setMoneyId(result.money[0]?.Moneydetails[0]?.MoneyId);\r\n  //         }\r\n  //         //운동\r\n  //         if (result.exercise.length !== 0) {\r\n  //           result.exercise.forEach((v) => {\r\n  //             let objectexercise = {};\r\n  //             objectexercise[\"content\"] = v.content;\r\n  //             objectexercise[\"choose\"] = v.choose;\r\n  //             objectexercise[\"whenchoose\"] = v.whenchoose;\r\n  //             objectexercise[\"minute\"] = v.minute;\r\n  //             setExerciseResultArray((prev) => [...prev, objectexercise]);\r\n  //           });\r\n  //         } //if exericse state만들기\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(\"useEffect()진입 axios 에러-> \", err);\r\n  //       });\r\n  //   };\r\n\r\n  //   if (findDate !== \"\") {\r\n  //     getTodayManagementUE();\r\n  //   }\r\n  // }, [findDate]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <br />\r\n        <br />\r\n        {isLogin && loginState ? (\r\n          <>\r\n            <span style={{ fontSize: \"25px\" }}>\r\n              {\" \"}\r\n              {loginState} 님의 하루관리\r\n            </span>\r\n            <br />\r\n            <br />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <span style={{ fontSize: \"25px\" }}>하루관리</span>\r\n            <br />\r\n            <br />\r\n          </>\r\n        )}\r\n        <br />\r\n        &nbsp;&nbsp;{\" \"}\r\n        <Image\r\n          src=\"/img/calendar.png\"\r\n          style={{ width: \"30px\", height: \"30px\" }}\r\n          rounded\r\n        />\r\n        &nbsp;오늘은 &nbsp;\r\n        {currentDate} &nbsp;&nbsp;\r\n        {alertOpenApi && (\r\n          <span style={{ color: \"crimson\", fontStyle: \"italic\" }}>\r\n            *오늘의 날씨정보를 보시려면 팝업창의 위치확인을 허용해주세요!{\" \"}\r\n          </span>\r\n        )}\r\n        {weatherVisible &&\r\n          weatherResult.length !== 0 &&\r\n          weatherResult?.map((w, i) => (\r\n            <>\r\n              {w.category === \"비/눈\" &&\r\n                w.obsrValue === \"7\" &&\r\n                w.obsrValue === \"3\" && (\r\n                  <span key={`${i}_1`}>\r\n                    <Image\r\n                      src=\"/img/cloudsnow.png\"\r\n                      style={{ width: \"30px\", height: \"30px\" }}\r\n                      rounded\r\n                    />\r\n                    {w.category} {w.obsrValue}\r\n                  </span>\r\n                )}\r\n              {w.category === \"비/눈\" &&\r\n                w.obsrValue === \"1\" &&\r\n                w.obsrValue === \"2\" &&\r\n                w.obsrValue === \"5\" &&\r\n                w.obsrValue === \"6\" && (\r\n                  <span key={`${i}_2`}>\r\n                    <Image\r\n                      src=\"/img/rain.png\"\r\n                      style={{ width: \"30px\", height: \"30px\" }}\r\n                      rounded\r\n                    />\r\n                    {w.category} {w.obsrValue}&nbsp;&nbsp;\r\n                  </span>\r\n                )}\r\n              {!w.category === \"비/눈\" && (\r\n                <span key={`${i}_3`}>\r\n                  <Image\r\n                    src=\"/img/sun.png\"\r\n                    style={{ width: \"30px\", height: \"30px\" }}\r\n                    rounded\r\n                  />\r\n                  {w.category} {w.obsrValue}&nbsp;&nbsp;\r\n                </span>\r\n              )}\r\n              {w.category === \"온도\" && (\r\n                <span key={`${i}_4`}>\r\n                  <Image\r\n                    src=\"/img/ther.png\"\r\n                    style={{ width: \"30px\", height: \"30px\" }}\r\n                    rounded\r\n                  />\r\n                  {w.category} {w.obsrValue}&nbsp;&nbsp;\r\n                </span>\r\n              )}{\" \"}\r\n              {w.category === \"습도\" && (\r\n                <span key={`${i}_5`}>\r\n                  <Image\r\n                    src=\"/img/humidity.png\"\r\n                    style={{ width: \"30px\", height: \"30px\" }}\r\n                    rounded\r\n                  />\r\n                  {w.category} {w.obsrValue} &nbsp;&nbsp;\r\n                </span>\r\n              )}{\" \"}\r\n              {w.category === \"풍속\" && (\r\n                <span key={`${i}_6`}>\r\n                  <Image\r\n                    src=\"/img/wind.png\"\r\n                    style={{ width: \"30px\", height: \"30px\" }}\r\n                    rounded\r\n                  />\r\n                  &nbsp;\r\n                  {w.category} {w.obsrValue}&nbsp;&nbsp;\r\n                </span>\r\n              )}\r\n            </>\r\n          ))}\r\n        {weatherVisible && `(${weatherStandard} 기준)`}\r\n      </Container>\r\n\r\n      <hr />\r\n      <br />\r\n\r\n      <Container>\r\n        <Form.Select\r\n          style={{ width: \"200px\", display: \"inline-block\" }}\r\n          value={selectYear}\r\n          onChange={(e) => handleSelectYear(e)}\r\n        >\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n        </Form.Select>\r\n        <Form.Select\r\n          style={{ width: \"200px\", display: \"inline-block\" }}\r\n          value={selectMonth}\r\n          onChange={(e) => handleSelectMonth(e)}\r\n        >\r\n          <option value={\"1\"}>1</option>\r\n          <option value={\"2\"}>2</option>\r\n          <option value={\"3\"}>3</option>\r\n          <option value={\"4\"}>4</option>\r\n          <option value={\"5\"}>5</option>\r\n          <option value={\"6\"}>6</option>\r\n          <option value={\"7\"}>7</option>\r\n          <option value={\"8\"}>8</option>\r\n          <option value={\"9\"}>9</option>\r\n          <option value={\"10\"}>10</option>\r\n          <option value={\"11\"}>11</option>\r\n          <option value={\"12\"}>12</option>\r\n        </Form.Select>\r\n        &nbsp;&nbsp;\r\n        <span style={{ color: \"red\", fontStyle: \"italic\" }}>\r\n          *날짜클릭시 작성한 하루관리를 한눈에 볼수있습니다!\r\n        </span>\r\n        <br />\r\n        <br />\r\n        {Array.isArray(dateArray) &&\r\n          dateArray.length !== 0 &&\r\n          dateArray.map((d, i) =>\r\n            d === todayDate ? (\r\n              <span key={i} style={{ fontSize: \"20px\" }}>\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"secondary\"\r\n                  onClick={() => handleDateManagement(d)}\r\n                >\r\n                  {d}\r\n                </Button>\r\n                &nbsp;\r\n              </span>\r\n            ) : (\r\n              <span key={`${i}_1`} style={{ fontSize: \"20px\" }}>\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"outline-secondary\"\r\n                  onClick={() => handleDateManagement(d)}\r\n                >\r\n                  {d}\r\n                </Button>\r\n                &nbsp;\r\n              </span>\r\n            )\r\n          )}\r\n        <br />\r\n        <br />\r\n      </Container>\r\n\r\n      <Container style={{ textAlign: \"center\" }}>\r\n        {Array.isArray(diaryResultArray) && diaryResultArray.length === 0 ? (\r\n          <>\r\n            <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n              <Card.Body>\r\n                <Card.Title>사진다이어리</Card.Title>\r\n              </Card.Body>\r\n              <ListGroup className=\"list-group-flush\">\r\n                <ListGroup.Item>\r\n                  오늘 다이어리를 아직 작성하지 않았어요! <br />\r\n                  <Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to={`../diary/create/${findDate}`}\r\n                  >\r\n                    <Button size=\"sm\" variant=\"outline-primary\">\r\n                      다이어리작성{\" \"}\r\n                    </Button>\r\n                  </Link>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </>\r\n        ) : (\r\n          diaryResultArray.length !== 0 &&\r\n          diaryResultArray.map((d, i) => (\r\n            <Card style={{ width: \"18rem\", display: \"inline-block\" }} key={i}>\r\n              {d.picture ? (\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  //src={`http://localhost:8001/img/${d.picture}`}\r\n                  src={`https://picdiary-bucket.s3.ap-northeast-2.amazonaws.com/${d.path}`}\r\n                  style={{\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                    width: \"200px\",\r\n                    height: \"200px\",\r\n                    objectFit: \"contain\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <React.Fragment key={i}>업로드하지 않음😅</React.Fragment>\r\n              )}\r\n\r\n              <Card.Body>\r\n                <Card.Title>사진다이어리</Card.Title>\r\n                {/* <Card.Text>내용</Card.Text> */}\r\n              </Card.Body>\r\n              <ListGroup className=\"list-group-flush\">\r\n                <ListGroup.Item>{d.content}</ListGroup.Item>\r\n              </ListGroup>\r\n              <Card.Body>\r\n                <Card.Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  href={`../diary/modify/${d.id}`}\r\n                >\r\n                  <Button variant=\"outline-warning\" size=\"sm\">\r\n                    수정/삭제\r\n                  </Button>\r\n                </Card.Link>\r\n\r\n                <Card.Link\r\n                  href={\"../diary/list\"}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <Button variant=\"outline-primary\" size=\"sm\">\r\n                    다이어리달력이동\r\n                  </Button>\r\n                </Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          ))\r\n        )}\r\n        &nbsp; &nbsp;\r\n        {Array.isArray(dietMorning) &&\r\n        dietMorning.length === 0 &&\r\n        Array.isArray(dietEvening) &&\r\n        dietEvening.length === 0 &&\r\n        Array.isArray(dietLunch) &&\r\n        dietLunch.length === 0 &&\r\n        Array.isArray(dietSnack) &&\r\n        dietSnack.length === 0 ? (\r\n          <>\r\n            <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n              <Card.Body>\r\n                <Card.Title>식단</Card.Title>\r\n              </Card.Body>{\" \"}\r\n              <ListGroup className=\"list-group-flush\">\r\n                <ListGroup.Item>\r\n                  오늘 식단을 아직 작성하지 않았어요! <br />\r\n                  <Button size=\"sm\" variant=\"outline-primary\">\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      to={`../diet/create/${findDate}`}\r\n                    >\r\n                      식단작성\r\n                    </Link>\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </>\r\n        ) : (\r\n          <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <Card.Body>\r\n              <Card.Title>식단</Card.Title>\r\n              <Card.Text>(g/ml생략)</Card.Text>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                아침\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {dietMorning.length !== 0 ? (\r\n                  dietMorning.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content}\r\n                      {d.quantity}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  )) //map\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../diet/create/${findDate}`}\r\n                    >\r\n                      <Button variant=\"outline-success\" size=\"sm\">\r\n                        아침작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                점심\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {dietLunch.length !== 0 ? (\r\n                  dietLunch.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content}\r\n                      {d.quantity}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../diet/create/${findDate}`}\r\n                    >\r\n                      <Button variant=\"outline-success\" size=\"sm\">\r\n                        점심작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                저녁\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {dietEvening.length !== 0 ? (\r\n                  dietEvening.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content} {d.quantity}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../diet/create/${findDate}`}\r\n                    >\r\n                      <Button variant=\"outline-success\" size=\"sm\">\r\n                        저녁작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                간식\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {dietSnack.length !== 0 ? (\r\n                  dietSnack.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content} {d.quantity}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../diet/create/${findDate}`}\r\n                    >\r\n                      <Button variant=\"outline-success\" size=\"sm\">\r\n                        간식작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n            <Card.Body>\r\n              <Card.Link\r\n                style={{ textDecoration: \"none\" }}\r\n                href={`../diet/readall/${findDate}`}\r\n              >\r\n                <Button variant=\"outline-warning\" size=\"sm\">\r\n                  수정/삭제\r\n                </Button>\r\n              </Card.Link>\r\n              <Card.Link\r\n                style={{ textDecoration: \"none\" }}\r\n                href={`../diet/list`}\r\n              >\r\n                <Button variant=\"outline-primary\" size=\"sm\">\r\n                  식단달력이동\r\n                </Button>\r\n              </Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n        &nbsp; &nbsp;\r\n        {Array.isArray(moneyIncome) &&\r\n        moneyIncome.length === 0 &&\r\n        Array.isArray(moneyExpense) &&\r\n        moneyExpense.length === 0 ? (\r\n          <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <Card.Body>\r\n              <Card.Title>가계부</Card.Title>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroup.Item>\r\n                오늘 가계부를 아직 작성하지 않았어요! <br />\r\n                <Button size=\"sm\" variant=\"outline-primary\">\r\n                  <Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to={`../money/create/${findDate}`}\r\n                  >\r\n                    가계부작성\r\n                  </Link>{\" \"}\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        ) : (\r\n          <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <Card.Body>\r\n              <Card.Title>가계부</Card.Title>\r\n              <Card.Text>(단위:원)</Card.Text>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              {moneyIncome.length !== 0 ? (\r\n                <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                  {todayDate}일 &nbsp;총수입&nbsp;\r\n                  {moneySum.sumincome}\r\n                  <br />\r\n                  <Card.Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    href={`../money/modify/${findDate}/1`}\r\n                  >\r\n                    <Button variant=\"outline-warning\" size=\"sm\">\r\n                      수입수정/삭제\r\n                    </Button>\r\n                  </Card.Link>\r\n                </ListGroup.Item>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {moneyIncome.length !== 0 ? (\r\n                  moneyIncome.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content}&nbsp;\r\n                      {d.amount}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../money/create?choose=1`}\r\n                    >\r\n                      <Button\r\n                        variant=\"outline-success\"\r\n                        size=\"sm\"\r\n                        style={{ textAlign: \"left\" }}\r\n                      >\r\n                        수입작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              {moneyExpense.length !== 0 ? (\r\n                <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                  {todayDate}일 &nbsp;총지출&nbsp;\r\n                  {moneySum.sumexpense}\r\n                  <br />\r\n                  <Card.Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    href={`../money/modify/${findDate}/2`}\r\n                  >\r\n                    <Button variant=\"outline-warning\" size=\"sm\">\r\n                      지출수정/삭제\r\n                    </Button>\r\n                  </Card.Link>\r\n                </ListGroup.Item>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {moneyExpense.length !== 0 ? (\r\n                  moneyExpense.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content}&nbsp;\r\n                      {d.amount}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../money/create?choose=2`}\r\n                    >\r\n                      <Button\r\n                        variant=\"outline-success\"\r\n                        size=\"sm\"\r\n                        style={{ textAlign: \"left\" }}\r\n                      >\r\n                        지출작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                {selectMonth}월수입합계&nbsp;\r\n                {moneySum.monthsumincome}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                {selectMonth}월지출합계&nbsp;\r\n                {moneySum.monthsumexpense}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n            <Card.Body>\r\n              <Card.Link\r\n                style={{ textDecoration: \"none\" }}\r\n                href={`../money/list`}\r\n              >\r\n                <Button variant=\"outline-primary\" size=\"sm\">\r\n                  가계부달력이동\r\n                </Button>\r\n              </Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n        &nbsp; &nbsp;\r\n        {Array.isArray(exerciseResultArray) &&\r\n        exerciseResultArray.length !== 0 ? (\r\n          <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <Card.Body>\r\n              <Card.Title>운동</Card.Title>\r\n              {/* <Card.Text>운동</Card.Text> */}\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              {exerciseResultArray.map((e, i) =>\r\n                e.whenchoose === \"1\" ? (\r\n                  <React.Fragment key={i}>\r\n                    <ListGroup.Item>아침</ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      {chooseReturn(e.choose)}/{e.minute}(분)\r\n                      <br />\r\n                      {e.content}\r\n                    </ListGroup.Item>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <></>\r\n                )\r\n              )}\r\n              {exerciseResultArray.map((e, i) =>\r\n                e.whenchoose === \"2\" ? (\r\n                  <React.Fragment key={i}>\r\n                    <ListGroup.Item>점심</ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      {chooseReturn(e.choose)}/{e.minute}(분)\r\n                      <br />\r\n                      {e.content}\r\n                    </ListGroup.Item>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <></>\r\n                )\r\n              )}\r\n              {exerciseResultArray.map((e, i) =>\r\n                e.whenchoose === \"3\" ? (\r\n                  <React.Fragment key={i}>\r\n                    <ListGroup.Item>저녁</ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      {chooseReturn(e.choose)}/{e.minute}(분)\r\n                      <br />\r\n                      {e.content}\r\n                    </ListGroup.Item>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <></>\r\n                )\r\n              )}\r\n            </ListGroup>\r\n            <Card.Body>\r\n              <Card.Link\r\n                style={{ textDecoration: \"none\" }}\r\n                href={`../exercise/${findDate}`}\r\n              >\r\n                <Button variant=\"outline-warning\" size=\"sm\">\r\n                  수정/삭제\r\n                </Button>\r\n              </Card.Link>\r\n              <Card.Link\r\n                style={{ textDecoration: \"none\" }}\r\n                href={`../exercise/list`}\r\n              >\r\n                <Button variant=\"outline-primary\" size=\"sm\">\r\n                  운동달력이동\r\n                </Button>\r\n              </Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n        ) : (\r\n          <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <Card.Body>\r\n              <Card.Title>운동</Card.Title>\r\n            </Card.Body>\r\n\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroup.Item>\r\n                오늘 운동을 아직 작성하지 않았어요! <br />\r\n                <Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  to={`../exercise/create/${findDate}`}\r\n                >\r\n                  <Button size=\"sm\" variant=\"outline-primary\">\r\n                    운동작성{\" \"}\r\n                  </Button>\r\n                </Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        )}\r\n        <br />\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\nexport default MainComponent;\r\n","import jwtAxios from \"../util/jwtUtil\";\r\nimport { API_SERVER_HOST } from \"./memberApi\";\r\nimport axios from \"axios\";\r\n//const host = `${API_SERVER_HOST}/api/main`;\r\nconst host = `/api/main`;\r\n\r\nexport const getTodayManagement = async (date) => {\r\n  console.log(\"mainApi.js getTodayManagement() 진입 매개변수확인 ->\", date);\r\n  const res = await jwtAxios.get(`${host}/${date}`);\r\n  return res.data;\r\n};\r\n","import LayoutIndex from \"../components/layout/LayoutIndex\";\r\nimport MainComponent from \"../components/main/MainComponent\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <MainComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n  if (!param) {\r\n    return defaultValue;\r\n  }\r\n  return parseInt(param);\r\n};\r\n\r\nconst useCustomMove = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const [queryParams] = useSearchParams();\r\n\r\n  const page = queryParams.get(\"page\") ? parseInt(queryParams.get(\"page\")) : 1;\r\n  const size = queryParams.get(\"size\") ? parseInt(queryParams.get(\"size\")) : 10;\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString();\r\n\r\n  const moveToList = (pageParam) => {\r\n    let queryStr = \"\";\r\n\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    //    navigate({ pathname: `../list`, search: queryStr });\r\n\r\n    setRefresh(!refresh);\r\n  }; //moveToList\r\n\r\n  //추가\r\n  const moveToModify = (num) => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToRead = (num) => {\r\n    navigate({ pathname: `../read/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToCreate = () => {\r\n    navigate({ pathname: `../create` });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    navigate({ pathname: `/login` });\r\n  };\r\n  return {\r\n    moveToList,\r\n    page,\r\n    size,\r\n    moveToModify,\r\n    refresh,\r\n    moveToRead,\r\n    moveToLogin,\r\n    moveToCreate,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n"],"names":["navigatorFn","navigator","geolocation","_loadedCoords","_loadedCoords2","saveCoords","coordsObj","localStorage","setItem","JSON","stringify","handleSuccess","position","_position$coords","_position$coords2","latitude","coords","longitude","handleError","console","log","askForCoords","getCurrentPosition","loadedCoords","getItem","parse","dfs_xy_conv","code","v1","v2","DEGRAD","Math","PI","RADDEG","re","slat1","slat2","olon","olat","sn","tan","cos","sf","pow","ro","rs","ra","theta","floor","sin","xn","yn","sqrt","alat","atan","abs","atan2","alon","Number","chooseReturn","number","MainComponent","loginState","isLogin","useCustomLogin","exceptionHandle","weatherVisible","setWeatherVisible","useState","weatherResult","setWeatherResult","currentDate","setCurrentDate","weatherTime","setWeatherTime","weatherDate","setWeatherDate","weatherStandard","setWeatherStandard","selectMonth","setSelectMonth","selectYear","setSelectYear","dateArray","setDateArray","diaryResultArray","setDiaryResultArray","exerciseResultArray","setExerciseResultArray","findDate","setFindDate","todayDate","setTodayDate","moveToLogin","useCustomMove","dietMorning","setDietMorning","dietLunch","setDietLunch","dietEvening","setDietEvening","dietSnack","setDietSnack","moneyIncome","setMoneyIncome","moneyExpense","setMoneyExpense","moneySum","setMoneySum","alertOpenApi","setAlertOpenApi","useLayoutEffect","alert","today","Date","hour","getHours","minutes","getMinutes","getFullYear","getMonth","getDate","monthfinal","datefinal","useEffect","weatherapiEI","async","_ref","weatherapiresult","xyresult","params","serviceKey","numOfRows","pageNo","dataType","base_date","base_time","nx","x","ny","y","axios","post","url","then","result","data","e","weatherapi","Array","isArray","length","newObj","forEach","r","newO","category","obsrValue","switchFn","Object","keys","push","date","jwtAxios","get","getTodayManagement","message","_result$diet","diary","diet","v","Dietdetails","d","choose","prev","money","_result$money","Moneydetails","amount","toLocaleString","sum","income","expense","sumincome","sumexpense","exercise","objectexercise","content","whenchoose","minute","catch","err","getTodayManagementEI","getDateResult","firstDay","lastDay","i","handleDateManagement","selectMonthAdd","dAdd","_jsxs","_Fragment","children","Container","_jsx","style","fontSize","Image","src","width","height","rounded","color","fontStyle","map","w","Form","Select","display","value","onChange","target","handleSelectYear","handleSelectMonth","Button","size","variant","onClick","textAlign","Card","Body","Title","ListGroup","className","Item","Link","textDecoration","to","picture","Img","path","margin","objectFit","React","href","id","Text","quantity","monthsumincome","monthsumexpense","MainPage","LayoutIndex","getNum","param","defaultValue","parseInt","navigate","useNavigate","refresh","setRefresh","queryParams","useSearchParams","page","queryDefault","createSearchParams","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","moveToModify","num","pathname","search","moveToRead","moveToCreate"],"sourceRoot":""}