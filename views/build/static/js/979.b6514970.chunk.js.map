{"version":3,"file":"static/js/979.b6514970.chunk.js","mappings":"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","sources":["components/diet/DietReadAllComponent.js","pages/diet/DietReadAllPage.js","hooks/useCustomDiet.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport useCustomDiet from \"../../hooks/useCustomDiet\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { deleteDiet, getDietAll } from \"../../api/dietApi\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst chooseSwitch = (choose) => {\r\n  if (!choose) {\r\n    return;\r\n  }\r\n  //console.log(\"chooseSwitch 매개변수 -> \", choose);\r\n  switch (choose) {\r\n    case \"1\":\r\n      return \"아침\";\r\n    case \"2\":\r\n      return \"점심\";\r\n    case \"3\":\r\n      return \"저녁\";\r\n    case \"4\":\r\n      return \"간식\";\r\n    default:\r\n      return \"아침\";\r\n  }\r\n};\r\nconst chooseReturn = (number) => {\r\n  //1234 이렇게 들어온다.\r\n  // console.log(\r\n  //   \"DietReadAllomponent.js chooseReturn() 진입 매개변수 => \",\r\n  //   number,\r\n  //   \"typeof -> \",\r\n  //   typeof number\r\n  // );\r\n  if (!number) {\r\n    return;\r\n  }\r\n  const str = number;\r\n  const arr = str.split(\"\");\r\n  //console.log(\"DietReadAllomponent.js chooseReturn() 진입 배열변경 => \", arr);\r\n  let result = \"\";\r\n  for (let n of arr) {\r\n    switch (n) {\r\n      case \"1\":\r\n        return (result = \"아침\");\r\n      case \"2\":\r\n        return (result = \"점심\");\r\n      case \"3\":\r\n        return (result = \"저녁\");\r\n      case \"4\":\r\n        return (result = \"간식\");\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  //console.log(result);\r\n};\r\n\r\nconst initState = {\r\n  content: \"\",\r\n  //picture: \"\",\r\n  dateobject: \"\",\r\n  updatedAt: \"\",\r\n  id: \"\",\r\n  quantity: 0,\r\n  choose: \"\",\r\n};\r\n\r\nconst DietReadAllComponent = () => {\r\n  const [dietParam, setDietParam] = useState([]);\r\n  //Diet배열받아서 Dietdetails배열바음\r\n\r\n  //console.log(\"dietParam -> \", dietParam);\r\n  const { dateobject } = useParams();\r\n  const { moveToDietReadAll, moveToDietList, deleteDietC } = useCustomDiet();\r\n  const [addDietParam, setAddDietParam] = useState([]);\r\n\r\n  //console.log(\"addDietParam -> \", addDietParam);\r\n\r\n  useEffect(() => {\r\n    // console.log(\r\n    //   \"DietReadAllComponent.js useEffect() 진입 objectdate=> \",\r\n    //   dateobject\r\n    // );\r\n\r\n    //let dietData=[]\r\n    //api\r\n    const getDietEI = async () =>\r\n      await getDietAll(dateobject)\r\n        .then((result) => {\r\n          // console.log(\r\n          //   \"DietReadAllComponent.js useEffect 내 getDietAll axios 호출후 then() => \",\r\n          //   result\r\n          // ); //acton.payload 받기에 data 없음\r\n          setDietParam(result);\r\n\r\n          let chooseArray = [\"1\", \"2\", \"3\", \"4\"];\r\n          result.forEach((v) => {\r\n            if (v.choose === \"1\") {\r\n              let arrayIndex = chooseArray.indexOf(\"1\");\r\n              chooseArray.splice(arrayIndex, 1);\r\n            } else if (v.choose === \"2\") {\r\n              let arrayIndex = chooseArray.indexOf(\"2\");\r\n              chooseArray.splice(arrayIndex, 1);\r\n            } else if (v.choose === \"3\") {\r\n              let arrayIndex = chooseArray.indexOf(\"3\");\r\n              chooseArray.splice(arrayIndex, 1);\r\n            } else if (v.choose === \"4\") {\r\n              let arrayIndex = chooseArray.indexOf(\"4\");\r\n              chooseArray.splice(arrayIndex, 1);\r\n            }\r\n          }); //forEach\r\n\r\n          // console.log(\r\n          //   \"DietReadAllComponent.js useEffect 내 getDietAll axios 호출후 chooseArray => \",\r\n          //   chooseArray\r\n          // );\r\n          setAddDietParam(chooseArray);\r\n        })\r\n        .catch((err) => {\r\n          // console.log(\r\n          //   \"DietReadAllComponent.js useEffect 내 getDietAll axios 호출후 catch() => \",\r\n          //   err\r\n          // );\r\n        });\r\n\r\n    getDietEI();\r\n    return () => {\r\n      setAddDietParam([]);\r\n    };\r\n  }, []);\r\n\r\n  //---------------삭제\r\n  const deleteOnClick = (choose) => {\r\n    // console.log(\r\n    //   \"DietReadAllComponent.js deleteOnClick() 삭제할 식단 choose => \",\r\n    //   choose\r\n    // );\r\n\r\n    if (window.confirm(\"해당 식단을 삭제하십니까?\")) {\r\n      deleteDiet({ choose, dateobject })\r\n        .then((result) => {\r\n          // console.log(\r\n          //   \"DietReadAllComponent.js deleteOnClick() then() => \",\r\n          //   result\r\n          // );\r\n          if (result.result === \"success\") {\r\n            alert(\r\n              dateobject +\r\n                \"일자의 \" +\r\n                chooseSwitch(choose) +\r\n                \" 식단이 삭제되었습니다.\"\r\n            );\r\n\r\n            moveToDietList();\r\n          }\r\n          if (result.error === \"error\") {\r\n            alert(dateobject + \"일자의 식단 삭제를 실패했습니다.\");\r\n            moveToDietReadAll(dateobject);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          // console.log(\r\n          //   \"DietReadAllComponent.js deleteOnClick() catch() => \",\r\n          //   err\r\n          // );\r\n          alert(dateobject + \"일자의 식단 삭제를 실패했습니다.\");\r\n          moveToDietReadAll(dateobject);\r\n        });\r\n    } //window.confirm\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <br />\r\n      <h4>전체식단조회</h4>\r\n      <hr />\r\n      <br />\r\n      <p>각 식단의 단위는 생략합니다 (단위:g/ml) </p>\r\n      &nbsp;&nbsp;\r\n      <Link to={\"../\"}>\r\n        <Button variant=\"outline-secondary\" type=\"button\">\r\n          식단달력이동\r\n        </Button>\r\n      </Link>\r\n      {addDietParam &&\r\n        addDietParam.map((i) => (\r\n          <>\r\n            &nbsp;&nbsp;\r\n            <Link to={`../create/${dateobject}?choose=${Number(i)}`}>\r\n              <Button\r\n                variant=\"outline-success\"\r\n                type=\"button\"\r\n                // onClick={handleDetailOnClick}\r\n              >\r\n                {chooseSwitch(i)}식단추가\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        ))}\r\n      <br />\r\n      <br />\r\n      {dietParam &&\r\n        dietParam.map((i) => (\r\n          <>\r\n            <React.Fragment key={i.id}>\r\n              <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n                {/* <Card.Img\r\n                variant=\"top\"\r\n                src=\"/smile.png\"\r\n                style={{\r\n                  display: \"block\",\r\n                  margin: \"0 auto\",\r\n                  width: \"200px\",\r\n                  height: \"200px\",\r\n                  objectFit: \"contain\",\r\n                }}\r\n              /> */}\r\n                <Card.Body>\r\n                  {i.choose === \"1\" && (\r\n                    <Card.Title>\r\n                      <Image\r\n                        src=\"/img/cabbage.png\"\r\n                        style={{ height: \"20px\", width: \"20px\" }}\r\n                      />\r\n                      {chooseReturn(i.choose)} 식단\r\n                    </Card.Title>\r\n                  )}\r\n                  {i.choose === \"2\" && (\r\n                    <Card.Title>\r\n                      <Image\r\n                        src=\"/img/carrot.png\"\r\n                        style={{ height: \"20px\", width: \"20px\" }}\r\n                      />\r\n                      {chooseReturn(i.choose)} 식단\r\n                    </Card.Title>\r\n                  )}\r\n\r\n                  {i.choose === \"3\" && (\r\n                    <Card.Title>\r\n                      <Image\r\n                        src=\"/img/eggplant.png\"\r\n                        style={{ height: \"20px\", width: \"20px\" }}\r\n                      />\r\n                      {chooseReturn(i.choose)} 식단\r\n                    </Card.Title>\r\n                  )}\r\n\r\n                  {i.choose === \"4\" && (\r\n                    <Card.Title>\r\n                      <Image\r\n                        src=\"/img/tomato.png\"\r\n                        style={{ height: \"20px\", width: \"20px\" }}\r\n                      />\r\n                      {chooseReturn(i.choose)} 식단\r\n                    </Card.Title>\r\n                  )}\r\n                  {/* <Card.Text>식단</Card.Text> */}\r\n                </Card.Body>\r\n                <ListGroup className=\"list-group-flush\">\r\n                  {i.Dietdetails &&\r\n                    i.Dietdetails.map((d) => (\r\n                      <ListGroup.Item>\r\n                        {d.content}&nbsp;\r\n                        {d.quantity}{\" \"}\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  {/* <ListGroup.Item>{i.content}</ListGroup.Item> */}\r\n                </ListGroup>\r\n                <Card.Body style={{ textAlign: \"center\" }}>\r\n                  {/* <Card.Link href=\"#\">수정/삭제</Card.Link>\r\n                <Card.Link href=\"#\">식단달력이동</Card.Link> */}\r\n                  <Link to={`../modify/${i.dateobject}/${i.choose}`}>\r\n                    <Button\r\n                      variant=\"outline-primary\"\r\n                      type=\"button\"\r\n                      //onClick={handleDetailOnClick}\r\n                    >\r\n                      수정\r\n                    </Button>\r\n                  </Link>\r\n                  &nbsp; &nbsp;\r\n                  <Button\r\n                    variant=\"outline-warning\"\r\n                    type=\"button\"\r\n                    onClick={() => deleteOnClick(i.choose)}\r\n                  >\r\n                    삭제\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </React.Fragment>\r\n            &nbsp; &nbsp;\r\n          </>\r\n        ))}\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DietReadAllComponent;\r\n","import DietReadAllComponent from \"../../components/diet/DietReadAllComponent\";\r\nimport LayoutIndex from \"../../components/layout/LayoutIndex\";\r\n\r\nconst DietReadPage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <DietReadAllComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietReadPage;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getDietListAsync,\r\n  postDietAsync,\r\n  patchDietAsync,\r\n  deleteDietAsync,\r\n} from \"../slices/dietSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomDiet = () => {\r\n  const dietState = useSelector((state) => state.dietSlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //  const postDietC = ({ dietParam, picture }) => {\r\n\r\n  const postDietC = ({ dietParam, finalObjectArray }) => {\r\n    const payload = dispatch(postDietAsync({ dietParam, finalObjectArray }));\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getDietListC = async () => {\r\n    await dispatch(getDietListAsync());\r\n  };\r\n\r\n  //수정\r\n  // 사진존재시 const patchDietC = ({ diaryParam, picture }) => {\r\n  const patchDietC = (diaryParam) => {\r\n    const payload = dispatch(patchDietAsync(diaryParam));\r\n    return payload; //thunk에서 받은 액션결과전달\r\n  };\r\n\r\n  //추가\r\n  const moveToDietRead = ({ dateobject, choose }) => {\r\n    navigate({ pathname: `../read/${choose}/${dateobject}`, replace: \"true\" });\r\n  };\r\n\r\n  //추가\r\n  const moveToDietReadAll = (dateobject) => {\r\n    navigate({ pathname: `../readall/${dateobject}` });\r\n  };\r\n\r\n  const moveToDietList = () => {\r\n    navigate({ pathname: \"../\", replace: \"true\" });\r\n  };\r\n\r\n  //추가\r\n  const moveToDietModify = ({ choose, dateobject }) => {\r\n    navigate({ pathname: `../modify/${dateobject}/${choose}` });\r\n  };\r\n\r\n  //추가\r\n  const moveToDietCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}` });\r\n  };\r\n\r\n  const deleteDietC = ({ choose, dateobject }) => {\r\n    const payload = dispatch(deleteDietAsync({ choose, dateobject }));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    dietState,\r\n    postDietC,\r\n    //    getDietC,\r\n    deleteDietC,\r\n    moveToDietReadAll,\r\n    patchDietC,\r\n    moveToDietRead,\r\n    moveToDietModify,\r\n    moveToDietCreate,\r\n    getDietListC,\r\n    moveToDietList,\r\n  };\r\n};\r\n\r\nexport default useCustomDiet;\r\n"],"names":["chooseSwitch","choose","chooseReturn","number","arr","split","n","DietReadAllComponent","dietParam","setDietParam","useState","dateobject","useParams","moveToDietReadAll","moveToDietList","deleteDietC","useCustomDiet","addDietParam","setAddDietParam","useEffect","async","getDietAll","then","result","chooseArray","forEach","v","arrayIndex","indexOf","splice","catch","err","getDietEI","_jsxs","className","children","_jsx","Link","to","Button","variant","type","map","i","_Fragment","Number","React","Card","style","width","display","Body","Title","Image","src","height","ListGroup","Dietdetails","d","Item","content","quantity","textAlign","onClick","deleteOnClick","window","confirm","deleteDiet","alert","error","id","DietReadPage","LayoutIndex","dietState","useSelector","state","dietSlice","dispatch","useDispatch","navigate","useNavigate","postDietC","_ref","finalObjectArray","postDietAsync","_ref4","deleteDietAsync","pathname","patchDietC","diaryParam","patchDietAsync","moveToDietRead","_ref2","replace","moveToDietModify","_ref3","moveToDietCreate","getDietListC","getDietListAsync"],"sourceRoot":""}