{"version":3,"file":"static/js/661.af4a3af9.chunk.js","mappings":"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","sources":["components/layout/Footer.js","api/chat.js","components/menus/BasicMenu.js","components/layout/Header.js","components/layout/LayoutIndex.js","hooks/useCustomMove.js","hooks/useCustomMoney.js","components/money/MoneyListComponent.js","pages/money/MoneyListPage.js"],"sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <span style={{ fontSize: \"15px\", textAlign: \"right\" }}>\r\n            <img\r\n              alt=\"\"\r\n              src=\"/img/thumbs-up.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            \"미래는 오늘 여러분이 무엇을 하느냐에 달려 있습니다.\" - 마하트마\r\n            간디 <br />\r\n            The future depends on what we do in the present. -Mahatma Gandhi\r\n          </span>\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport jwtAxios from \"../util/jwtUtil\";\r\nimport { API_SERVER_HOST } from \"./memberApi\";\r\n//const prefix = `${API_SERVER_HOST}/api/chat`;\r\nconst prefix = `/api/chat`;\r\n\r\nexport const chatGetPost = async ({ chatroomname, chatroompassword }) => {\r\n  //console.log(\r\n  //  \"api/chat.js chatGetPost 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatGetPost 매개변수확인 chatroompassword -> \",\r\n  //  chatroompassword\r\n  //);\r\n  const res = await jwtAxios.post(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const chatList = async () => {\r\n  const res = await jwtAxios.get(`${prefix}/list`);\r\n  return res.data;\r\n};\r\n\r\n//\r\nexport const chatAdd = async ({\r\n  chatroomname,\r\n  chatroompassword,\r\n  loginState,\r\n}) => {\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroompassword -> \",\r\n  //  chatroompassword\r\n  //);\r\n  //console.log(\r\n  //  \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n  //  chatroomname\r\n  //);\r\n  const res = await jwtAxios.post(`${prefix}/create`, {\r\n    chatroomname,\r\n    chatroompassword,\r\n    loginState,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\n//삭제\r\nexport const chatDelete = async ({ chatroomname, chatroompassword }) => {\r\n  const res = await jwtAxios.delete(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\n//채팅\r\nimport { io } from \"socket.io-client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { chatAdd, chatGetPost } from \"../../api/chat\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\n\r\nconst BasicMenu = (props) => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  //채팅\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgList, setMsgList] = useState([]);\r\n  const [chatroomname, setChatroomname] = useState(\"\");\r\n  const [chatroompassword, setChatroompassword] = useState(\"\");\r\n\r\n  const refChatRoom = useRef();\r\n  const refChatRoompassword = useRef();\r\n  const { moveToLogin } = useCustomLogin();\r\n  const refModalBody = useRef();\r\n  //소켓\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const handleMsg = (e) => {\r\n    //console.log(\"handleMsg 이벤트핸들러 진입 ->\", e.target.value);\r\n    setMsg(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroomnameInput = (e) => {\r\n    //console.log(\"handleChatroomnameInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroomname(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroompasswordInput = (e) => {\r\n    //console.log(\"handleChatroompasswordInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroompassword(() => e.target.value);\r\n  };\r\n  const chatStartClick = (e) => {\r\n    //console.log(\"chatStartClick 이벤트핸들러함수 진입 \");\r\n\r\n    e.preventDefault();\r\n    if (!isLogin) {\r\n      alert(\"로그인 후 이용가능합니다.\");\r\n      return moveToLogin();\r\n    }\r\n\r\n    if (chatroomname === \"\" || chatroomname === undefined) {\r\n      alert(\"방 이름을 입력하세요!\");\r\n      return;\r\n    }\r\n    if (chatroompassword === \"\" || chatroompassword === undefined) {\r\n      alert(\"방 비밀번호를 입력하세요!\");\r\n      return;\r\n    }\r\n\r\n    //네임스페이스둘경우\r\n    //const socket = io(\"/pic\", {\r\n    const socket = io({\r\n      //const socket = io(\"https://picdiary2025.store/\", {\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"52.78.155.180\", {\r\n\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"http://52.78.155.180:8082\", {\r\n\r\n      //path: \"/my-custom-path/\",\r\n      //추가\r\n      //transports: [\"websocket\"], //폴링시도\r\n      //path: \"/ws\",\r\n      autoConnect: false,\r\n\r\n      // query: {\r\n      //   username: loginState, //email\r\n      //   chatroomname: e.target.chatroomname.value,\r\n      //   chatroompassword: e.target.chatroompassword.value,\r\n      // },\r\n    });\r\n    socket.connect();\r\n\r\n    setSocket(() => socket);\r\n\r\n    const sendData = {\r\n      username: loginState, //email\r\n      chatroomname,\r\n      chatroompassword,\r\n    };\r\n    socket.emit(\"roomcreate\", sendData);\r\n  }; //chatStartClick\r\n\r\n  const handleSubmitChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    //console.log(\"handleSubmitChat() 진입 \");\r\n    const sendData = {\r\n      //message: e.target.chatcontents.value,\r\n      message: msg,\r\n      username: loginState,\r\n      chatroomname,\r\n    };\r\n\r\n    socket.emit(\"message\", sendData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    function messageCallback(msg) {\r\n      //console.log(\"handleSubmitChat() 진입 message 콜백함수 진입 msg-> \", msg);\r\n\r\n      const { message, username, chatroomname } = msg;\r\n\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: message,\r\n          type: loginState === username ? \"me\" : \"other\",\r\n          id: username,\r\n        },\r\n      ]);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n      setMsg(() => \"\");\r\n    }\r\n    function goodbyeCallback(msg) {\r\n      // console.log(\r\n      //   \"out 이벤트 리액트에서 받아서 goodbyeCallback() 진입 msg => \",\r\n      //   msg\r\n      // );\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg.message,\r\n          type: \"goodbye\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n\r\n      const socketidcheck = socket.id;\r\n      //console.log(\"goodbyeCallback() 소켓 id확인 \", socketidcheck);\r\n    }\r\n\r\n    function roomcreateCallback(msg) {\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg,\r\n          type: \"welcome\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n      setModalVisible(() => true);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    } //callback\r\n    socket?.on(\"roomcreate\", roomcreateCallback);\r\n    socket?.on(\"message\", messageCallback);\r\n    socket?.on(\"out\", goodbyeCallback);\r\n\r\n    return () => {\r\n      socket?.off(\"message\");\r\n      socket?.off(\"out\");\r\n      socket?.off(\"roomcreate\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const chatCloseModal = () => {\r\n    //console.log(\"chatCloseModal() 진입\");\r\n    if (window.confirm(\"채팅방에서 나가시겠습니까?\")) {\r\n      //console.log(\"chatCloseModal onClick 내 out 소켓이벤트 전달전 \");\r\n      socket.emit(\"out\", { chatroomname, loginState, chatroompassword });\r\n      setSocket(null);\r\n      setMsgList([]);\r\n      setChatroomname(\"\");\r\n      setChatroompassword(\"\");\r\n      setModalVisible(() => false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"bg-body-tertiary\"\r\n        expand=\"lg\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand>\r\n            <Image\r\n              src=\"/img/sunglass.png\"\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n            />\r\n            하루관리\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {isLogin ? (\r\n                <>\r\n                  <Nav.Link href=\"/diary\">사진일기</Nav.Link>\r\n                  <Nav.Link href=\"/diet\">식단관리</Nav.Link>\r\n                  <Nav.Link href=\"/exercise\">운동관리</Nav.Link>\r\n                  <Nav.Link href=\"/money\">금전관리</Nav.Link>\r\n                  <Nav.Link href=\"/logout\">로그아웃</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Nav.Link href=\"/login\">로그인</Nav.Link>\r\n                  <Nav.Link href=\"/join\">회원가입</Nav.Link>\r\n                </>\r\n              )}\r\n            </Nav>\r\n            <Form onSubmit={(e) => chatStartClick(e)}>\r\n              {\" \"}\r\n              <InputGroup size=\"sm\" style={{ width: \"600px\" }}>\r\n                <InputGroup.Text>채팅방명</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroomname\"\r\n                  onChange={handleChatroomnameInput}\r\n                  value={chatroomname}\r\n                  ref={refChatRoom}\r\n                />\r\n                <InputGroup.Text>방비밀번호</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroompassword\"\r\n                  ref={refChatRoompassword}\r\n                  onChange={handleChatroompasswordInput}\r\n                  value={chatroompassword}\r\n                />\r\n                <Button variant=\"outline-secondary\" type=\"submit\">\r\n                  채팅하기\r\n                </Button>\r\n              </InputGroup>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {modalVisible && (\r\n        <>\r\n          <div className=\"modal show\" style={{ display: \"block\" }}>\r\n            <Modal.Dialog>\r\n              <Modal.Header>\r\n                <Modal.Title> 채팅방명 : {chatroomname} </Modal.Title>\r\n                &nbsp; &nbsp;\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  style={{ textAlign: \"left\" }}\r\n                  onClick={() => chatCloseModal()}\r\n                  type=\"button\"\r\n                >\r\n                  채팅창닫기\r\n                </Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div style={{ overflow: \"scroll\", height: \"500px\" }}>\r\n                  <ul>\r\n                    {msgList.map((v, i) =>\r\n                      v.type === \"welcome\" || v.type === \"goodbye\" ? (\r\n                        <li key={i} style={{ listStyle: \"none\" }}>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                          <div>{v.msg}</div>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                        </li>\r\n                      ) : v.type === \"me\" ? (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_1`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      ) : (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_2`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#000\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    )}\r\n                    <li ref={refModalBody} style={{ listStyle: \"none\" }} />\r\n                  </ul>\r\n                </div>\r\n              </Modal.Body>\r\n              <Form onSubmit={(e) => handleSubmitChat(e)}>\r\n                <Modal.Footer>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                      채팅내용\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                      onChange={(e) => handleMsg(e)}\r\n                      value={msg}\r\n                      name=\"chatcontents\"\r\n                    />\r\n                  </InputGroup>\r\n\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    type=\"submit\"\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    메시지보내기\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal.Dialog>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicMenu;\r\n","import BasicMenu from \"../menus/BasicMenu\";\r\n\r\nconst Header = (props) => {\r\n  return <BasicMenu isLogin={props.isLogin} />;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, cloneElement } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst LayoutIndex = ({ children }) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const { loginState, isLogin } = useCustomLogin();\r\n\r\n  //console.log(\"loginState -> \", loginState);\r\n  //console.log(\"isLogin -> \", isLogin);\r\n\r\n  // const clonedElement = cloneElement(children, { today: date });\r\n\r\n  return (\r\n    <>\r\n      <Header isLogin={isLogin} />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutIndex;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n  if (!param) {\r\n    return defaultValue;\r\n  }\r\n  return parseInt(param);\r\n};\r\n\r\nconst useCustomMove = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const [queryParams] = useSearchParams();\r\n\r\n  const page = queryParams.get(\"page\") ? parseInt(queryParams.get(\"page\")) : 1;\r\n  const size = queryParams.get(\"size\") ? parseInt(queryParams.get(\"size\")) : 10;\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString();\r\n\r\n  const moveToList = (pageParam) => {\r\n    let queryStr = \"\";\r\n\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    //    navigate({ pathname: `../list`, search: queryStr });\r\n\r\n    setRefresh(!refresh);\r\n  }; //moveToList\r\n\r\n  //추가\r\n  const moveToModify = (num) => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToRead = (num) => {\r\n    navigate({ pathname: `../read/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToCreate = () => {\r\n    navigate({ pathname: `../create` });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    navigate({ pathname: `/login` });\r\n  };\r\n  return {\r\n    moveToList,\r\n    page,\r\n    size,\r\n    moveToModify,\r\n    refresh,\r\n    moveToRead,\r\n    moveToLogin,\r\n    moveToCreate,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getMoneyListAsync,\r\n  postMoneyAsync,\r\n  patchMoneyAsync,\r\n  deleteMoneyAsync,\r\n} from \"../slices/moneySlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomMoney = () => {\r\n  const moneyState = useSelector((state) => state.MoneySlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const postMoneyC = ({\r\n    moneyParam,\r\n    finalExpenseObjectArray,\r\n    finalIncomeObjectArray,\r\n    dateobject,\r\n  }) => {\r\n    const payload = dispatch(\r\n      postMoneyAsync({\r\n        moneyParam,\r\n        finalExpenseObjectArray,\r\n        finalIncomeObjectArray,\r\n        dateobject,\r\n      })\r\n    );\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getMoneyListC = async () => {\r\n    await dispatch(getMoneyListAsync());\r\n  };\r\n\r\n  //수정\r\n  const patchMoneyC = ({\r\n    moneyParam,\r\n    finalExpenseObjectArray,\r\n    finalIncomeObjectArray,\r\n    dateobject,\r\n    bigchoose,\r\n  }) => {\r\n    const payload = dispatch(\r\n      patchMoneyAsync({\r\n        moneyParam,\r\n        finalExpenseObjectArray,\r\n        finalIncomeObjectArray,\r\n        dateobject,\r\n        bigchoose,\r\n      })\r\n    );\r\n    return payload; //thunk에서 받은 액션결과 리듀서함수로 전달\r\n  };\r\n\r\n  const moveToMoneyRead = (dateobject) => {\r\n    navigate({ pathname: `../read/${dateobject}` });\r\n  };\r\n\r\n  const moveToMoneyList = () => {\r\n    navigate({ pathname: \"../\" });\r\n  };\r\n\r\n  const moveToMoneyModify = (dateobject) => {\r\n    navigate({ pathname: `../modify/${dateobject}` });\r\n  };\r\n\r\n  const moveToMoneyCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}` });\r\n  };\r\n\r\n  const deleteMoneyC = (id) => {\r\n    const payload = dispatch(deleteMoneyAsync(id));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    moneyState,\r\n    postMoneyC,\r\n    deleteMoneyC,\r\n    patchMoneyC,\r\n    moveToMoneyRead,\r\n    moveToMoneyModify,\r\n    moveToMoneyCreate,\r\n    getMoneyListC,\r\n    moveToMoneyList,\r\n  };\r\n};\r\n\r\nexport default useCustomMoney;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { Link, Navigate, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport \"../layout/stylesCalendar.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport useCustomMoney from \"../../hooks/useCustomMoney\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { choosecheck, getMoneyList } from \"../../api/moneyApi\";\r\n\r\nconst chooseReturn = (number) => {\r\n  let result = \"\";\r\n  for (let n of number) {\r\n    switch (n) {\r\n      case \"1\":\r\n        return (result = \"수입\");\r\n      case \"2\":\r\n        return (result = \"지출\");\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n};\r\n\r\nconst chooseSectorReturn = (number) => {\r\n  //console.log(\"MoneyListComponent.js chooseReturn() 진입 매개변수 => \", number);\r\n  let result = \"\";\r\n  for (let n of number) {\r\n    switch (n) {\r\n      case \"1\":\r\n        return (result = \"식비\");\r\n      case \"2\":\r\n        return (result = \"교육비\");\r\n      case \"3\":\r\n        return (result = \"공과금\");\r\n      case \"4\":\r\n        return (result = \"의류비\");\r\n      case \"5\":\r\n        return (result = \"생필품\");\r\n      case \"6\":\r\n        return (result = \"차량\");\r\n      case \"7\":\r\n        return (result = \"의료보험\");\r\n      case \"8\":\r\n        return (result = \"주거비\");\r\n      case \"9\":\r\n        return (result = \"도서문화오락\");\r\n      case \"10\":\r\n        return (result = \"기타\");\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  //console.log(result);\r\n};\r\n\r\nconst makeCalendar = (d) => {\r\n  let date = new Date(d);\r\n  const currentYear = new Date(date).getFullYear(); //예)Mon Apr 01 2024 10:27:04 GMT+0900 (한국 표준시)\r\n  const currentMonth = new Date(date).getMonth() + 1;\r\n  const firstDay = new Date(date.setDate(1)).getDay(); //1 앞에0안붙는다\r\n\r\n  //현재 달력첫째날\r\n  let calfirst = \"\";\r\n  function getCalfirst() {\r\n    calfirst += `${currentYear}-`;\r\n\r\n    if (currentMonth < 10) {\r\n      calfirst += `0${currentMonth}`;\r\n    } else {\r\n      calfirst += `${currentMonth}`;\r\n    }\r\n    //calfirst += `01`\r\n    return calfirst;\r\n  } //calfirst 현재달력첫날\r\n\r\n  const lastDay = new Date(currentYear, currentMonth, 0).getDate();\r\n  //console.log(\"lastDay값 ->\"+lastDay)//30\r\n  const limitDay = firstDay + lastDay;\r\n  //console.log(\"limitDay값 ->\"+limitDay)//31\r\n  const nextDay = Math.ceil(limitDay / 7) * 7;\r\n  //console.log(\"nextDay값 ->\"+nextDay)//35 35-31=4칸 빈칸만들어진다.\r\n\r\n  return { firstDay, lastDay, limitDay, nextDay };\r\n};\r\n\r\nconst CalendarItem = (props) => {\r\n  const { money, dateobject } = props.i; //api서버후 db에서 받은값\r\n\r\n  return (\r\n    money &&\r\n    money.map((i) => (\r\n      <React.Fragment key={i.id}>\r\n        {i.id && (\r\n          <>\r\n            <Link\r\n              to={`../read/${i.dateobject}`}\r\n              style={{ textDecoration: \"none\", color: \"black\" }}\r\n            >\r\n              {i.expense === \"0\" ? (\r\n                <></>\r\n              ) : (\r\n                <>\r\n                  지출\r\n                  <Image\r\n                    src=\"/img/rolling-eyes.png\"\r\n                    style={{ width: \"20px\", height: \"20px\" }}\r\n                    rounded\r\n                  />\r\n                  {i.expense}\r\n                  <br />\r\n                </>\r\n              )}\r\n              {i.income === \"0\" ? (\r\n                <></>\r\n              ) : (\r\n                <>\r\n                  수입\r\n                  <Image\r\n                    src=\"/img/star-struck.png\"\r\n                    style={{ width: \"20px\", height: \"20px\" }}\r\n                    rounded\r\n                  />\r\n                  {i.income}\r\n                  <br />\r\n                </>\r\n              )}\r\n            </Link>\r\n          </>\r\n        )}\r\n      </React.Fragment>\r\n    ))\r\n  );\r\n};\r\n\r\nconst MoneyListComponent = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const { moveToCreate } = useCustomMove();\r\n  const { exceptionHandle } = useCustomLogin();\r\n  const navigate = useNavigate();\r\n\r\n  const { moveToMoneyList } = useCustomMoney();\r\n  const [money, setMoney] = useState([]);\r\n  const [currentMonth, setCurrentMonth] = useState(\"\");\r\n  const [currentYear, setCurrentYear] = useState(\"\");\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [fullcurrentDate, setFullCurrentDate] = useState(\"\");\r\n\r\n  const [searchMonth, setSearchMonth] = useState(0);\r\n  const [searchYear, setSearchYear] = useState(0);\r\n  const [beforeDateItemArray, setBeforeDateItemArray] = useState([]);\r\n  const [afterDateItemArray, setAfterDateItemArray] = useState([]);\r\n  const [dateItem, setDateItem] = useState([]);\r\n  const [lastDay, setLastDay] = useState(\"\");\r\n  const [firstDay, setFirstDay] = useState(\"\");\r\n  const [nextDay, setNextDay] = useState(\"\");\r\n  const [limitDay, setLimitDay] = useState(\"\");\r\n  const [check, setCheck] = useState(0);\r\n  const [make, setMake] = useState(false);\r\n\r\n  let searchParamsYear = searchParams.get(\"year\");\r\n  let searchParamsMonth = searchParams.get(\"month\");\r\n\r\n  useLayoutEffect(() => {\r\n    //console.log(\"useLayoutEffect()  진입\");\r\n    setDateItem(() => []);\r\n    setMake(() => false);\r\n    let date = new Date();\r\n\r\n    let basicYear = date.getFullYear();\r\n    let basicMonth = date.getMonth() + 1;\r\n    basicMonth = basicMonth < 10 ? \"0\" + basicMonth : basicMonth;\r\n    date = `${basicYear}-${basicMonth}-01`;\r\n\r\n    if (searchParamsYear !== null && searchParamsMonth !== null) {\r\n      // console.log(\r\n      //   \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n      //   searchParamsYear\r\n      // );\r\n      // console.log(\r\n      //   \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n      //   searchParamsMonth\r\n      // );\r\n      setSearchMonth(() => Number(searchParamsMonth));\r\n      setSearchYear(() => searchParamsYear);\r\n\r\n      date = new Date(`${searchParamsYear}-${searchParamsMonth}-01`);\r\n      //console.log(\"date-> \", date);\r\n    }\r\n    setCurrentDate(() => date);\r\n    const newdate = new Date(date);\r\n    setCurrentYear(\"\" + newdate.getFullYear());\r\n    setCurrentMonth(newdate.getMonth() + 1);\r\n    setFullCurrentDate(() => newdate);\r\n  }, [searchParamsYear, searchParamsMonth]);\r\n\r\n  useEffect(() => {\r\n    if (fullcurrentDate !== \"\") {\r\n      // console.log(\r\n      //   \"useEffect() fullcurrentDate 존재할경우 =>  \",\r\n      //   fullcurrentDate\r\n      // );\r\n\r\n      const { firstDay, nextDay, limitDay, lastDay } =\r\n        makeCalendar(fullcurrentDate);\r\n\r\n      setLastDay(lastDay);\r\n      setFirstDay(firstDay);\r\n      setNextDay(nextDay);\r\n      setLimitDay(limitDay);\r\n    } //if\r\n\r\n    return () => {\r\n      //console.log(\"useEffect() makeCalendar() 반환변수들 초기화\");\r\n\r\n      setLastDay(() => \"\");\r\n      setFirstDay(() => \"\");\r\n      setNextDay(() => \"\");\r\n      setLimitDay(() => \"\");\r\n    };\r\n  }, [fullcurrentDate]);\r\n\r\n  //달력에서 이전빈칸\r\n  useEffect(() => {\r\n    //console.log(\"useEffect() 달력 데이터넣기 진입\");\r\n\r\n    if (make === true) {\r\n      //console.log(\"useEffect() 달력 데이터넣기 진입 make상태가 true진입\");\r\n\r\n      let dateItem = [];\r\n\r\n      for (let i = 1, j = 0; i <= lastDay; i++, j++) {\r\n        //console.log(\"useEffect() 달력 데이터넣기 for문 진입\");\r\n\r\n        let currentYear = new Date(fullcurrentDate).getFullYear();\r\n        let currentMonth = new Date(fullcurrentDate).getMonth() + 1;\r\n        currentMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\r\n        let ichange = i < 10 ? \"0\" + i : i;\r\n        let dateobject = `${currentYear}-${currentMonth}-${ichange}`;\r\n\r\n        dateItem[j] = {\r\n          dateitem: i,\r\n          dateobject: dateobject,\r\n          money: money.filter((a) => a.dateobject === dateobject),\r\n        };\r\n      }\r\n      //console.log(\"dateItem -> \", dateItem);\r\n      setDateItem(() => dateItem);\r\n\r\n      const beforeDateItem = firstDay - 0;\r\n      let beforeDateItemArray = [];\r\n\r\n      if (beforeDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= beforeDateItem; i++, j++) {\r\n          beforeDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setBeforeDateItemArray(() => beforeDateItemArray);\r\n\r\n      //달력에서 이후빈칸\r\n      const afterDateItem = nextDay - limitDay;\r\n      let afterDateItemArray = [];\r\n\r\n      if (afterDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= afterDateItem; i++, j++) {\r\n          afterDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setAfterDateItemArray(() => afterDateItemArray);\r\n    }\r\n  }, [make]);\r\n\r\n  useEffect(() => {\r\n    if (currentDate !== \"\") {\r\n      // console.log(\r\n      //   \"useEffect() 진입 axios 비동기요청 currentDate 존재할경우 ->\",\r\n      //   currentDate\r\n      // );\r\n      const getMoneyListEI = async () =>\r\n        await getMoneyList({ currentDate })\r\n          .then((result) => {\r\n            //console.log(\"MoneyListComponent.js then()진입 \", result);\r\n\r\n            if (Array.isArray(result)) {\r\n              let moneyResult = result.map((i) => {\r\n                return {\r\n                  ...i,\r\n                  income: Number(i.income).toLocaleString(\"ko-KR\"),\r\n                  expense: Number(i.expense).toLocaleString(\"ko-KR\"),\r\n                };\r\n              });\r\n              // console.log(\r\n              //   \"서버에서 데이터 받고 새로운 배열 담은 결과 => \",\r\n              //   moneyResult\r\n              // );\r\n              setMoney(() => moneyResult);\r\n              setMake(true);\r\n            } else {\r\n              setMake(true);\r\n            } //if\r\n          }) //then\r\n          .catch((err) => {\r\n            //console.log(\"MoneyListComponent.js catch()진입 \", err);\r\n            exceptionHandle(err);\r\n          });\r\n      getMoneyListEI();\r\n    } //if\r\n\r\n    return () => {\r\n      setMoney([]);\r\n    };\r\n  }, [currentDate]);\r\n\r\n  // 이전달 이동\r\n  const BeforeMonthMove = (currentDate) => {\r\n    //console.log(\"BeforeMonthMove() 진입  => \", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n    let beforechangeDate = new Date(tempdate.setMonth(tempdate.getMonth() - 1));\r\n    let beforecurrentYear = new Date(beforechangeDate).getFullYear();\r\n    // console.log(\r\n    //   \"BeforeMonthMove() 진입 beforecurrentYear => \",\r\n    //   beforecurrentYear\r\n    // );\r\n\r\n    let beforechangeMonth = new Date(beforechangeDate).getMonth() + 1;\r\n    beforechangeMonth =\r\n      beforechangeMonth < 10 ? \"0\" + beforechangeMonth : beforechangeMonth;\r\n    // console.log(\r\n    //   \"BeforeMonthMove() 진입 beforechangeMonth => \",\r\n    //   beforechangeMonth\r\n    // );\r\n\r\n    navigate(`?year=${beforecurrentYear}&month=${beforechangeMonth}`);\r\n  };\r\n\r\n  //다음달이동\r\n  const NextMonthMove = (currentDate) => {\r\n    //console.log(\"NextMonthMove() 진입 currentDate ->\", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n\r\n    let afterchangeDate = new Date(tempdate.setMonth(tempdate.getMonth()));\r\n    //console.log(\"NextMonthMove() 진입 afterchangeDate ->\", afterchangeDate);\r\n\r\n    let aftercurrentYear = new Date(afterchangeDate).getFullYear();\r\n    //console.log(\"NextMonthMove() 진입 aftercurrentYear ->\", aftercurrentYear);\r\n\r\n    let afterchangeMonth = new Date(afterchangeDate).getMonth() + 2;\r\n    afterchangeMonth =\r\n      afterchangeMonth < 10 ? \"0\" + afterchangeMonth : afterchangeMonth;\r\n    //console.log(\"NextMonthMove() 진입 afterchangeMonth ->\", afterchangeMonth);\r\n\r\n    navigate(`?year=${aftercurrentYear}&month=${afterchangeMonth}`);\r\n  };\r\n\r\n  const onClickDate = (dateobject) => {\r\n    // console.log(\r\n    //   \"MoneyListComponent.js 일자버튼 클릭 onClickDate() 함수진입 -> \",\r\n    //   dateobject\r\n    // );\r\n    choosecheck({ dateobject })\r\n      .then((result) => {\r\n        //console.log(\"MoneyListComponent.js then() 결과 \", result);\r\n        if (\r\n          Number(result.result?.income) > 0 &&\r\n          Number(result.result?.expense) > 0\r\n        ) {\r\n          alert(dateobject + \" 일자에 수입 지출 모두 작성되어 있습니다!\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        //console.log(\"MoneyListComponent.js catch() 에러 \", e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {\" \"}\r\n      <section className=\"py-5\">\r\n        <div className=\"calrap\" style={{ margin: \"0 auto\" }}>\r\n          <div className=\"calheader\">\r\n            <div className=\"calbtn calprevDay\">\r\n              <button onClick={() => BeforeMonthMove(currentDate)}>이전</button>\r\n            </div>\r\n            <h2 className=\"caldateTitle\">\r\n              {currentYear}년 {currentMonth}월\r\n            </h2>\r\n            <div className=\"calbtn calnextDay\">\r\n              <button onClick={() => NextMonthMove(currentDate)}>이후</button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <h6 style={{ textAlign: \"right\", color: \"tomato\" }}>\r\n            <i>일자 클릭시 머니등록페이지로 이동합니다!</i>\r\n          </h6>\r\n          <br />\r\n\r\n          <div className=\"calgrid caldateHead\">\r\n            <div key={\"0\"}>일</div>\r\n            <div key={\"1\"}>월</div>\r\n            <div key={\"2\"}>화</div>\r\n            <div key={\"3\"}>수</div>\r\n            <div key={\"4\"}>목</div>\r\n            <div key={\"5\"}>금</div>\r\n            <div key={\"6\"}>토</div>\r\n          </div>\r\n\r\n          <div className=\"calgrid caldateBoard\">\r\n            {beforeDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n\r\n            {dateItem.map((i, index) => (\r\n              <div key={index}>\r\n                {i.money && i.money.length !== 0 ? (\r\n                  <>\r\n                    <button\r\n                      style={{ all: \"unset\" }}\r\n                      type=\"button\"\r\n                      onClick={() => onClickDate(i.dateobject)}\r\n                    >\r\n                      {i.dateitem}\r\n                    </button>\r\n                    {/* <Link\r\n                      to={`../create/${i.dateobject}`}\r\n                      style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                    >\r\n                      {i.dateitem}\r\n                    </Link> */}\r\n                    <br />\r\n                    <CalendarItem key={index} i={i} />\r\n                  </>\r\n                ) : (\r\n                  <Link\r\n                    to={`../create/${i.dateobject}`}\r\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  >\r\n                    {i.dateitem}\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            ))}\r\n            {afterDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoneyListComponent;\r\n","import LayoutIndex from \"../../components/layout/LayoutIndex\";\r\nimport MoneyListComponent from \"../../components/money/MoneyListComponent\";\r\nconst MoneyListPage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <MoneyListComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoneyListPage;\r\n"],"names":["Footer","_jsx","Navbar","className","children","Container","Brand","_jsxs","style","fontSize","textAlign","alt","src","width","height","props","loginState","isLogin","useCustomLogin","modalVisible","setModalVisible","useState","msg","setMsg","msgList","setMsgList","chatroomname","setChatroomname","chatroompassword","setChatroompassword","refChatRoom","useRef","refChatRoompassword","moveToLogin","refModalBody","socket","setSocket","useEffect","on","_refModalBody$current2","prev","type","id","current","scrollIntoView","behavior","block","_refModalBody$current","message","username","off","_Fragment","expand","display","alignItems","justifyContent","fluid","Image","Collapse","Nav","Link","href","Form","onSubmit","e","preventDefault","alert","undefined","io","autoConnect","connect","sendData","emit","chatStartClick","InputGroup","size","Text","Control","name","onChange","target","value","ref","Button","variant","Modal","Dialog","Header","Title","onClick","window","confirm","Body","overflow","map","v","i","listStyle","flex","padding","backgroundColor","marginTop","fontWeight","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","handleSubmitChat","handleMsg","BasicMenu","_ref","date","setDate","Date","getNum","param","defaultValue","parseInt","useCustomMove","navigate","useNavigate","refresh","setRefresh","queryParams","useSearchParams","page","get","queryDefault","createSearchParams","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","moveToModify","num","pathname","search","moveToRead","moveToCreate","useCustomMoney","moneyState","useSelector","state","MoneySlice","dispatch","useDispatch","postMoneyC","moneyParam","finalExpenseObjectArray","finalIncomeObjectArray","dateobject","postMoneyAsync","deleteMoneyC","deleteMoneyAsync","patchMoneyC","_ref2","bigchoose","patchMoneyAsync","moveToMoneyRead","moveToMoneyModify","moveToMoneyCreate","getMoneyListC","async","getMoneyListAsync","moveToMoneyList","CalendarItem","money","React","to","textDecoration","expense","rounded","income","MoneyListComponent","searchParams","exceptionHandle","setMoney","currentMonth","setCurrentMonth","currentYear","setCurrentYear","currentDate","setCurrentDate","fullcurrentDate","setFullCurrentDate","searchMonth","setSearchMonth","searchYear","setSearchYear","beforeDateItemArray","setBeforeDateItemArray","afterDateItemArray","setAfterDateItemArray","dateItem","setDateItem","lastDay","setLastDay","firstDay","setFirstDay","nextDay","setNextDay","limitDay","setLimitDay","check","setCheck","make","setMake","searchParamsYear","searchParamsMonth","useLayoutEffect","basicYear","getFullYear","basicMonth","getMonth","Number","newdate","d","getDay","getDate","Math","ceil","makeCalendar","j","dateitem","filter","a","beforeDateItem","afterDateItem","getMoneyList","then","result","Array","isArray","moneyResult","toLocaleString","catch","err","getMoneyListEI","margin","tempdate","beforechangeDate","setMonth","beforecurrentYear","beforechangeMonth","BeforeMonthMove","afterchangeDate","aftercurrentYear","afterchangeMonth","NextMonthMove","index","length","all","onClickDate","choosecheck","_result$result","_result$result2","MoneyListPage","LayoutIndex"],"sourceRoot":""}