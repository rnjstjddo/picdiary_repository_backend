{"version":3,"file":"static/js/43.3ac2652c.chunk.js","mappings":"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","sources":["hooks/useCustomMove.js","api/mainApi.js","components/main/MainComponent.js","pages/MainPage.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n  if (!param) {\r\n    return defaultValue;\r\n  }\r\n  return parseInt(param);\r\n};\r\n\r\nconst useCustomMove = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const [queryParams] = useSearchParams();\r\n\r\n  const page = queryParams.get(\"page\") ? parseInt(queryParams.get(\"page\")) : 1;\r\n  const size = queryParams.get(\"size\") ? parseInt(queryParams.get(\"size\")) : 10;\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString();\r\n\r\n  const moveToList = (pageParam) => {\r\n    let queryStr = \"\";\r\n\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    //    navigate({ pathname: `../list`, search: queryStr });\r\n\r\n    setRefresh(!refresh);\r\n  }; //moveToList\r\n\r\n  //추가\r\n  const moveToModify = (num) => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToRead = (num) => {\r\n    navigate({ pathname: `../read/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToCreate = () => {\r\n    navigate({ pathname: `../create` });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    navigate({ pathname: `/login` });\r\n  };\r\n  return {\r\n    moveToList,\r\n    page,\r\n    size,\r\n    moveToModify,\r\n    refresh,\r\n    moveToRead,\r\n    moveToLogin,\r\n    moveToCreate,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import jwtAxios from \"../util/jwtUtil\";\r\nimport { API_SERVER_HOST } from \"./memberApi\";\r\nimport axios from \"axios\";\r\n//const host = `${API_SERVER_HOST}/api/main`;\r\nconst host = `/api/main`;\r\n\r\nexport const getTodayManagement = async (date) => {\r\n  console.log(\"mainApi.js getTodayManagement() 진입 매개변수확인 ->\", date);\r\n  const res = await jwtAxios.get(`${host}/${date}`);\r\n  return res.data;\r\n};\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { getTodayManagement } from \"../../api/mainApi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport ListGroupItem from \"react-bootstrap/esm/ListGroupItem\";\r\n\r\n// const switchFn = (category, obsrValue) => {\r\n//   let result = \"\";\r\n//   //  console.log(\"T1H 진입\");\r\n\r\n//   switch (category) {\r\n//     case \"T1H\":\r\n//       result += `기온 : ${obsrValue}`;\r\n//       break;\r\n//     case \"PTY\":\r\n//       result += `강수 : ${obsrValue}`;\r\n//       break;\r\n//     case \"REH\":\r\n//       result += `습도 : ${obsrValue}`;\r\n//       break;\r\n//     case \"RN1\":\r\n//       result += `강수량 : ${obsrValue}`;\r\n//       break;\r\n//     case \"WSD\":\r\n//       result += `풍속 : ${obsrValue}`;\r\n//       break;\r\n//     default:\r\n//       break;\r\n//   }\r\n//   //console.log(\"switchFn 결과 -> \", result);\r\n//   return result;\r\n// }; //switchFn\r\n\r\nconst switchFn = (obsrValue) => {\r\n  switch (obsrValue) {\r\n    case \"1\":\r\n      return \"비\";\r\n      break;\r\n    case \"2\":\r\n      return \"비/눈\";\r\n      break;\r\n    case \"3\":\r\n      return \"눈\";\r\n      break;\r\n    case \"4\":\r\n      return \"빗방울\";\r\n      break;\r\n    case \"5\":\r\n      return \"빗방울&눈날림\";\r\n      break;\r\n    case \"6\":\r\n      return \"눈날림\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst chooseReturn = (number) => {\r\n  if (!number) {\r\n    return;\r\n  }\r\n  switch (number) {\r\n    case \"1\":\r\n      return \"달리기\";\r\n    case \"2\":\r\n      return \"웨이트\";\r\n    case \"3\":\r\n      return `구기종목or복싱`;\r\n    case \"4\":\r\n      return \"등산\";\r\n    case \"5\":\r\n      return \"필라테스요가\";\r\n    case \"6\":\r\n      return \"그외\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MainComponent = () => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  console.log(isLogin);\r\n\r\n  const { exceptionHandle } = useCustomLogin();\r\n  console.log(loginState); //user, accessToken 2개 들어있다 이렇게 슬라이스에보관\r\n\r\n  //공공api\r\n  const [weatherVisible, setWeatherVisible] = useState(false);\r\n  const [weatherResult, setWeatherResult] = useState([]);\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [weatherTime, setWeatherTime] = useState(\"\");\r\n  const [weatherDate, setWeatherDate] = useState(\"\");\r\n  const [weatherStandard, setWeatherStandard] = useState(\"\");\r\n  const [selectMonth, setSelectMonth] = useState(3);\r\n  const [selectYear, setSelectYear] = useState(2025);\r\n  const [dateArray, setDateArray] = useState([]);\r\n  const [diaryResultArray, setDiaryResultArray] = useState([]);\r\n  const [exerciseResultArray, setExerciseResultArray] = useState([]);\r\n  const [findDate, setFindDate] = useState(\"\");\r\n  const [todayDate, setTodayDate] = useState(\"\");\r\n  //const [selectDate, setSelectDate] = useState(\"\");\r\n  //diet\r\n  const [dietId, setDietId] = useState(\"\");\r\n  const { moveToLogin } = useCustomMove();\r\n  const [dietMorning, setDietMorning] = useState([]);\r\n  const [dietLunch, setDietLunch] = useState([]);\r\n  const [dietEvening, setDietEvening] = useState([]);\r\n  const [dietSnack, setDietSnack] = useState([]);\r\n  //money\r\n  const [moneyIncome, setMoneyIncome] = useState([]);\r\n  const [moneyExpense, setMoneyExpense] = useState([]);\r\n  const [moneyId, setMoneyId] = useState(\"\");\r\n  const [moneySum, setMoneySum] = useState({});\r\n  //moneySum  sumincome sumexpense monthsumincome monthsumexpense\r\n\r\n  const [alertOpenApi, setAlertOpenApi] = useState(false);\r\n\r\n  //  base_date: \"20250310\",\r\n  // base_time: \"2200\",\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(\"MainComponent.js useLayoutEffect 기존데이터 초기화 진입\");\r\n    if (!isLogin) {\r\n      alert(\"로그인이 필요합니다!\");\r\n      return moveToLogin();\r\n    }\r\n  }, []);\r\n  useLayoutEffect(() => {\r\n    console.log(\r\n      \"MainComponent.js  useLayoutEffect 날짜구해서 state 데이터넣기 진입\"\r\n    );\r\n\r\n    let today = new Date();\r\n    // 현재 날짜를 가져옵니다.\r\n\r\n    //setTodayDate(() => today.getDate());\r\n\r\n    let hour =\r\n      today.getHours() < 10 ? \"0\" + today.getHours() : today.getHours();\r\n    let minutes =\r\n      today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\r\n    minutes = minutes < 30 ? \"00\" : \"30\";\r\n\r\n    setWeatherTime(() => hour + minutes); //위치기반한 날씨위한 시간\r\n    setWeatherStandard(() => `${hour}시 ${minutes}분`); //위치기반한 날씨위한 날짜\r\n    setCurrentDate(\r\n      //화면에 보일 오늘날짜\r\n      () =>\r\n        `${today.getFullYear()}년 ${\r\n          today.getMonth() + 1\r\n        }월 ${today.getDate()}일`\r\n    );\r\n\r\n    let monthfinal =\r\n      today.getMonth() + 1 < 10\r\n        ? \"0\" + (today.getMonth() + 1) // `\"0\"${today.getMonth() + 1}`\r\n        : today.getMonth() + 1;\r\n    let datefinal =\r\n      today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\r\n    setWeatherDate(() => `${today.getFullYear()}${monthfinal}${datefinal}`);\r\n    setFindDate(() => `${today.getFullYear()}-${monthfinal}-${datefinal}`);\r\n    setSelectMonth(today.getMonth() + 1);\r\n    setSelectYear(today.getFullYear());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const today = new Date();\r\n\r\n    setTodayDate(() => today.getDate());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"MainComponent.js useEffect() 위치기반 날씨 axios 요청 진입\");\r\n\r\n    const weatherapiEI = async () => {\r\n      const result = await weatherapi({ weatherDate, weatherTime });\r\n      console.log(\r\n        \"MainComponent.js useEffect() 위치기반 날씨 axios 요청 후 결과 -> \",\r\n        result\r\n      );\r\n\r\n      if (Array.isArray(result) && result.length !== 0) {\r\n        let newObj = [];\r\n\r\n        result?.forEach((r) => {\r\n          let newO = {};\r\n          if (r.category === \"T1H\") {\r\n            newO[\"category\"] = \"온도\";\r\n            newO[\"obsrValue\"] = r.obsrValue + \"(도)\";\r\n          }\r\n          if (r.category === \"REH\") {\r\n            newO[\"category\"] = \"습도\";\r\n            newO[\"obsrValue\"] = r.obsrValue + \"(%)\";\r\n          }\r\n          if (r.category === \"WSD\") {\r\n            newO[\"category\"] = \"풍속\";\r\n            newO[\"obsrValue\"] = r.obsrValue + \"(m/s)\";\r\n          }\r\n          if (r.category === \"PTY\" && r.obsrValue > 1) {\r\n            newO[\"category\"] = \"비/눈\";\r\n            newO[\"obsrValue\"] = switchFn(r.obsrValue);\r\n          }\r\n          if (r.category === \"RN1\" && newObj[\"PTY\"]) {\r\n            newO[\"category\"] = \"강수량\";\r\n            newO[\"obsrValue\"] = r.obsrValue + \"(시간당mm)\";\r\n          }\r\n          console.log(\"newO 객체 => \", newO);\r\n          if (Object.keys(newO).length !== 0) {\r\n            newObj.push(newO);\r\n          }\r\n        });\r\n\r\n        setWeatherResult(() => newObj);\r\n        setWeatherVisible(true);\r\n\r\n        console.log(\r\n          \"weatherapiEI setState 후 출력 weatherResult => \",\r\n          weatherResult\r\n        );\r\n      } //공공api데이터 존재할경우진입\r\n      else {\r\n        //결과 undefined\r\n        setAlertOpenApi(true);\r\n      }\r\n    }; //weatherapiEI\r\n\r\n    if (weatherDate !== \"\" && weatherTime !== \"\") {\r\n      weatherapiEI();\r\n    }\r\n  }, [weatherDate]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useLayoutEffect() 서버axios요청으로 데이터 가져오기진입=>\");\r\n\r\n    const getTodayManagementEI = async () => {\r\n      await getTodayManagement(findDate)\r\n        .then((result) => {\r\n          console.log(\"useEffect()진입 axios 결과 -> \", result);\r\n\r\n          if (result.message === \"\") {\r\n            console.log(\"서버에서 res.locals 담긴 jwtemail 없어서 그냥 보임\");\r\n          } else {\r\n            //if (result) {\r\n            console.log(\"useEffect()진입 axios 결과 존재할경우 진입\");\r\n\r\n            setDiaryResultArray(() => result.diary);\r\n\r\n            if (result.diet.length !== 0) {\r\n              console.log(\"result.diet 넣기 진입\");\r\n\r\n              //setDietId(result.diet[0]?.Dietdetails[0]?.DietId);\r\n\r\n              //아래로 수정\r\n              //setDietId(result.diet[0].id);\r\n              result.diet?.forEach((v) => {\r\n                console.log(\r\n                  \"result.diet 넣기 진입 result.diet forEach 진입 => \",\r\n                  v\r\n                );\r\n\r\n                v.Dietdetails.forEach((d) => {\r\n                  console.log(\r\n                    \"result.diet 넣기 진입 result.diet.Dietdetails forEach 진입 => \",\r\n                    d\r\n                  );\r\n\r\n                  if (d.choose === \"1\") {\r\n                    console.log(\r\n                      \"result.diet 넣기 진입 result.diet.Dietdetails choose 1 진입\"\r\n                    );\r\n\r\n                    setDietMorning((prev) => [...prev, d]);\r\n                  } else if (d.choose === \"2\") {\r\n                    console.log(\r\n                      \"result.diet 넣기 진입 result.diet.Dietdetails choose 2 진입\"\r\n                    );\r\n\r\n                    setDietLunch((prev) => [...prev, d]);\r\n                  } else if (d.choose === \"3\") {\r\n                    console.log(\r\n                      \"result.diet 넣기 진입 result.diet.Dietdetails choose 3 진입\"\r\n                    );\r\n\r\n                    setDietEvening((prev) => [...prev, d]);\r\n                  } else {\r\n                    console.log(\r\n                      \"result.diet 넣기 진입 result.diet.Dietdetails choose 4 진입\"\r\n                    );\r\n\r\n                    setDietSnack((prev) => [...prev, d]);\r\n                  }\r\n                });\r\n              });\r\n            }\r\n\r\n            console.log(\"diet dietMorning-> \", dietMorning);\r\n            console.log(\"diet dietLunch-> \", dietLunch);\r\n            console.log(\"diet dietEvening-> \", dietEvening);\r\n            console.log(\"diet dietSnack-> \", dietSnack);\r\n\r\n            if (result.money.length !== 0) {\r\n              console.log(\"money 넣기 진입\");\r\n\r\n              result.money?.forEach((v) => {\r\n                console.log(\r\n                  \"result.money 넣기 진입 result.money forEach 진입 => \",\r\n                  v\r\n                );\r\n\r\n                v.Moneydetails.forEach((d) => {\r\n                  console.log(\r\n                    \"result.money 넣기 진입 result.money.Moneydetails forEach 진입 => \",\r\n                    d\r\n                  );\r\n\r\n                  if (d.choose === \"1\") {\r\n                    console.log(\r\n                      \"result.money 넣기 진입 result.money.Moneydetails choose 1 진입\"\r\n                    );\r\n                    d.amount = Number(d.amount).toLocaleString(\"ko-KR\");\r\n                    setMoneyIncome((prev) => [...prev, d]);\r\n                  } else if (d.choose === \"2\") {\r\n                    console.log(\r\n                      \"result.money 넣기 진입 result.money.Moneydetails choose 2 진입\"\r\n                    );\r\n                    d.amount = Number(d.amount).toLocaleString(\"ko-KR\");\r\n\r\n                    setMoneyExpense((prev) => [...prev, d]);\r\n                  }\r\n                });\r\n              });\r\n\r\n              console.log(\"money moneyIncome-> \", moneyIncome);\r\n              console.log(\"money moneyExpense-> \", moneyExpense);\r\n\r\n              let sum = {};\r\n\r\n              if (result.money.length !== 0 && result.sum.length !== 0) {\r\n                console.log(\"sum 넣기 진입\");\r\n\r\n                sum[\"sumincome\"] = Number(\r\n                  result.money[0].income\r\n                ).toLocaleString(\"ko-KR\");\r\n                sum[\"sumexpense\"] = Number(\r\n                  result.money[0].expense\r\n                ).toLocaleString(\"ko-KR\");\r\n                sum[\"monthsumincome\"] = Number(\r\n                  result.sum[0].sumincome\r\n                ).toLocaleString(\"ko-KR\");\r\n                sum[\"monthsumexpense\"] = Number(\r\n                  result.sum[0].sumexpense\r\n                ).toLocaleString(\"ko-KR\");\r\n                setMoneySum(() => sum);\r\n              }\r\n              //sum  sumincome sumexpense monthsumincome monthsumexpense\r\n              setMoneyId(result.money[0]?.Moneydetails[0]?.MoneyId);\r\n            } //money배열존재할 경우\r\n\r\n            if (result.exercise.length !== 0) {\r\n              console.log(\"exercise 넣기 진입\");\r\n\r\n              result.exercise.forEach((v) => {\r\n                let objectexercise = {};\r\n                objectexercise[\"content\"] = v.content;\r\n                objectexercise[\"choose\"] = v.choose;\r\n                objectexercise[\"whenchoose\"] = v.whenchoose;\r\n                objectexercise[\"minute\"] = v.minute;\r\n                setExerciseResultArray((prev) => [...prev, objectexercise]);\r\n              });\r\n            } //if exericse state만들기\r\n          }\r\n        }) //then\r\n        .catch((err) => {\r\n          console.log(\"useEffect()진입 axios 에러-> \", err);\r\n          //          exceptionHandle(err);\r\n        });\r\n    }; //getTodayManagementEI()\r\n\r\n    if (findDate !== \"\") {\r\n      getTodayManagementEI();\r\n    }\r\n\r\n    return () => {\r\n      setDietEvening([]);\r\n      setDietMorning([]);\r\n      setDietSnack([]);\r\n      setDietLunch([]);\r\n      setMoneyExpense([]);\r\n      setMoneyIncome([]);\r\n      setExerciseResultArray([]);\r\n      setDiaryResultArray([]);\r\n      setExerciseResultArray([]);\r\n    };\r\n  }, [findDate]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect()진입 일자버튼 출력\");\r\n\r\n    const getDate = async () => {\r\n      let getDateResult = [];\r\n      let firstDay = new Date(selectYear, selectMonth - 1, 1).getDate();\r\n      let lastDay = new Date(selectYear, selectMonth, 0).getDate();\r\n      console.log(\"getDate() firstDay => \", firstDay);\r\n      console.log(\"getDate() lastDay=> \", lastDay);\r\n\r\n      for (let i = firstDay; i <= lastDay; i++) {\r\n        getDateResult.push(i);\r\n      }\r\n      setDateArray(() => getDateResult);\r\n    };\r\n    getDate(); //해당 월에해당하는 일자들 배열로 setState()넣기\r\n\r\n    return () => {\r\n      setDateArray([]);\r\n    };\r\n  }, []);\r\n\r\n  const handleSelectYear = (e) => {\r\n    setSelectYear(() => Number(e.target.value));\r\n\r\n    const getDate = async () => {\r\n      let getDateResult = [];\r\n      let firstDay = new Date(selectYear, selectMonth - 1, 1).getDate();\r\n      let lastDay = new Date(selectYear, selectMonth, 0).getDate();\r\n      console.log(\"getDate() firstDay => \", firstDay);\r\n      console.log(\"getDate() lastDay=> \", lastDay);\r\n\r\n      for (let i = firstDay; i <= lastDay; i++) {\r\n        getDateResult.push(i);\r\n      }\r\n      setDateArray(() => getDateResult);\r\n    };\r\n    getDate(); //해당 월에해당하는 일자들 배열로 setState()넣기\r\n  };\r\n\r\n  const handleSelectMonth = (e) => {\r\n    setSelectMonth(() => Number(e.target.value));\r\n\r\n    const getDate = async () => {\r\n      let getDateResult = [];\r\n      let firstDay = new Date(selectYear, selectMonth - 1, 1).getDate();\r\n      let lastDay = new Date(selectYear, selectMonth, 0).getDate();\r\n      console.log(\"getDate() firstDay => \", firstDay);\r\n      console.log(\"getDate() lastDay=> \", lastDay);\r\n\r\n      for (let i = firstDay; i <= lastDay; i++) {\r\n        getDateResult.push(i);\r\n      }\r\n      setDateArray(() => getDateResult);\r\n    };\r\n    getDate(); //해당 월에해당하는 일자들 배열로 setState()넣기\r\n  };\r\n\r\n  //달력일버튼나열\r\n  const handleDateManagement = (d) => {\r\n    console.log(\"handleDateManagement()진입 선택한 일자 -> \", d);\r\n    setTodayDate(() => d);\r\n    let selectMonthAdd = selectMonth < 10 ? \"0\" + selectMonth : selectMonth;\r\n    let dAdd = d < 10 ? \"0\" + d : d;\r\n\r\n    setFindDate(() => `${selectYear}-${selectMonthAdd}-${dAdd}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect()진입 findDate 변경으로 axios 호출위해\");\r\n\r\n    getTodayManagement(findDate)\r\n      .then((result) => {\r\n        console.log(\"useEffect()진입 axios 결과 -> \", result);\r\n\r\n        //다어이리\r\n        setDiaryResultArray(() => result.diary);\r\n\r\n        //식단\r\n        if (result.diet.length !== 0) {\r\n          //setDietId(result.diet[0]?.Dietdetails[0]?.DietId);\r\n\r\n          //아래수정\r\n          //setDietId(result.diet[0].id);\r\n\r\n          result.diet.forEach((v) => {\r\n            v.Dietdetails.forEach((d) => {\r\n              if (d.choose === \"1\") {\r\n                setDietMorning((prev) => [...prev, d]);\r\n              } else if (d.choose === \"2\") {\r\n                setDietLunch((prev) => [...prev, d]);\r\n              } else if (d.choose === \"3\") {\r\n                setDietEvening((prev) => [...prev, d]);\r\n              } else {\r\n                setDietSnack((prev) => [...prev, d]);\r\n              }\r\n            });\r\n          });\r\n          //setDietId(result.diet[0]?.Dietdetails[0]?.DietId);\r\n        }\r\n        //가계부\r\n        if (result.money.length !== 0) {\r\n          result.money?.forEach((v) => {\r\n            v.Moneydetails.forEach((d) => {\r\n              if (d.choose === \"1\") {\r\n                d.amount = Number(d.amount).toLocaleString(\"ko-KR\");\r\n                setMoneyIncome((prev) => [...prev, d]);\r\n              } else if (d.choose === \"2\") {\r\n                d.amount = Number(d.amount).toLocaleString(\"ko-KR\");\r\n\r\n                setMoneyExpense((prev) => [...prev, d]);\r\n              }\r\n            });\r\n          });\r\n\r\n          let sum = {};\r\n\r\n          if (result.money.length !== 0 && result.sum.length !== 0) {\r\n            sum[\"sumincome\"] = Number(result.money[0].income).toLocaleString(\r\n              \"ko-KR\"\r\n            );\r\n            sum[\"sumexpense\"] = Number(result.money[0].expense).toLocaleString(\r\n              \"ko-KR\"\r\n            );\r\n            sum[\"monthsumincome\"] = Number(\r\n              result.sum[0].sumincome\r\n            ).toLocaleString(\"ko-KR\");\r\n            sum[\"monthsumexpense\"] = Number(\r\n              result.sum[0].sumexpense\r\n            ).toLocaleString(\"ko-KR\");\r\n            setMoneySum(() => sum);\r\n          }\r\n          //sum  sumincome sumexpense monthsumincome monthsumexpense\r\n          setMoneyId(result.money[0]?.Moneydetails[0]?.MoneyId);\r\n        }\r\n        //운동\r\n        if (result.exercise.length !== 0) {\r\n          result.exercise.forEach((v) => {\r\n            let objectexercise = {};\r\n            objectexercise[\"content\"] = v.content;\r\n            objectexercise[\"choose\"] = v.choose;\r\n            objectexercise[\"whenchoose\"] = v.whenchoose;\r\n            objectexercise[\"minute\"] = v.minute;\r\n            setExerciseResultArray((prev) => [...prev, objectexercise]);\r\n          });\r\n        } //if exericse state만들기\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"useEffect()진입 axios 에러-> \", err);\r\n      });\r\n  }, [findDate]);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <br />\r\n        <br />\r\n        {isLogin && loginState ? (\r\n          <>\r\n            <span style={{ fontSize: \"25px\" }}>\r\n              {\" \"}\r\n              {loginState} 님의 하루관리\r\n            </span>\r\n            <br />\r\n            <br />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <span style={{ fontSize: \"25px\" }}>하루관리</span>\r\n            <br />\r\n            <br />\r\n          </>\r\n        )}\r\n        <br />\r\n        &nbsp;&nbsp;{\" \"}\r\n        <Image\r\n          src=\"/img/calendar.png\"\r\n          style={{ width: \"30px\", height: \"30px\" }}\r\n          rounded\r\n        />\r\n        &nbsp;오늘은 &nbsp;\r\n        {currentDate} &nbsp;&nbsp;\r\n        {alertOpenApi && (\r\n          <span style={{ color: \"crimson\", fontStyle: \"italic\" }}>\r\n            *오늘의 날씨정보를 보시려면 팝업창의 위치확인을 허용해주세요!{\" \"}\r\n          </span>\r\n        )}\r\n        {weatherVisible &&\r\n          //weatherResult.length !== 0 &&\r\n          weatherResult?.map((w, i) => (\r\n            <>\r\n              {w.category === \"비/눈\" &&\r\n                w.obsrValue === \"7\" &&\r\n                w.obsrValue === \"3\" && (\r\n                  <span key={`${i}_1`}>\r\n                    <Image\r\n                      src=\"/img/cloudsnow.png\"\r\n                      style={{ width: \"30px\", height: \"30px\" }}\r\n                      rounded\r\n                    />\r\n                    {w.category} {w.obsrValue}\r\n                  </span>\r\n                )}\r\n              {w.category === \"비/눈\" &&\r\n                w.obsrValue === \"1\" &&\r\n                w.obsrValue === \"2\" &&\r\n                w.obsrValue === \"5\" &&\r\n                w.obsrValue === \"6\" && (\r\n                  <span key={`${i}_2`}>\r\n                    <Image\r\n                      src=\"/img/rain.png\"\r\n                      style={{ width: \"30px\", height: \"30px\" }}\r\n                      rounded\r\n                    />\r\n                    {w.category} {w.obsrValue}&nbsp;&nbsp;\r\n                  </span>\r\n                )}\r\n              {!w.category === \"비/눈\" && (\r\n                <span key={`${i}_3`}>\r\n                  <Image\r\n                    src=\"/img/sun.png\"\r\n                    style={{ width: \"30px\", height: \"30px\" }}\r\n                    rounded\r\n                  />\r\n                  {w.category} {w.obsrValue}&nbsp;&nbsp;\r\n                </span>\r\n              )}\r\n              {w.category === \"온도\" && (\r\n                <span key={`${i}_4`}>\r\n                  <Image\r\n                    src=\"/img/ther.png\"\r\n                    style={{ width: \"30px\", height: \"30px\" }}\r\n                    rounded\r\n                  />\r\n                  {w.category} {w.obsrValue}&nbsp;&nbsp;\r\n                </span>\r\n              )}{\" \"}\r\n              {w.category === \"습도\" && (\r\n                <span key={`${i}_5`}>\r\n                  <Image\r\n                    src=\"/img/humidity.png\"\r\n                    style={{ width: \"30px\", height: \"30px\" }}\r\n                    rounded\r\n                  />\r\n                  {w.category} {w.obsrValue} &nbsp;&nbsp;\r\n                </span>\r\n              )}{\" \"}\r\n              {w.category === \"풍속\" && (\r\n                <span key={`${i}_6`}>\r\n                  <Image\r\n                    src=\"/img/wind.png\"\r\n                    style={{ width: \"30px\", height: \"30px\" }}\r\n                    rounded\r\n                  />\r\n                  &nbsp;\r\n                  {w.category} {w.obsrValue}&nbsp;&nbsp;\r\n                </span>\r\n              )}\r\n            </>\r\n          ))}\r\n        {weatherVisible && `(${weatherStandard} 기준)`}\r\n      </Container>\r\n\r\n      <hr />\r\n      <br />\r\n\r\n      <Container>\r\n        <Form.Select\r\n          style={{ width: \"200px\", display: \"inline-block\" }}\r\n          value={selectYear}\r\n          onChange={(e) => handleSelectYear(e)}\r\n        >\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n        </Form.Select>\r\n        <Form.Select\r\n          style={{ width: \"200px\", display: \"inline-block\" }}\r\n          value={selectMonth}\r\n          onChange={(e) => handleSelectMonth(e)}\r\n        >\r\n          <option value={\"1\"}>1</option>\r\n          <option value={\"2\"}>2</option>\r\n          <option value={\"3\"}>3</option>\r\n          <option value={\"4\"}>4</option>\r\n          <option value={\"5\"}>5</option>\r\n          <option value={\"6\"}>6</option>\r\n          <option value={\"7\"}>7</option>\r\n          <option value={\"8\"}>8</option>\r\n          <option value={\"9\"}>9</option>\r\n          <option value={\"10\"}>10</option>\r\n          <option value={\"11\"}>11</option>\r\n          <option value={\"12\"}>12</option>\r\n        </Form.Select>\r\n        &nbsp;&nbsp;\r\n        <span style={{ color: \"red\", fontStyle: \"italic\" }}>\r\n          *날짜클릭시 작성한 하루관리를 한눈에 볼수있습니다!\r\n        </span>\r\n        <br />\r\n        <br />\r\n        {Array.isArray(dateArray) &&\r\n          dateArray.length !== 0 &&\r\n          dateArray.map((d, i) =>\r\n            d === todayDate ? (\r\n              <span key={i} style={{ fontSize: \"20px\" }}>\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"secondary\"\r\n                  onClick={() => handleDateManagement(d)}\r\n                >\r\n                  {d}\r\n                </Button>\r\n                &nbsp;\r\n              </span>\r\n            ) : (\r\n              <span key={`${i}_1`} style={{ fontSize: \"20px\" }}>\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"outline-secondary\"\r\n                  onClick={() => handleDateManagement(d)}\r\n                >\r\n                  {d}\r\n                </Button>\r\n                &nbsp;\r\n              </span>\r\n            )\r\n          )}\r\n        <br />\r\n        <br />\r\n      </Container>\r\n\r\n      <Container style={{ textAlign: \"center\" }}>\r\n        {Array.isArray(diaryResultArray) && diaryResultArray.length === 0 ? (\r\n          <>\r\n            <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n              <Card.Body>\r\n                <Card.Title>사진다이어리</Card.Title>\r\n              </Card.Body>\r\n              <ListGroup className=\"list-group-flush\">\r\n                <ListGroup.Item>\r\n                  오늘 다이어리를 아직 작성하지 않았어요! <br />\r\n                  <Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to={`../diary/create/${findDate}`}\r\n                  >\r\n                    <Button size=\"sm\" variant=\"outline-primary\">\r\n                      다이어리작성{\" \"}\r\n                    </Button>\r\n                  </Link>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </>\r\n        ) : (\r\n          diaryResultArray.length !== 0 &&\r\n          diaryResultArray.map((d, i) => (\r\n            <Card style={{ width: \"18rem\", display: \"inline-block\" }} key={i}>\r\n              {d.picture ? (\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  //src={`http://localhost:8001/img/${d.picture}`}\r\n                  src={`https://picdiary-bucket.s3.ap-northeast-2.amazonaws.com/${d.path}`}\r\n                  style={{\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                    width: \"200px\",\r\n                    height: \"200px\",\r\n                    objectFit: \"contain\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <>업로드하지 않음😅</>\r\n              )}\r\n\r\n              <Card.Body>\r\n                <Card.Title>사진다이어리</Card.Title>\r\n                {/* <Card.Text>내용</Card.Text> */}\r\n              </Card.Body>\r\n              <ListGroup className=\"list-group-flush\">\r\n                <ListGroup.Item>{d.content}</ListGroup.Item>\r\n              </ListGroup>\r\n              <Card.Body>\r\n                <Card.Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  href={`../diary/modify/${d.id}`}\r\n                >\r\n                  <Button variant=\"outline-warning\" size=\"sm\">\r\n                    수정/삭제\r\n                  </Button>\r\n                </Card.Link>\r\n\r\n                <Card.Link\r\n                  href={\"../diary/list\"}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <Button variant=\"outline-primary\" size=\"sm\">\r\n                    다이어리달력이동\r\n                  </Button>\r\n                </Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          ))\r\n        )}\r\n        &nbsp; &nbsp;\r\n        {Array.isArray(dietMorning) &&\r\n        dietMorning.length === 0 &&\r\n        Array.isArray(dietEvening) &&\r\n        dietEvening.length === 0 &&\r\n        Array.isArray(dietLunch) &&\r\n        dietLunch.length === 0 &&\r\n        Array.isArray(dietSnack) &&\r\n        dietSnack.length === 0 ? (\r\n          <>\r\n            <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n              <Card.Body>\r\n                <Card.Title>식단</Card.Title>\r\n              </Card.Body>{\" \"}\r\n              <ListGroup className=\"list-group-flush\">\r\n                <ListGroup.Item>\r\n                  오늘 식단을 아직 작성하지 않았어요! <br />\r\n                  <Button size=\"sm\" variant=\"outline-primary\">\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      to={`../diet/create/${findDate}`}\r\n                    >\r\n                      식단작성\r\n                    </Link>\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </>\r\n        ) : (\r\n          <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <Card.Body>\r\n              <Card.Title>식단</Card.Title>\r\n              <Card.Text>(g/ml생략)</Card.Text>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                아침\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {dietMorning.length !== 0 ? (\r\n                  dietMorning.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content}\r\n                      {d.quantity}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  )) //map\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../diet/create/${findDate}`}\r\n                    >\r\n                      <Button variant=\"outline-success\" size=\"sm\">\r\n                        아침작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                점심\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {dietLunch.length !== 0 ? (\r\n                  dietLunch.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content}\r\n                      {d.quantity}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../diet/create/${findDate}`}\r\n                    >\r\n                      <Button variant=\"outline-success\" size=\"sm\">\r\n                        점심작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                저녁\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {dietEvening.length !== 0 ? (\r\n                  dietEvening.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content} {d.quantity}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../diet/create/${findDate}`}\r\n                    >\r\n                      <Button variant=\"outline-success\" size=\"sm\">\r\n                        저녁작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                간식\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {dietSnack.length !== 0 ? (\r\n                  dietSnack.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content} {d.quantity}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../diet/create/${findDate}`}\r\n                    >\r\n                      <Button variant=\"outline-success\" size=\"sm\">\r\n                        간식작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n            <Card.Body>\r\n              <Card.Link\r\n                style={{ textDecoration: \"none\" }}\r\n                href={`../diet/readall/${findDate}`}\r\n              >\r\n                <Button variant=\"outline-warning\" size=\"sm\">\r\n                  수정/삭제\r\n                </Button>\r\n              </Card.Link>\r\n              <Card.Link\r\n                style={{ textDecoration: \"none\" }}\r\n                href={`../diet/list`}\r\n              >\r\n                <Button variant=\"outline-primary\" size=\"sm\">\r\n                  식단달력이동\r\n                </Button>\r\n              </Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n        &nbsp; &nbsp;\r\n        {Array.isArray(moneyIncome) &&\r\n        moneyIncome.length === 0 &&\r\n        Array.isArray(moneyExpense) &&\r\n        moneyExpense.length === 0 ? (\r\n          <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <Card.Body>\r\n              <Card.Title>가계부</Card.Title>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroup.Item>\r\n                오늘 가계부를 아직 작성하지 않았어요! <br />\r\n                <Button size=\"sm\" variant=\"outline-primary\">\r\n                  <Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to={`../money/create/${findDate}`}\r\n                  >\r\n                    가계부작성\r\n                  </Link>{\" \"}\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        ) : (\r\n          <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <Card.Body>\r\n              <Card.Title>가계부</Card.Title>\r\n              <Card.Text>(단위:원)</Card.Text>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              {moneyIncome.length !== 0 ? (\r\n                <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                  {todayDate}일 &nbsp;총수입&nbsp;\r\n                  {moneySum.sumincome}\r\n                  <br />\r\n                  <Card.Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    href={`../money/modify/${findDate}/1`}\r\n                  >\r\n                    <Button variant=\"outline-warning\" size=\"sm\">\r\n                      수입수정/삭제\r\n                    </Button>\r\n                  </Card.Link>\r\n                </ListGroup.Item>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {moneyIncome.length !== 0 ? (\r\n                  moneyIncome.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content}&nbsp;\r\n                      {d.amount}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../money/create?choose=1`}\r\n                    >\r\n                      <Button\r\n                        variant=\"outline-success\"\r\n                        size=\"sm\"\r\n                        style={{ textAlign: \"left\" }}\r\n                      >\r\n                        수입작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              {moneyExpense.length !== 0 ? (\r\n                <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                  {todayDate}일 &nbsp;총지출&nbsp;\r\n                  {moneySum.sumexpense}\r\n                  <br />\r\n                  <Card.Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    href={`../money/modify/${findDate}/2`}\r\n                  >\r\n                    <Button variant=\"outline-warning\" size=\"sm\">\r\n                      지출수정/삭제\r\n                    </Button>\r\n                  </Card.Link>\r\n                </ListGroup.Item>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <ListGroup.Item style={{ textAlign: \"right\" }}>\r\n                {moneyExpense.length !== 0 ? (\r\n                  moneyExpense.map((d, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {d.content}&nbsp;\r\n                      {d.amount}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      href={`../money/create?choose=2`}\r\n                    >\r\n                      <Button\r\n                        variant=\"outline-success\"\r\n                        size=\"sm\"\r\n                        style={{ textAlign: \"left\" }}\r\n                      >\r\n                        지출작성\r\n                      </Button>\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                {selectMonth}월수입합계&nbsp;\r\n                {moneySum.monthsumincome}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item style={{ textAlign: \"left\" }}>\r\n                {selectMonth}월지출합계&nbsp;\r\n                {moneySum.monthsumexpense}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n            <Card.Body>\r\n              <Card.Link\r\n                style={{ textDecoration: \"none\" }}\r\n                href={`../money/list`}\r\n              >\r\n                <Button variant=\"outline-primary\" size=\"sm\">\r\n                  가계부달력이동\r\n                </Button>\r\n              </Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n        &nbsp; &nbsp;\r\n        {Array.isArray(exerciseResultArray) &&\r\n        exerciseResultArray.length !== 0 ? (\r\n          <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <Card.Body>\r\n              <Card.Title>운동</Card.Title>\r\n              {/* <Card.Text>운동</Card.Text> */}\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              {exerciseResultArray.map((e, i) =>\r\n                e.whenchoose === \"1\" ? (\r\n                  <React.Fragment key={i}>\r\n                    <ListGroup.Item>아침</ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      {chooseReturn(e.choose)}/{e.minute}(분)\r\n                      <br />\r\n                      {e.content}\r\n                    </ListGroup.Item>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <></>\r\n                )\r\n              )}\r\n              {exerciseResultArray.map((e, i) =>\r\n                e.whenchoose === \"2\" ? (\r\n                  <React.Fragment key={i}>\r\n                    <ListGroup.Item>점심</ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      {chooseReturn(e.choose)}/{e.minute}(분)\r\n                      <br />\r\n                      {e.content}\r\n                    </ListGroup.Item>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <></>\r\n                )\r\n              )}\r\n              {exerciseResultArray.map((e, i) =>\r\n                e.whenchoose === \"3\" ? (\r\n                  <React.Fragment key={i}>\r\n                    <ListGroup.Item>저녁</ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      {chooseReturn(e.choose)}/{e.minute}(분)\r\n                      <br />\r\n                      {e.content}\r\n                    </ListGroup.Item>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <></>\r\n                )\r\n              )}\r\n            </ListGroup>\r\n            <Card.Body>\r\n              <Card.Link\r\n                style={{ textDecoration: \"none\" }}\r\n                href={`../exercise/${findDate}`}\r\n              >\r\n                <Button variant=\"outline-warning\" size=\"sm\">\r\n                  수정/삭제\r\n                </Button>\r\n              </Card.Link>\r\n              <Card.Link\r\n                style={{ textDecoration: \"none\" }}\r\n                href={`../exercise/list`}\r\n              >\r\n                <Button variant=\"outline-primary\" size=\"sm\">\r\n                  운동달력이동\r\n                </Button>\r\n              </Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n        ) : (\r\n          <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <Card.Body>\r\n              <Card.Title>운동</Card.Title>\r\n            </Card.Body>\r\n\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroup.Item>\r\n                오늘 운동을 아직 작성하지 않았어요! <br />\r\n                <Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  to={`../exercise/create/${findDate}`}\r\n                >\r\n                  <Button size=\"sm\" variant=\"outline-primary\">\r\n                    운동작성{\" \"}\r\n                  </Button>\r\n                </Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        )}\r\n        <br />\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\nexport default MainComponent;\r\n","import LayoutIndex from \"../components/layout/LayoutIndex\";\r\nimport MainComponent from \"../components/main/MainComponent\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <MainComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["getNum","param","defaultValue","parseInt","useCustomMove","navigate","useNavigate","refresh","setRefresh","useState","queryParams","useSearchParams","page","get","size","queryDefault","createSearchParams","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","moveToModify","num","pathname","search","moveToRead","moveToLogin","moveToCreate","getTodayManagement","async","console","log","date","jwtAxios","data","chooseReturn","number","MainComponent","loginState","isLogin","useCustomLogin","exceptionHandle","weatherVisible","setWeatherVisible","weatherResult","setWeatherResult","currentDate","setCurrentDate","weatherTime","setWeatherTime","weatherDate","setWeatherDate","weatherStandard","setWeatherStandard","selectMonth","setSelectMonth","selectYear","setSelectYear","dateArray","setDateArray","diaryResultArray","setDiaryResultArray","exerciseResultArray","setExerciseResultArray","findDate","setFindDate","todayDate","setTodayDate","dietId","setDietId","dietMorning","setDietMorning","dietLunch","setDietLunch","dietEvening","setDietEvening","dietSnack","setDietSnack","moneyIncome","setMoneyIncome","moneyExpense","setMoneyExpense","moneyId","setMoneyId","moneySum","setMoneySum","alertOpenApi","setAlertOpenApi","useLayoutEffect","alert","today","Date","hour","getHours","minutes","getMinutes","getFullYear","getMonth","getDate","monthfinal","datefinal","useEffect","result","weatherapi","Array","isArray","length","newObj","forEach","r","newO","category","obsrValue","switchFn","Object","keys","push","weatherapiEI","then","message","_result$diet","diary","diet","v","Dietdetails","d","choose","prev","money","_result$money","_result$money$","_result$money$$Moneyd","Moneydetails","amount","Number","toLocaleString","sum","income","expense","sumincome","sumexpense","MoneyId","exercise","objectexercise","content","whenchoose","minute","catch","err","getTodayManagementEI","getDateResult","firstDay","lastDay","i","handleDateManagement","selectMonthAdd","dAdd","_result$money2","_result$money$2","_result$money$2$Money","_jsxs","_Fragment","children","Container","_jsx","style","fontSize","Image","src","width","height","rounded","color","fontStyle","map","w","Form","Select","display","value","onChange","e","target","handleSelectYear","handleSelectMonth","Button","variant","onClick","textAlign","Card","Body","Title","ListGroup","className","Item","Link","textDecoration","to","picture","Img","path","margin","objectFit","href","id","Text","React","quantity","monthsumincome","monthsumexpense","MainPage","LayoutIndex"],"sourceRoot":""}