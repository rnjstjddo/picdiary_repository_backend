{"version":3,"file":"static/js/926.5011a680.chunk.js","mappings":"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","sources":["components/layout/Footer.js","api/chat.js","components/menus/BasicMenu.js","components/layout/Header.js","components/layout/LayoutIndex.js","hooks/useCustomDiet.js","hooks/useCustomMove.js","components/diet/DietReadComponent.js","pages/diet/DietReadPage.js"],"sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <span style={{ fontSize: \"15px\", textAlign: \"right\" }}>\r\n            <img\r\n              alt=\"\"\r\n              src=\"/img/thumbs-up.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            \"미래는 오늘 여러분이 무엇을 하느냐에 달려 있습니다.\" - 마하트마\r\n            간디 <br />\r\n            The future depends on what we do in the present. -Mahatma Gandhi\r\n          </span>\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport jwtAxios from \"../util/jwtUtil\";\r\nimport { API_SERVER_HOST } from \"./memberApi\";\r\n//const prefix = `${API_SERVER_HOST}/api/chat`;\r\nconst prefix = `/api/chat`;\r\n\r\nexport const chatGetPost = async ({ chatroomname, chatroompassword }) => {\r\n  console.log(\r\n    \"api/chat.js chatGetPost 매개변수확인 chatroomname -> \",\r\n    chatroomname\r\n  );\r\n  console.log(\r\n    \"api/chat.js chatGetPost 매개변수확인 chatroompassword -> \",\r\n    chatroompassword\r\n  );\r\n  const res = await jwtAxios.post(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\nexport const chatList = async () => {\r\n  const res = await jwtAxios.get(`${prefix}/list`);\r\n  return res.data;\r\n};\r\n\r\n//\r\nexport const chatAdd = async ({\r\n  chatroomname,\r\n  chatroompassword,\r\n  loginState,\r\n}) => {\r\n  console.log(\r\n    \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n    chatroomname\r\n  );\r\n  console.log(\r\n    \"api/chat.js chatAdd 매개변수확인 chatroompassword -> \",\r\n    chatroompassword\r\n  );\r\n  console.log(\r\n    \"api/chat.js chatAdd 매개변수확인 chatroomname -> \",\r\n    chatroomname\r\n  );\r\n  const res = await jwtAxios.post(`${prefix}/create`, {\r\n    chatroomname,\r\n    chatroompassword,\r\n    loginState,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\n//삭제\r\nexport const chatDelete = async ({ chatroomname, chatroompassword }) => {\r\n  const res = await jwtAxios.delete(`${prefix}/${chatroomname}`, {\r\n    chatroompassword,\r\n  });\r\n\r\n  return res.data;\r\n};\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\n//채팅\r\nimport { io } from \"socket.io-client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { chatAdd, chatGetPost } from \"../../api/chat\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\n\r\nconst BasicMenu = (props) => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  //채팅\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgList, setMsgList] = useState([]);\r\n  const [chatroomname, setChatroomname] = useState(\"\");\r\n  const [chatroompassword, setChatroompassword] = useState(\"\");\r\n\r\n  const refChatRoom = useRef();\r\n  const refChatRoompassword = useRef();\r\n  const { moveToLogin } = useCustomLogin();\r\n  const refModalBody = useRef();\r\n  //소켓\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const handleMsg = (e) => {\r\n    //console.log(\"handleMsg 이벤트핸들러 진입 ->\", e.target.value);\r\n    setMsg(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroomnameInput = (e) => {\r\n    //console.log(\"handleChatroomnameInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroomname(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroompasswordInput = (e) => {\r\n    //console.log(\"handleChatroompasswordInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroompassword(() => e.target.value);\r\n  };\r\n  const chatStartClick = (e) => {\r\n    console.log(\"chatStartClick 이벤트핸들러함수 진입 \");\r\n\r\n    e.preventDefault();\r\n    if (!isLogin) {\r\n      alert(\"로그인 후 이용가능합니다.\");\r\n      return moveToLogin();\r\n    }\r\n\r\n    if (chatroomname === \"\" || chatroomname === undefined) {\r\n      alert(\"방 이름을 입력하세요!\");\r\n      return;\r\n    }\r\n    if (chatroompassword === \"\" || chatroompassword === undefined) {\r\n      alert(\"방 비밀번호를 입력하세요!\");\r\n      return;\r\n    }\r\n\r\n    //네임스페이스둘경우\r\n    //const socket = io(\"/pic\", {\r\n    const socket = io({\r\n      //const socket = io(\"https://picdiary2025.store/\", {\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"52.78.155.180\", {\r\n\r\n      //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n      //const socket = io(\"http://52.78.155.180:8082\", {\r\n\r\n      //path: \"/my-custom-path/\",\r\n      //추가\r\n      //transports: [\"websocket\"], //폴링시도\r\n      //path: \"/ws\",\r\n      autoConnect: false,\r\n\r\n      // query: {\r\n      //   username: loginState, //email\r\n      //   chatroomname: e.target.chatroomname.value,\r\n      //   chatroompassword: e.target.chatroompassword.value,\r\n      // },\r\n    });\r\n    socket.connect();\r\n\r\n    setSocket(() => socket);\r\n\r\n    const sendData = {\r\n      username: loginState, //email\r\n      chatroomname,\r\n      chatroompassword,\r\n    };\r\n    socket.emit(\"roomcreate\", sendData);\r\n  }; //chatStartClick\r\n\r\n  const handleSubmitChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"handleSubmitChat() 진입 \");\r\n    const sendData = {\r\n      //message: e.target.chatcontents.value,\r\n      message: msg,\r\n      username: loginState,\r\n      chatroomname,\r\n    };\r\n\r\n    socket.emit(\"message\", sendData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    function messageCallback(msg) {\r\n      console.log(\"handleSubmitChat() 진입 message 콜백함수 진입 msg-> \", msg);\r\n\r\n      const { message, username, chatroomname } = msg;\r\n\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: message,\r\n          type: loginState === username ? \"me\" : \"other\",\r\n          id: username,\r\n        },\r\n      ]);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n      setMsg(() => \"\");\r\n    }\r\n    function goodbyeCallback(msg) {\r\n      console.log(\r\n        \"out 이벤트 리액트에서 받아서 goodbyeCallback() 진입 msg => \",\r\n        msg\r\n      );\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg.message,\r\n          type: \"goodbye\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n\r\n      const socketidcheck = socket.id;\r\n      console.log(\"goodbyeCallback() 소켓 id확인 \", socketidcheck);\r\n    }\r\n\r\n    function roomcreateCallback(msg) {\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg,\r\n          type: \"welcome\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n      setModalVisible(() => true);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    } //callback\r\n    socket?.on(\"roomcreate\", roomcreateCallback);\r\n    socket?.on(\"message\", messageCallback);\r\n    socket?.on(\"out\", goodbyeCallback);\r\n\r\n    return () => {\r\n      socket?.off(\"message\");\r\n      socket?.off(\"out\");\r\n      socket?.off(\"roomcreate\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const chatCloseModal = () => {\r\n    console.log(\"chatCloseModal() 진입\");\r\n    if (window.confirm(\"채팅방에서 나가시겠습니까?\")) {\r\n      console.log(\"chatCloseModal onClick 내 out 소켓이벤트 전달전 \");\r\n      socket.emit(\"out\", { chatroomname, loginState, chatroompassword });\r\n      setSocket(null);\r\n      setMsgList([]);\r\n      setChatroomname(\"\");\r\n      setChatroompassword(\"\");\r\n      setModalVisible(() => false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"bg-body-tertiary\"\r\n        expand=\"lg\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand>\r\n            <Image\r\n              src=\"/img/sunglass.png\"\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n            />\r\n            하루관리\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {isLogin ? (\r\n                <>\r\n                  <Nav.Link href=\"/diary\">사진일기</Nav.Link>\r\n                  <Nav.Link href=\"/diet\">식단관리</Nav.Link>\r\n                  <Nav.Link href=\"/exercise\">운동관리</Nav.Link>\r\n                  <Nav.Link href=\"/money\">금전관리</Nav.Link>\r\n                  <Nav.Link href=\"/logout\">로그아웃</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Nav.Link href=\"/login\">로그인</Nav.Link>\r\n                  <Nav.Link href=\"/join\">회원가입</Nav.Link>\r\n                </>\r\n              )}\r\n            </Nav>\r\n            <Form onSubmit={(e) => chatStartClick(e)}>\r\n              {\" \"}\r\n              <InputGroup size=\"sm\" style={{ width: \"600px\" }}>\r\n                <InputGroup.Text>채팅방명</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroomname\"\r\n                  onChange={handleChatroomnameInput}\r\n                  value={chatroomname}\r\n                  ref={refChatRoom}\r\n                />\r\n                <InputGroup.Text>방비밀번호</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroompassword\"\r\n                  ref={refChatRoompassword}\r\n                  onChange={handleChatroompasswordInput}\r\n                  value={chatroompassword}\r\n                />\r\n                <Button variant=\"outline-secondary\" type=\"submit\">\r\n                  채팅하기\r\n                </Button>\r\n              </InputGroup>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {modalVisible && (\r\n        <>\r\n          <div className=\"modal show\" style={{ display: \"block\" }}>\r\n            <Modal.Dialog>\r\n              <Modal.Header>\r\n                <Modal.Title> 채팅방명 : {chatroomname} </Modal.Title>\r\n                &nbsp; &nbsp;\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  style={{ textAlign: \"left\" }}\r\n                  onClick={() => chatCloseModal()}\r\n                  type=\"button\"\r\n                >\r\n                  채팅창닫기\r\n                </Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div style={{ overflow: \"scroll\", height: \"500px\" }}>\r\n                  <ul>\r\n                    {msgList.map((v, i) =>\r\n                      v.type === \"welcome\" || v.type === \"goodbye\" ? (\r\n                        <li key={i} style={{ listStyle: \"none\" }}>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                          <div>{v.msg}</div>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                        </li>\r\n                      ) : v.type === \"me\" ? (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_1`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      ) : (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_2`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#000\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    )}\r\n                    <li ref={refModalBody} style={{ listStyle: \"none\" }} />\r\n                  </ul>\r\n                </div>\r\n              </Modal.Body>\r\n              <Form onSubmit={(e) => handleSubmitChat(e)}>\r\n                <Modal.Footer>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                      채팅내용\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                      onChange={(e) => handleMsg(e)}\r\n                      value={msg}\r\n                      name=\"chatcontents\"\r\n                    />\r\n                  </InputGroup>\r\n\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    type=\"submit\"\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    메시지보내기\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal.Dialog>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicMenu;\r\n","import BasicMenu from \"../menus/BasicMenu\";\r\n\r\nconst Header = (props) => {\r\n  return <BasicMenu isLogin={props.isLogin} />;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, cloneElement } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst LayoutIndex = ({ children }) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const { loginState, isLogin } = useCustomLogin();\r\n\r\n  //console.log(\"loginState -> \", loginState);\r\n  //console.log(\"isLogin -> \", isLogin);\r\n\r\n  // const clonedElement = cloneElement(children, { today: date });\r\n\r\n  return (\r\n    <>\r\n      <Header isLogin={isLogin} />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutIndex;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getDietListAsync,\r\n  postDietAsync,\r\n  patchDietAsync,\r\n  deleteDietAsync,\r\n} from \"../slices/dietSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomDiet = () => {\r\n  const dietState = useSelector((state) => state.dietSlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //  const postDietC = ({ dietParam, picture }) => {\r\n\r\n  const postDietC = ({ dietParam, finalObjectArray }) => {\r\n    const payload = dispatch(postDietAsync({ dietParam, finalObjectArray }));\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getDietListC = async () => {\r\n    await dispatch(getDietListAsync());\r\n  };\r\n\r\n  //수정\r\n  // 사진존재시 const patchDietC = ({ diaryParam, picture }) => {\r\n  const patchDietC = (diaryParam) => {\r\n    const payload = dispatch(patchDietAsync(diaryParam));\r\n    return payload; //thunk에서 받은 액션결과전달\r\n  };\r\n\r\n  //추가\r\n  const moveToDietRead = ({ dateobject, choose }) => {\r\n    navigate({ pathname: `../read/${choose}/${dateobject}`, replace: \"true\" });\r\n  };\r\n\r\n  //추가\r\n  const moveToDietReadAll = (dateobject) => {\r\n    navigate({ pathname: `../readall/${dateobject}` });\r\n  };\r\n\r\n  const moveToDietList = () => {\r\n    navigate({ pathname: \"../\", replace: \"true\" });\r\n  };\r\n\r\n  //추가\r\n  const moveToDietModify = ({ choose, dateobject }) => {\r\n    navigate({ pathname: `../modify/${dateobject}/${choose}` });\r\n  };\r\n\r\n  //추가\r\n  const moveToDietCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}` });\r\n  };\r\n\r\n  const deleteDietC = ({ choose, dateobject }) => {\r\n    const payload = dispatch(deleteDietAsync({ choose, dateobject }));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    dietState,\r\n    postDietC,\r\n    //    getDietC,\r\n    deleteDietC,\r\n    moveToDietReadAll,\r\n    patchDietC,\r\n    moveToDietRead,\r\n    moveToDietModify,\r\n    moveToDietCreate,\r\n    getDietListC,\r\n    moveToDietList,\r\n  };\r\n};\r\n\r\nexport default useCustomDiet;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n  if (!param) {\r\n    return defaultValue;\r\n  }\r\n  return parseInt(param);\r\n};\r\n\r\nconst useCustomMove = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const [queryParams] = useSearchParams();\r\n\r\n  const page = queryParams.get(\"page\") ? parseInt(queryParams.get(\"page\")) : 1;\r\n  const size = queryParams.get(\"size\") ? parseInt(queryParams.get(\"size\")) : 10;\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString();\r\n\r\n  const moveToList = (pageParam) => {\r\n    let queryStr = \"\";\r\n\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    //    navigate({ pathname: `../list`, search: queryStr });\r\n\r\n    setRefresh(!refresh);\r\n  }; //moveToList\r\n\r\n  //추가\r\n  const moveToModify = (num) => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToRead = (num) => {\r\n    navigate({ pathname: `../read/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToCreate = () => {\r\n    navigate({ pathname: `../create` });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    navigate({ pathname: `/login` });\r\n  };\r\n  return {\r\n    moveToList,\r\n    page,\r\n    size,\r\n    moveToModify,\r\n    refresh,\r\n    moveToRead,\r\n    moveToLogin,\r\n    moveToCreate,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport useCustomDiet from \"../../hooks/useCustomDiet\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { Link, Navigate, useParams } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { deleteDiet, getDietEach } from \"../../api/dietApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\n\r\nconst chooseSwitch = (choose) => {\r\n  switch (choose) {\r\n    case 1:\r\n      return \"아침\";\r\n    case 2:\r\n      return \"점심\";\r\n    case 3:\r\n      return \"저녁\";\r\n    case 4:\r\n      return \"간식\";\r\n    default:\r\n      return \"아침\";\r\n  }\r\n};\r\n\r\nconst initState = {\r\n  content: \"\",\r\n  //picture: \"\",\r\n  dateobject: \"\",\r\n  updatedAt: \"\",\r\n  id: \"\",\r\n  quantity: 0,\r\n  choose: \"\",\r\n};\r\n\r\nconst DietReadComponent = () => {\r\n  const [dietParam, setDietParam] = useState([]);\r\n  const [dietChoose, setDietChoose] = useState(\"\");\r\n\r\n  const [dietId, setDietId] = useState(\"\");\r\n  const { choose, dateobject } = useParams();\r\n\r\n  const { isLogin } = useCustomLogin();\r\n  const { moveToLogin } = useCustomMove();\r\n  const {\r\n    postDietC,\r\n    moveToDietRead,\r\n    moveToDietCreate,\r\n    deleteDietC,\r\n    moveToDietList,\r\n  } = useCustomDiet();\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect isLogin -> \", isLogin);\r\n    if (!isLogin) {\r\n      alert(\"로그인이 필요합니다.\");\r\n\r\n      return moveToLogin();\r\n    }\r\n    //api\r\n    const getDietEI = async () =>\r\n      await getDietEach({ choose, dateobject })\r\n        .then((result) => {\r\n          console.log(\r\n            \"DietReadComponent.js useEffect 내 getDietEach axios 호출후 then() => \",\r\n            result\r\n          );\r\n\r\n          setDietParam(() => result);\r\n          setDietId(() => result[0].DietId);\r\n          setDietChoose(() => result[0].choose);\r\n          console.log(\r\n            \"DietReadComponent.js useEffect 내 getDietEach axios 호출후 dietParam => \",\r\n            dietParam\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          console.log(\r\n            \"DietReadComponent.js useEffect 내 getDietEach axios 호출후 catch() => \",\r\n            err\r\n          );\r\n        });\r\n\r\n    getDietEI();\r\n  }, []);\r\n\r\n  const deleteOnClick = () => {\r\n    console.log(\"DietReadComponent.js deleteOnClick() 진입 \");\r\n\r\n    if (window.confirm(\"해당 식단을 삭제하십니까?\")) {\r\n      deleteDiet({ choose, dateobject })\r\n        .then((result) => {\r\n          console.log(\r\n            \"DietReadComponent.js deleteOnClick() then() => \",\r\n            result\r\n          );\r\n          if (result.result === \"success\") {\r\n            alert(dateobject + \"일자의 식단이 삭제되었습니다.\");\r\n\r\n            moveToDietList();\r\n          }\r\n          if (result.error === \"error\") {\r\n            alert(dateobject + \"일자의 식단 삭제를 실패했습니다.\");\r\n            moveToDietRead({ dateobject, choose });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"DietReadComponent.js deleteOnClick() catch() => \", err);\r\n          alert(dateobject + \"일자의 식단 삭제를 실패했습니다.\");\r\n          moveToDietRead({ dateobject, choose });\r\n        });\r\n    } //window.confirm\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <br />\r\n\r\n      <h4>식단조회</h4>\r\n      <hr />\r\n      <br />\r\n      {dietParam && dietParam.length !== 0 && (\r\n        <React.Fragment>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>식단일자</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"dateobject\"\r\n                value={dateobject}\r\n                disabled\r\n              />\r\n              <Form.Text className=\"text-muted\"></Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>시간</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"content\"\r\n                value={chooseSwitch(choose)}\r\n                disabled\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>식단내용 / 양(단위 g/ml)</Form.Label>\r\n              {dietParam.map((d, index) => (\r\n                <Form.Control\r\n                  key={d.id}\r\n                  type=\"text\"\r\n                  name=\"content\"\r\n                  value={`${d.content}${d.quantity}`}\r\n                  disabled\r\n                />\r\n              ))}\r\n            </Form.Group>\r\n            <br />\r\n            <Link to={`../modify/${dateobject}/${dietChoose}`}>\r\n              <Button variant=\"outline-primary\">식단 수정이동</Button>\r\n            </Link>\r\n            &nbsp;\r\n            <Button\r\n              variant=\"outline-danger\"\r\n              type=\"button\"\r\n              onClick={() => deleteOnClick()}\r\n            >\r\n              삭제하기\r\n            </Button>\r\n            &nbsp;\r\n            <Link to={`../`}>\r\n              <Button variant=\"outline-secondary\">식단 달력이동</Button>\r\n            </Link>\r\n          </Form>\r\n        </React.Fragment>\r\n      )}\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DietReadComponent;\r\n","import DietReadComponent from \"../../components/diet/DietReadComponent\";\r\nimport LayoutIndex from \"../../components/layout/LayoutIndex\";\r\n\r\nconst DietReadPage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <DietReadComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietReadPage;\r\n"],"names":["Footer","_jsx","Navbar","className","children","Container","Brand","_jsxs","style","fontSize","textAlign","alt","src","width","height","props","loginState","isLogin","useCustomLogin","modalVisible","setModalVisible","useState","msg","setMsg","msgList","setMsgList","chatroomname","setChatroomname","chatroompassword","setChatroompassword","refChatRoom","useRef","refChatRoompassword","moveToLogin","refModalBody","socket","setSocket","useEffect","on","_refModalBody$current2","prev","type","id","current","scrollIntoView","behavior","block","_refModalBody$current","console","log","message","username","socketidcheck","off","_Fragment","expand","display","alignItems","justifyContent","fluid","Image","Collapse","Nav","Link","href","Form","onSubmit","e","preventDefault","alert","undefined","io","autoConnect","connect","sendData","emit","chatStartClick","InputGroup","size","Text","Control","name","onChange","target","value","ref","Button","variant","Modal","Dialog","Header","Title","onClick","window","confirm","Body","overflow","map","v","i","listStyle","flex","padding","backgroundColor","marginTop","fontWeight","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","handleSubmitChat","handleMsg","BasicMenu","_ref","date","setDate","Date","useCustomDiet","dietState","useSelector","state","dietSlice","dispatch","useDispatch","navigate","useNavigate","postDietC","dietParam","finalObjectArray","postDietAsync","deleteDietC","_ref4","choose","dateobject","deleteDietAsync","moveToDietReadAll","pathname","patchDietC","diaryParam","patchDietAsync","moveToDietRead","_ref2","replace","moveToDietModify","_ref3","moveToDietCreate","getDietListC","async","getDietListAsync","moveToDietList","getNum","param","defaultValue","parseInt","useCustomMove","refresh","setRefresh","queryParams","useSearchParams","page","get","queryDefault","createSearchParams","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","moveToModify","num","search","moveToRead","moveToCreate","chooseSwitch","DietReadComponent","setDietParam","dietChoose","setDietChoose","dietId","setDietId","useParams","getDietEach","then","result","DietId","catch","err","getDietEI","length","React","Group","Label","disabled","d","index","content","quantity","to","deleteDiet","error","DietReadPage","LayoutIndex"],"sourceRoot":""}