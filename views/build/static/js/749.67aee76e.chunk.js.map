{"version":3,"file":"static/js/749.67aee76e.chunk.js","mappings":"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","sources":["hooks/useCustomMoney.js","../node_modules/react-bootstrap/esm/Table.js","components/money/MoneyReadComponent.js","pages/money/MoneyReadPage.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getMoneyListAsync,\r\n  postMoneyAsync,\r\n  patchMoneyAsync,\r\n  deleteMoneyAsync,\r\n} from \"../slices/moneySlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomMoney = () => {\r\n  const moneyState = useSelector((state) => state.MoneySlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const postMoneyC = ({\r\n    moneyParam,\r\n    finalExpenseObjectArray,\r\n    finalIncomeObjectArray,\r\n    dateobject,\r\n  }) => {\r\n    const payload = dispatch(\r\n      postMoneyAsync({\r\n        moneyParam,\r\n        finalExpenseObjectArray,\r\n        finalIncomeObjectArray,\r\n        dateobject,\r\n      })\r\n    );\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getMoneyListC = async () => {\r\n    await dispatch(getMoneyListAsync());\r\n  };\r\n\r\n  //수정\r\n  const patchMoneyC = ({\r\n    moneyParam,\r\n    finalExpenseObjectArray,\r\n    finalIncomeObjectArray,\r\n    dateobject,\r\n    bigchoose,\r\n  }) => {\r\n    const payload = dispatch(\r\n      patchMoneyAsync({\r\n        moneyParam,\r\n        finalExpenseObjectArray,\r\n        finalIncomeObjectArray,\r\n        dateobject,\r\n        bigchoose,\r\n      })\r\n    );\r\n    return payload; //thunk에서 받은 액션결과 리듀서함수로 전달\r\n  };\r\n\r\n  const moveToMoneyRead = (dateobject) => {\r\n    navigate({ pathname: `../read/${dateobject}` });\r\n  };\r\n\r\n  const moveToMoneyList = () => {\r\n    navigate({ pathname: \"../\" });\r\n  };\r\n\r\n  const moveToMoneyModify = (dateobject) => {\r\n    navigate({ pathname: `../modify/${dateobject}` });\r\n  };\r\n\r\n  const moveToMoneyCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}` });\r\n  };\r\n\r\n  const deleteMoneyC = (id) => {\r\n    const payload = dispatch(deleteMoneyAsync(id));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    moneyState,\r\n    postMoneyC,\r\n    deleteMoneyC,\r\n    patchMoneyC,\r\n    moveToMoneyRead,\r\n    moveToMoneyModify,\r\n    moveToMoneyCreate,\r\n    getMoneyListC,\r\n    moveToMoneyList,\r\n  };\r\n};\r\n\r\nexport default useCustomMoney;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { deleteMoney, getMoney } from \"../../api/moneyApi\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport useCustomMoney from \"../../hooks/useCustomMoney\";\r\n\r\nconst chooseReturn = (number) => {\r\n  let result = \"\";\r\n  for (let n of number) {\r\n    switch (n) {\r\n      case \"1\":\r\n        return (result = \"수입\");\r\n      case \"2\":\r\n        return (result = \"지출\");\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n};\r\n\r\nconst chooseSectorExpenseReturn = (number) => {\r\n  // console.log(\r\n  //   \"MoneyCreateComponent.js chooseReturn() 진입 매개변수 => \",\r\n  //   number,\r\n  //   \"typeof -> \",\r\n  //   typeof number\r\n  // );\r\n  if (!number) {\r\n    return;\r\n  }\r\n  const str = number;\r\n  const arr = str.split(\"\");\r\n  //console.log(\"MoneyCreateComponent.js chooseReturn() 진입 배열변경 => \", arr);\r\n  let result = \"\";\r\n  for (let n of arr) {\r\n    switch (n) {\r\n      case \"1\":\r\n        return (result = \"식비\");\r\n      case \"2\":\r\n        return (result = \"교육비\"); //식비  교육비 공과금 의류비 생필품 차량교통비 의류비 병원or보험비or약국 주거비 도서문화오락 기타\r\n      case \"3\":\r\n        return (result = \"공과금\");\r\n      case \"4\":\r\n        return (result = \"의류비\");\r\n      case \"5\":\r\n        return (result = \"생필품\");\r\n      case \"6\":\r\n        return (result = \"차량교통비\");\r\n      case \"7\":\r\n        return (result = \"의료보험\");\r\n      case \"8\":\r\n        return (result = \"주거비\");\r\n      case \"9\":\r\n        return (result = \"도서문화오락\");\r\n      case \"10\":\r\n        return (result = \"투자\");\r\n      case \"11\":\r\n        return (result = \"기타\");\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  //console.log(result);\r\n};\r\n\r\nconst chooseSectorIncomeReturn = (chooseincome) => {\r\n  if (!chooseincome) {\r\n    return;\r\n  }\r\n  //console.log(\"chooseSectorIncomeReturn 매개변수 -> \", chooseincome);\r\n  switch (chooseincome) {\r\n    case \"21\":\r\n      return \"급여\";\r\n    case \"22\":\r\n      return \"투자\";\r\n    case \"23\":\r\n      return \"그외\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nconst initState = {\r\n  content: \"\",\r\n  dateobject: \"\",\r\n  updatedAt: \"\",\r\n  id: \"\",\r\n  income: 0,\r\n  expense: 0,\r\n};\r\n\r\nconst addMoney = (param) => {\r\n  const earray = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"];\r\n\r\n  //console.log(\"addMoney() 매개변수\", param);\r\n\r\n  const spliceall = [];\r\n  for (let d of earray) {\r\n    //console.log(\"addMoney() 배열 \", earray);\r\n\r\n    let iof = earray.indexOf(d);\r\n\r\n    //console.log(\"addMoney() 내 배열인덱스\", iof);\r\n    param.filter((i) => {\r\n      //console.log(\"addMoney() 내 whenchoose \", i.whenchoose);\r\n      //console.log(\"addMoney() 내 배열값 \", d);\r\n\r\n      if (i.whenchoose === d) {\r\n        //console.log(\"addMoney() 내 일치\");\r\n        spliceall.push(d);\r\n      }\r\n    });\r\n  }\r\n\r\n  spliceall.forEach((a) => {\r\n    const indexearray = earray.indexOf(a);\r\n    earray.splice(indexearray, 1);\r\n  });\r\n\r\n  //console.log(\"addMoney 결과 => \", earray);\r\n  return earray;\r\n};\r\n\r\nconst addExerciseMap = (param) => {\r\n  const earray = [1, 2, 3];\r\n\r\n  for (let d of earray) {\r\n    let iof = earray.indexOf(d);\r\n\r\n    //console.log(\"d 인덱스\", d);\r\n    param.filter((i) => {\r\n      if (i === d) earray.splice(iof);\r\n    });\r\n  }\r\n  //console.log(\"earray 결과 => \", earray);\r\n};\r\n\r\nconst convertDigit = (amount) => {\r\n  return Number(amount).toLocaleString(\"ko-KR\");\r\n};\r\n\r\nconst MoneyReadComponent = () => {\r\n  const [moneyParam, setMoneyParam] = useState({});\r\n\r\n  //console.log(\"moneyParam -> \", moneyParam);\r\n  const { dateobject } = useParams();\r\n  const { exceptionHandle } = useCustomLogin();\r\n  const { moveToMoneyRead, moveToMoneyList } = useCustomMoney();\r\n  const [moneyDetailIncomeParam, setMoneyDetailIncomeParam] = useState([]);\r\n  const [moneyDetailExpenseParam, setMoneyDetailExpenseParam] = useState([]);\r\n\r\n  // console.log(\r\n  //   \"MoneyReadComponent.js useEffect() 진입 objectdate=> \",\r\n  //   dateobject\r\n  // );\r\n\r\n  //api\r\n  useEffect(() => {\r\n    const getExerciseEI = async () =>\r\n      await getMoney(dateobject)\r\n        .then((result) => {\r\n          if (result !== null) {\r\n            // console.log(\r\n            //   \"MoneyReadComponent.js useEffect 내 getMoney axios 호출후 then() => \",\r\n            //   result\r\n            // );\r\n\r\n            moneyParam[\"id\"] = result.id;\r\n            setMoneyParam(moneyParam);\r\n\r\n            result.result.forEach((i) => {\r\n              if (i.choose === \"1\") {\r\n                //let newIncome = moneyDetailIncomeParam.concat(i);\r\n                //setMoneyDetailIncomeParam(newIncome);\r\n                setMoneyDetailIncomeParam((income) => [...income, i]);\r\n              }\r\n              if (i.choose === \"2\") {\r\n                // let newExpense = moneyDetailExpenseParam.concat(i);\r\n                // setMoneyDetailExpenseParam(newExpense);\r\n                setMoneyDetailExpenseParam((expense) => [...expense, i]);\r\n              }\r\n            });\r\n          } //if 결과 null 아닐경우\r\n        })\r\n        .catch((err) => {\r\n          // console.log(\r\n          //   \"MoneyReadComponent.js useEffect 내 getMoney axios 호출후 catch() => \",\r\n          //   err\r\n          // );\r\n          exceptionHandle(err);\r\n        }); //catch\r\n\r\n    getExerciseEI();\r\n\r\n    return () => {\r\n      setMoneyParam([]);\r\n      setMoneyDetailExpenseParam([]);\r\n      setMoneyDetailIncomeParam([]);\r\n    };\r\n  }, []);\r\n\r\n  const deleteOnClick = (bigchoose) => {\r\n    // console.log(\r\n    //   \"MoneyReadComponent.js deleteOnClick() 삭제할 가계부 진입 bigchoose -> \",\r\n    //   bigchoose\r\n    // );\r\n    if (window.confirm(\"해당 가계부를 삭제합니까?\")) {\r\n      deleteMoney({ dateobject, bigchoose })\r\n        .then((result) => {\r\n          // console.log(\r\n          //   \"MoneyReadComponent.js deleteOnClick() then() => \",\r\n          //   result\r\n          // );\r\n          if (result.result === \"success\") {\r\n            alert(dateobject + \"일자의 가계부가 삭제되었습니다.\");\r\n\r\n            moveToMoneyList();\r\n          }\r\n          if (result.error === \"error\") {\r\n            alert(dateobject + \"일자의 가계부 삭제를 실패했습니다.\");\r\n            moveToMoneyRead(dateobject);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          //console.log(\"MoneyReadComponent.js deleteOnClick() catch() => \", err);\r\n          alert(dateobject + \"일자의 가계부 삭제를 실패했습니다.\");\r\n          moveToMoneyRead({\r\n            dateobject: dateobject,\r\n            id: moneyParam.id,\r\n          });\r\n        });\r\n    } //window.confirm\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <br />\r\n      <h4>가계부조회</h4>\r\n      <hr />\r\n      <br />\r\n      <Link to={\"../list\"}>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          type=\"button\"\r\n          // onClick={handleDetailOnClick}\r\n        >\r\n          가계부달력이동\r\n        </Button>\r\n      </Link>\r\n      &nbsp;&nbsp;{\" \"}\r\n      {moneyDetailIncomeParam.length === 0 && (\r\n        <Link to={`../create/${dateobject}?choose=1`}>\r\n          <Button variant=\"outline-primary\" type=\"button\">\r\n            <Image\r\n              src=\"/img/star-struck.png\"\r\n              style={{ width: \"20px\", height: \"20px\" }}\r\n              rounded\r\n            />\r\n            수입가계부작성하러가기\r\n          </Button>\r\n        </Link>\r\n      )}\r\n      {moneyDetailExpenseParam.length === 0 && (\r\n        <Link to={`../create/${dateobject}?choose=2`}>\r\n          <Button variant=\"outline-primary\" type=\"button\">\r\n            <Image\r\n              src=\"/img/rolling-eyes.png\"\r\n              style={{ width: \"20px\", height: \"20px\" }}\r\n              rounded\r\n            />\r\n            지출가계부작성하러가기\r\n          </Button>\r\n        </Link>\r\n      )}\r\n      <br />\r\n      <br />\r\n      {moneyDetailIncomeParam.length !== 0 && (\r\n        <>\r\n          <Card\r\n            style={{\r\n              width: \"35rem\",\r\n              display: \"inline-block\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Card.Body>\r\n              <Card.Title style={{ textAlign: \"center\" }}>\r\n                <>\r\n                  {dateobject} 일자 &nbsp;\r\n                  <Image\r\n                    src=\"/img/star-struck.png\"\r\n                    style={{ width: \"20px\", height: \"20px\" }}\r\n                    rounded\r\n                  />\r\n                  수입가계부\r\n                </>\r\n              </Card.Title>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <Table responsive=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>항목</th>\r\n                    <th>내용</th>\r\n                    <th>금액</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {moneyDetailIncomeParam.map((i) => (\r\n                    <React.Fragment key={i.id}>\r\n                      <tr>\r\n                        <td> {chooseSectorIncomeReturn(i.choosesector)}</td>\r\n                        <td> {i.content}</td>\r\n                        <td>{convertDigit(i.amount)}원</td>\r\n                      </tr>\r\n                    </React.Fragment>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </ListGroup>\r\n            <Card.Body style={{ textAlign: \"center\" }}>\r\n              <Link to={`../modify/${dateobject}/1`}>\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  type=\"button\"\r\n                  //onClick={handleDetailOnClick}\r\n                >\r\n                  수정하러가기\r\n                </Button>\r\n              </Link>\r\n              &nbsp; &nbsp;\r\n              <Button\r\n                variant=\"outline-warning\"\r\n                type=\"button\"\r\n                onClick={() => deleteOnClick(1)}\r\n              >\r\n                삭제\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n          &nbsp; &nbsp;\r\n        </>\r\n      )}\r\n      {moneyDetailExpenseParam.length !== 0 && (\r\n        <>\r\n          <Card\r\n            style={{\r\n              width: \"35rem\",\r\n              display: \"inline-block\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Card.Body>\r\n              <Card.Title style={{ textAlign: \"center\" }}>\r\n                {dateobject} 일자 &nbsp;\r\n                <Image\r\n                  src=\"/img/rolling-eyes.png\"\r\n                  style={{ width: \"20px\", height: \"20px\" }}\r\n                  rounded\r\n                />\r\n                지출가계부\r\n              </Card.Title>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <Table responsive=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>항목</th>\r\n                    <th>내용</th>\r\n                    <th>금액</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {moneyDetailExpenseParam.map((i) => (\r\n                    <React.Fragment key={i.id}>\r\n                      <tr>\r\n                        <td> {chooseSectorExpenseReturn(i.choosesector)}</td>\r\n                        <td> {i.content}</td>\r\n                        <td>{convertDigit(i.amount)}원</td>\r\n                      </tr>\r\n                    </React.Fragment>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </ListGroup>\r\n\r\n            <Card.Body style={{ textAlign: \"center\" }}>\r\n              <Link to={`../modify/${dateobject}/2`}>\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  type=\"button\"\r\n                  //onClick={handleDetailOnClick}\r\n                >\r\n                  수정하러가기\r\n                </Button>\r\n              </Link>\r\n              &nbsp; &nbsp;\r\n              <Button\r\n                variant=\"outline-warning\"\r\n                type=\"button\"\r\n                onClick={() => deleteOnClick(2)}\r\n              >\r\n                삭제\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n          &nbsp; &nbsp;\r\n        </>\r\n      )}\r\n      <br />\r\n      <br />\r\n      {/* {moneyParam &&\r\n        moneyParam.map((i) => (\r\n          <>\r\n            <React.Fragment key={i.id}>\r\n              <Card style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n                \r\n                <Card.Body>\r\n                  <Card.Title style={{ textAlign: \"center\" }}>\r\n                  </Card.Title>\r\n                </Card.Body>\r\n                <ListGroup className=\"list-group-flush\">\r\n                  <ListGroup.Item style={{ textAlign: \"center\" }}>\r\n                    {chooseReturn(i.choose)}\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item style={{ textAlign: \"center\" }}>\r\n                    {\" \"}\r\n                    {i.minute}분\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item style={{ textAlign: \"center\" }}>\r\n                    {i.content}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n                <Card.Body style={{ textAlign: \"center\" }}>\r\n                <Card.Link href=\"#\">운동달력이동</Card.Link> \r\n                  <Link to={`../modify/${i.dateobject}`}>\r\n                    <Button\r\n                      variant=\"outline-primary\"\r\n                      type=\"button\"\r\n                      onClick={handleDetailOnClick}\r\n                    >\r\n                      수정\r\n                    </Button>\r\n                  </Link>\r\n                  &nbsp; &nbsp;\r\n                  <Button\r\n                    variant=\"outline-warning\"\r\n                    type=\"button\"\r\n                    onClick={() => deleteOnClick(i.whenchoose)}\r\n                  >\r\n                    삭제\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </React.Fragment>\r\n            &nbsp; &nbsp;\r\n          </>\r\n        ))} */}\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoneyReadComponent;\r\n","import LayoutIndex from \"../../components/layout/LayoutIndex\";\r\nimport MoneyReadComponent from \"../../components/money/MoneyReadComponent\";\r\nconst MoneyReadPage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <MoneyReadComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoneyReadPage;\r\n"],"names":["useCustomMoney","moneyState","useSelector","state","MoneySlice","dispatch","useDispatch","navigate","useNavigate","postMoneyC","_ref","moneyParam","finalExpenseObjectArray","finalIncomeObjectArray","dateobject","postMoneyAsync","deleteMoneyC","id","deleteMoneyAsync","patchMoneyC","_ref2","bigchoose","patchMoneyAsync","moveToMoneyRead","pathname","moveToMoneyModify","moveToMoneyCreate","getMoneyListC","async","getMoneyListAsync","moveToMoneyList","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","chooseSectorExpenseReturn","number","arr","split","n","chooseSectorIncomeReturn","chooseincome","convertDigit","amount","Number","toLocaleString","MoneyReadComponent","setMoneyParam","useState","useParams","exceptionHandle","useCustomLogin","moneyDetailIncomeParam","setMoneyDetailIncomeParam","moneyDetailExpenseParam","setMoneyDetailExpenseParam","useEffect","getMoney","then","result","forEach","i","choose","income","expense","catch","err","getExerciseEI","deleteOnClick","window","confirm","deleteMoney","alert","error","_jsxs","Link","to","Button","type","length","Image","src","style","width","height","rounded","_Fragment","Card","display","textAlign","Body","Title","ListGroup","Table","map","choosesector","content","onClick","MoneyReadPage","LayoutIndex"],"sourceRoot":""}