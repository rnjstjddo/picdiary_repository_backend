{"version":3,"file":"static/js/545.086363d6.chunk.js","mappings":"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","sources":["utils/xy.js","api/openApi.js","components/layout/Footer.js","components/menus/BasicMenu.js","components/layout/Header.js","components/layout/LayoutIndex.js","hooks/useCustomMove.js","hooks/useCustomExercise.js","components/exercise/ExerciseListComponent.js","pages/exercise/ExerciseListPage.js"],"sourcesContent":["/** 위도, 경도를 x,y 격자 포인트로 변경 */\r\nvar RE = 6371.00877; // 지구 반경(km)\r\nvar GRID = 5.0; // 격자 간격(km)\r\nvar SLAT1 = 30.0; // 투영 위도1(degree)\r\nvar SLAT2 = 60.0; // 투영 위도2(degree)\r\nvar OLON = 126.0; // 기준점 경도(degree)\r\nvar OLAT = 38.0; // 기준점 위도(degree)\r\nvar XO = 43; // 기준점 X좌표(GRID)\r\nvar YO = 136; // 기1준점 Y좌표(GRID)\r\n\r\n// LCC DFS 좌표변환 ( code : \"toXY\"(위경도->좌표, v1:위도, v2:경도), \"toLL\"(좌표->위경도,v1:x, v2:y) )\r\nexport const dfs_xy_conv = (code, v1, v2) => {\r\n  // LCC DFS 좌표변환을 위한 기초 자료\r\n  console.log(\" dfs_xy_conv 함수진입\");\r\n  var DEGRAD = Math.PI / 180.0;\r\n  var RADDEG = 180.0 / Math.PI;\r\n\r\n  var re = RE / GRID;\r\n  var slat1 = SLAT1 * DEGRAD;\r\n  var slat2 = SLAT2 * DEGRAD;\r\n  var olon = OLON * DEGRAD;\r\n  var olat = OLAT * DEGRAD;\r\n\r\n  var sn =\r\n    Math.tan(Math.PI * 0.25 + slat2 * 0.5) /\r\n    Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\r\n  var sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n  sf = (Math.pow(sf, sn) * Math.cos(slat1)) / sn;\r\n  var ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\r\n  ro = (re * sf) / Math.pow(ro, sn);\r\n  var rs = {};\r\n  if (code == \"toXY\") {\r\n    rs[\"lat\"] = v1;\r\n    rs[\"lng\"] = v2;\r\n    var ra = Math.tan(Math.PI * 0.25 + v1 * DEGRAD * 0.5);\r\n    ra = (re * sf) / Math.pow(ra, sn);\r\n    var theta = v2 * DEGRAD - olon;\r\n    if (theta > Math.PI) theta -= 2.0 * Math.PI;\r\n    if (theta < -Math.PI) theta += 2.0 * Math.PI;\r\n    theta *= sn;\r\n    rs[\"x\"] = Math.floor(ra * Math.sin(theta) + XO + 0.5);\r\n    rs[\"y\"] = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\r\n  } else {\r\n    rs[\"x\"] = v1;\r\n    rs[\"y\"] = v2;\r\n    var xn = v1 - XO;\r\n    var yn = ro - v2 + YO;\r\n    ra = Math.sqrt(xn * xn + yn * yn);\r\n    if (sn < 0.0) return -ra;\r\n    var alat = Math.pow((re * sf) / ra, 1.0 / sn);\r\n    alat = 2.0 * Math.atan(alat) - Math.PI * 0.5;\r\n\r\n    if (Math.abs(xn) <= 0.0) {\r\n      theta = 0.0;\r\n    } else {\r\n      if (Math.abs(yn) <= 0.0) {\r\n        theta = Math.PI * 0.5;\r\n        if (xn < 0.0) return -theta;\r\n      } else theta = Math.atan2(xn, yn);\r\n    }\r\n    var alon = theta / sn + olon;\r\n    rs[\"lat\"] = alat * RADDEG;\r\n    rs[\"lng\"] = alon * RADDEG;\r\n  }\r\n  return rs;\r\n};\r\n","import axios from \"axios\";\r\nimport { dfs_xy_conv } from \"../utils/xy\";\r\n\r\n//const URL = \"http://apis.data.go.kr/B551182/\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0\r\nconst URL =\r\n  \"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\";\r\n//http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getUltraSrtNcst\r\n//?serviceKey=인증키&numOfRows=10&pageNo=1\r\n//&base_date=20210628&base_time=0600&nx=55&ny=127\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\nconsole.log(apiKey);\r\n\r\nconst navigatorFn = () => {\r\n  if (navigator.geolocation) {\r\n    function saveCoords(coordsObj) {\r\n      localStorage.setItem(\"COORDS\", JSON.stringify(coordsObj));\r\n      //localstorage의 key, value 값은 모두 string 타입으로 저장되기때문에 변환시켜준다.\r\n    }\r\n\r\n    function handleSuccess(position) {\r\n      const latitude = position.coords?.latitude;\r\n      const longitude = position.coords?.longitude;\r\n      const coordsObj = {\r\n        // 객체의 key,  value 값이 동일할 때에는 한번만 써줘도 된다.\r\n        latitude, // localStorage에 객체로 value에 저장하기위해서 객체에 넣어준다.\r\n        longitude,\r\n      };\r\n      saveCoords(coordsObj); // localStorage에 위치 저장\r\n    }\r\n\r\n    function handleError() {\r\n      console.log(\"cant not access to location\");\r\n    }\r\n\r\n    function askForCoords() {\r\n      navigator.geolocation.getCurrentPosition(handleSuccess, handleError);\r\n    }\r\n\r\n    let loadedCoords = localStorage.getItem(\"COORDS\");\r\n    console.log(\r\n      \"loadCoords 로컬저장소에서 저장된 위도경도 가져오기 : \",\r\n      JSON.stringify(loadedCoords)\r\n    );\r\n    loadedCoords = JSON.parse(loadedCoords);\r\n\r\n    if (loadedCoords === null) {\r\n      // localStorage에 좌표값이 저장되어있지않다면\r\n      askForCoords(); // 좌표값을 물어본다\r\n    }\r\n    const xyresult = dfs_xy_conv(\r\n      \"toXY\",\r\n      Number(loadedCoords?.latitude),\r\n      Number(loadedCoords?.longitude)\r\n    );\r\n    return xyresult;\r\n  } //if\r\n}; //navigatorFn\r\n\r\nexport const weatherapi = async ({ weatherDate, weatherTime }) => {\r\n  // const {  } = params;\r\n\r\n  var weatherapiresult = null;\r\n\r\n  const xyresult = navigatorFn();\r\n  console.log(\"weatherapi() 내 위경도를 xy변경후 : \", xyresult);\r\n  console.log(\"weatherapi() 내 weatherDate 확인 ->  \", weatherDate);\r\n  console.log(\"weatherapi() 내 weatherTime 확인 ->  : \", weatherTime);\r\n  try {\r\n    const result = await axios.get(URL, {\r\n      params: {\r\n        serviceKey: apiKey,\r\n        numOfRows: 10,\r\n        pageNo: 1,\r\n        dataType: \"JSON\",\r\n        base_date: weatherDate,\r\n        base_time: weatherTime,\r\n        nx: xyresult.x,\r\n        ny: xyresult.y,\r\n      },\r\n    });\r\n    weatherapiresult = result?.data?.response?.body?.items?.item;\r\n    console.log(\"openAPI axios 결과 \", weatherapiresult);\r\n    return weatherapiresult;\r\n  } catch (e) {\r\n    console.log(\"openAPI axios 에러발생\", e);\r\n  }\r\n}; //weatherapi\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <span style={{ fontSize: \"15px\", textAlign: \"right\" }}>\r\n            <img\r\n              alt=\"\"\r\n              src=\"/img/thumbs-up.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            \"미래는 오늘 여러분이 무엇을 하느냐에 달려 있습니다.\" - 마하트마\r\n            간디 <br />\r\n            The future depends on what we do in the present. -Mahatma Gandhi\r\n          </span>\r\n        </Navbar.Brand>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Footer;\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\n//채팅\r\nimport { io } from \"socket.io-client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { chatAdd, chatGetPost } from \"../../api/chat\";\r\nimport { weatherapi } from \"../../api/openApi\";\r\n\r\nconst BasicMenu = (props) => {\r\n  const { loginState, isLogin } = useCustomLogin();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  //채팅\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgList, setMsgList] = useState([]);\r\n  const [chatroomname, setChatroomname] = useState(\"\");\r\n  const [chatroompassword, setChatroompassword] = useState(\"\");\r\n\r\n  const refChatRoom = useRef();\r\n  const refChatRoompassword = useRef();\r\n  const { moveToLogin } = useCustomLogin();\r\n  const refModalBody = useRef();\r\n  //소켓\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const handleMsg = (e) => {\r\n    //console.log(\"handleMsg 이벤트핸들러 진입 ->\", e.target.value);\r\n    setMsg(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroomnameInput = (e) => {\r\n    //console.log(\"handleChatroomnameInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroomname(() => e.target.value);\r\n  };\r\n\r\n  const handleChatroompasswordInput = (e) => {\r\n    //console.log(\"handleChatroompasswordInput 이벤트핸들러 진입 ->\", e.target.value);\r\n    setChatroompassword(() => e.target.value);\r\n  };\r\n  const chatStartClick = (e) => {\r\n    console.log(\"chatStartClick 이벤트핸들러함수 진입 \");\r\n\r\n    e.preventDefault();\r\n    if (!isLogin) {\r\n      alert(\"로그인 후 이용가능합니다.\");\r\n      return moveToLogin();\r\n    }\r\n\r\n    if (chatroomname === \"\" || chatroomname === undefined) {\r\n      alert(\"방 이름을 입력하세요!\");\r\n      return;\r\n    }\r\n    if (chatroompassword === \"\" || chatroompassword === undefined) {\r\n      alert(\"방 비밀번호를 입력하세요!\");\r\n      return;\r\n    }\r\n\r\n    //네임스페이스둘경우\r\n    //const socket = io(\"/pic\", {\r\n    //const socket = io({\r\n    //const socket = io(\"https://picdiary2025.store/\", {\r\n    //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n    //const socket = io(\"52.78.155.180\", {\r\n\r\n    //const socket = io(\"wss://picdiary2025.store:3000/ws\", {\r\n    const socket = io(\"http://52.78.155.180:8082\", {\r\n      //path: \"/my-custom-path/\",\r\n      //추가\r\n      transports: [\"websocket\"], //폴링시도\r\n      //path: \"/ws\",\r\n      autoConnect: false,\r\n\r\n      // query: {\r\n      //   username: loginState, //email\r\n      //   chatroomname: e.target.chatroomname.value,\r\n      //   chatroompassword: e.target.chatroompassword.value,\r\n      // },\r\n    });\r\n    socket.connect();\r\n\r\n    setSocket(() => socket);\r\n\r\n    const sendData = {\r\n      username: loginState, //email\r\n      chatroomname,\r\n      chatroompassword,\r\n    };\r\n    socket.emit(\"roomcreate\", sendData);\r\n  }; //chatStartClick\r\n\r\n  const handleSubmitChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"handleSubmitChat() 진입 \");\r\n    const sendData = {\r\n      //message: e.target.chatcontents.value,\r\n      message: msg,\r\n      username: loginState,\r\n      chatroomname,\r\n    };\r\n\r\n    socket.emit(\"message\", sendData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    function messageCallback(msg) {\r\n      console.log(\"handleSubmitChat() 진입 message 콜백함수 진입 msg-> \", msg);\r\n\r\n      const { message, username, chatroomname } = msg;\r\n\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: message,\r\n          type: loginState === username ? \"me\" : \"other\",\r\n          id: username,\r\n        },\r\n      ]);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n      setMsg(() => \"\");\r\n    }\r\n    function goodbyeCallback(msg) {\r\n      console.log(\r\n        \"out 이벤트 리액트에서 받아서 goodbyeCallback() 진입 msg => \",\r\n        msg\r\n      );\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg.message,\r\n          type: \"goodbye\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n\r\n      const socketidcheck = socket.id;\r\n      console.log(\"goodbyeCallback() 소켓 id확인 \", socketidcheck);\r\n    }\r\n\r\n    function roomcreateCallback(msg) {\r\n      setMsgList((prev) => [\r\n        ...prev,\r\n        {\r\n          msg: msg,\r\n          type: \"welcome\",\r\n          id: \"\",\r\n        },\r\n      ]);\r\n      setModalVisible(() => true);\r\n      refModalBody.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    } //callback\r\n    socket?.on(\"roomcreate\", roomcreateCallback);\r\n    socket?.on(\"message\", messageCallback);\r\n    socket?.on(\"out\", goodbyeCallback);\r\n\r\n    return () => {\r\n      socket?.off(\"message\");\r\n      socket?.off(\"out\");\r\n      socket?.off(\"roomcreate\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const chatCloseModal = () => {\r\n    console.log(\"chatCloseModal() 진입\");\r\n    if (window.confirm(\"채팅방에서 나가시겠습니까?\")) {\r\n      console.log(\"chatCloseModal onClick 내 out 소켓이벤트 전달전 \");\r\n      socket.emit(\"out\", { chatroomname, loginState, chatroompassword });\r\n      setSocket(null);\r\n      setMsgList([]);\r\n      setChatroomname(\"\");\r\n      setChatroompassword(\"\");\r\n      setModalVisible(() => false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"bg-body-tertiary\"\r\n        expand=\"lg\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Container fluid>\r\n          <Navbar.Brand>\r\n            <Image\r\n              src=\"/img/sunglass.png\"\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n            />\r\n            하루관리\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {isLogin ? (\r\n                <>\r\n                  <Nav.Link href=\"/diary\">사진일기</Nav.Link>\r\n                  <Nav.Link href=\"/diet\">식단관리</Nav.Link>\r\n                  <Nav.Link href=\"/exercise\">운동관리</Nav.Link>\r\n                  <Nav.Link href=\"/money\">금전관리</Nav.Link>\r\n                  <Nav.Link href=\"/logout\">로그아웃</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Nav.Link href=\"/login\">로그인</Nav.Link>\r\n                  <Nav.Link href=\"/join\">회원가입</Nav.Link>\r\n                </>\r\n              )}\r\n            </Nav>\r\n            <Form onSubmit={(e) => chatStartClick(e)}>\r\n              {\" \"}\r\n              <InputGroup size=\"sm\" style={{ width: \"600px\" }}>\r\n                <InputGroup.Text>채팅방명</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroomname\"\r\n                  onChange={handleChatroomnameInput}\r\n                  value={chatroomname}\r\n                  ref={refChatRoom}\r\n                />\r\n                <InputGroup.Text>방비밀번호</InputGroup.Text>\r\n                <Form.Control\r\n                  //type=\"search\"\r\n                  //className=\"me-2\"\r\n                  type=\"text\"\r\n                  name=\"chatroompassword\"\r\n                  ref={refChatRoompassword}\r\n                  onChange={handleChatroompasswordInput}\r\n                  value={chatroompassword}\r\n                />\r\n                <Button variant=\"outline-secondary\" type=\"submit\">\r\n                  채팅하기\r\n                </Button>\r\n              </InputGroup>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {modalVisible && (\r\n        <>\r\n          <div className=\"modal show\" style={{ display: \"block\" }}>\r\n            <Modal.Dialog>\r\n              <Modal.Header>\r\n                <Modal.Title> 채팅방명 : {chatroomname} </Modal.Title>\r\n                &nbsp; &nbsp;\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  style={{ textAlign: \"left\" }}\r\n                  onClick={() => chatCloseModal()}\r\n                  type=\"button\"\r\n                >\r\n                  채팅창닫기\r\n                </Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div style={{ overflow: \"scroll\", height: \"500px\" }}>\r\n                  <ul>\r\n                    {msgList.map((v, i) =>\r\n                      v.type === \"welcome\" || v.type === \"goodbye\" ? (\r\n                        <li key={i} style={{ listStyle: \"none\" }}>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                          <div>{v.msg}</div>\r\n                          <div\r\n                            style={{\r\n                              height: \"0.5px\",\r\n                              flex: \"1 1 auto\",\r\n                              padding: \"0 10px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          />\r\n                        </li>\r\n                      ) : v.type === \"me\" ? (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_1`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#cecece\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      ) : (\r\n                        <li\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            listStyle: \"none\",\r\n                          }}\r\n                          key={`${i}_2`}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              marginTop: \"5px\",\r\n                              fontSize: \"13px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {v.id}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              padding: \"5px\",\r\n                              display: \"inline-block\",\r\n                              borderTopRightRadius: \"20px\",\r\n                              borderBottomLeftRadius: \"20px\",\r\n                              borderBottomRightRadius: \"20px\",\r\n                              backgroundColor: \"#000\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                          >\r\n                            {v.msg}\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    )}\r\n                    <li ref={refModalBody} style={{ listStyle: \"none\" }} />\r\n                  </ul>\r\n                </div>\r\n              </Modal.Body>\r\n              <Form onSubmit={(e) => handleSubmitChat(e)}>\r\n                <Modal.Footer>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                      채팅내용\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                      onChange={(e) => handleMsg(e)}\r\n                      value={msg}\r\n                      name=\"chatcontents\"\r\n                    />\r\n                  </InputGroup>\r\n\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    type=\"submit\"\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    메시지보내기\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal.Dialog>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicMenu;\r\n","import BasicMenu from \"../menus/BasicMenu\";\r\n\r\nconst Header = (props) => {\r\n  return <BasicMenu isLogin={props.isLogin} />;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, cloneElement } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst LayoutIndex = ({ children }) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const { loginState, isLogin } = useCustomLogin();\r\n\r\n  //console.log(\"loginState -> \", loginState);\r\n  //console.log(\"isLogin -> \", isLogin);\r\n\r\n  // const clonedElement = cloneElement(children, { today: date });\r\n\r\n  return (\r\n    <>\r\n      <Header isLogin={isLogin} />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutIndex;\r\n","import { useState } from \"react\";\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n  if (!param) {\r\n    return defaultValue;\r\n  }\r\n  return parseInt(param);\r\n};\r\n\r\nconst useCustomMove = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const [queryParams] = useSearchParams();\r\n\r\n  const page = queryParams.get(\"page\") ? parseInt(queryParams.get(\"page\")) : 1;\r\n  const size = queryParams.get(\"size\") ? parseInt(queryParams.get(\"size\")) : 10;\r\n\r\n  const queryDefault = createSearchParams({ page, size }).toString();\r\n\r\n  const moveToList = (pageParam) => {\r\n    let queryStr = \"\";\r\n\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    //    navigate({ pathname: `../list`, search: queryStr });\r\n\r\n    setRefresh(!refresh);\r\n  }; //moveToList\r\n\r\n  //추가\r\n  const moveToModify = (num) => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToRead = (num) => {\r\n    navigate({ pathname: `../read/${num}`, search: queryDefault });\r\n  };\r\n\r\n  //추가\r\n  const moveToCreate = () => {\r\n    navigate({ pathname: `../create` });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    navigate({ pathname: `/login` });\r\n  };\r\n  return {\r\n    moveToList,\r\n    page,\r\n    size,\r\n    moveToModify,\r\n    refresh,\r\n    moveToRead,\r\n    moveToLogin,\r\n    moveToCreate,\r\n  };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getExerciseListAsync,\r\n  postExerciseAsync,\r\n  patchExerciseAsync,\r\n  deleteExerciseAsync,\r\n} from \"../slices/exerciseSlice\";\r\nimport { replace, useNavigate } from \"react-router-dom\";\r\n\r\nconst useCustomExercise = () => {\r\n  const exerciseState = useSelector((state) => state.exerciseSlice);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const postExerciseC = ({ diaryParam, picture }) => {\r\n    const payload = dispatch(postExerciseAsync({ diaryParam, picture }));\r\n    return payload; //thunk후 액션\r\n  };\r\n\r\n  //\r\n  const getExerciseListC = async () => {\r\n    await dispatch(getExerciseListAsync());\r\n  };\r\n\r\n  //수정\r\n  const patchExerciseC = ({ exerciseParam }) => {\r\n    const payload = dispatch(patchExerciseAsync({ exerciseParam }));\r\n    return payload; //thunk에서 받은 액션결과전달\r\n  };\r\n\r\n  const moveToExerciseRead = (dateobject) => {\r\n    navigate({ pathname: `../read/${dateobject}` });\r\n  };\r\n\r\n  const moveToExerciseList = () => {\r\n    navigate({ pathname: \"../\", replace: \"true\" });\r\n  };\r\n\r\n  const moveToExerciseModify = ({ dateobject, whenchoose }) => {\r\n    navigate({ pathname: `../modify/${dateobject}/${whenchoose}` });\r\n  };\r\n\r\n  const moveToExerciseCreate = (dateobject) => {\r\n    navigate({ pathname: `../create/${dateobject}`, replace: \"true\" });\r\n  };\r\n\r\n  const deleteExerciseC = (id) => {\r\n    const payload = dispatch(deleteExerciseAsync(id));\r\n    return payload;\r\n  };\r\n\r\n  return {\r\n    exerciseState,\r\n    postExerciseC,\r\n    deleteExerciseC,\r\n    patchExerciseC,\r\n    moveToExerciseRead,\r\n    moveToExerciseModify,\r\n    moveToExerciseCreate,\r\n    getExerciseListC,\r\n    moveToExerciseList,\r\n  };\r\n};\r\n\r\nexport default useCustomExercise;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { Link, Navigate, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport \"../layout/stylesCalendar.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport useCustomExercise from \"../../hooks/useCustomExercise\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { getChooseExercise, getExerciseList } from \"../../api/exerciseApi\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst whenchooseReturn = (whenchoose) => {\r\n  switch (whenchoose) {\r\n    case \"1\":\r\n      return \"아침\";\r\n    case \"2\":\r\n      return \"점심\";\r\n\r\n    case \"3\":\r\n      return \"저녁\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nconst imageReturn = (whenchoose) => {\r\n  switch (whenchoose) {\r\n    case \"1\":\r\n      return \"bicep\";\r\n    case \"2\":\r\n      return \"tennis\";\r\n\r\n    case \"3\":\r\n      return \"basketball\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst chooseReturn = (choose) => {\r\n  switch (choose) {\r\n    case \"1\":\r\n      return \"달리기\";\r\n    case \"2\":\r\n      return \"웨이트\";\r\n    case \"3\":\r\n      return `구기종목or복싱`;\r\n    case \"4\":\r\n      return \"등산\";\r\n    case \"5\":\r\n      return \"필라테스요가\";\r\n\r\n    case \"6\":\r\n      return \"그외\";\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst makeCalendar = (d) => {\r\n  let date = new Date(d);\r\n  const currentYear = new Date(date).getFullYear(); //예)Mon Apr 01 2024 10:27:04 GMT+0900 (한국 표준시)\r\n  const currentMonth = new Date(date).getMonth() + 1;\r\n  const firstDay = new Date(date.setDate(1)).getDay(); //1 앞에0안붙는다\r\n\r\n  //현재 달력첫째날\r\n  let calfirst = \"\";\r\n  function getCalfirst() {\r\n    calfirst += `${currentYear}-`;\r\n\r\n    if (currentMonth < 10) {\r\n      calfirst += `0${currentMonth}`;\r\n    } else {\r\n      calfirst += `${currentMonth}`;\r\n    }\r\n    //calfirst += `01`\r\n    return calfirst;\r\n  } //calfirst 현재달력첫날\r\n\r\n  const lastDay = new Date(currentYear, currentMonth, 0).getDate();\r\n  //console.log(\"lastDay값 ->\"+lastDay)//30\r\n  const limitDay = firstDay + lastDay;\r\n  //console.log(\"limitDay값 ->\"+limitDay)//31\r\n  const nextDay = Math.ceil(limitDay / 7) * 7;\r\n  //console.log(\"nextDay값 ->\"+nextDay)//35 35-31=4칸 빈칸만들어진다.\r\n\r\n  return { firstDay, lastDay, limitDay, nextDay };\r\n};\r\n\r\nconst CalendarItem = (props) => {\r\n  //UserId, content ,createdAt ,id , picture\r\n  const { exercise, dateobject } = props.i; //api서버후 db에서 받은값\r\n\r\n  console.log(\"ExerciseListComponent.js CalendarItem exercise -> \", exercise);\r\n  return exercise.map((i, index) => (\r\n    <React.Fragment key={index}>\r\n      {i.id && i.whenchoose === \"1\" ? (\r\n        // <Link\r\n        //   to={`../read/${i.choose}/${dateobject}`}\r\n        //   style={{ textDecoration: \"none\", color: \"black\" }}\r\n        // >\r\n        <>\r\n          <Image\r\n            src=\"/img/biceps.png\"\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            rounded\r\n          />\r\n          {whenchooseReturn(i.whenchoose)}({chooseReturn(i.choose)}) <br />\r\n        </>\r\n      ) : // </Link>\r\n      i.id && i.whenchoose === \"2\" ? (\r\n        // <Link\r\n        //   to={`../read/${i.choose}/${dateobject}`}\r\n        //   style={{ textDecoration: \"none\", color: \"black\" }}\r\n        // >\r\n        <>\r\n          <Image\r\n            src=\"/img/tennis.png\"\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            rounded\r\n          />\r\n          {whenchooseReturn(i.whenchoose)}({chooseReturn(i.choose)})<br />\r\n        </>\r\n      ) : (\r\n        // </Link>\r\n        // <Link\r\n        //   to={`../read/${i.choose}/${dateobject}`}\r\n        //   style={{ textDecoration: \"none\", color: \"black\" }}\r\n        // >\r\n        <>\r\n          <Image\r\n            src=\"/img/basketball.png\"\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            rounded\r\n          />\r\n          {whenchooseReturn(i.whenchoose)}({chooseReturn(i.choose)})<br />\r\n        </>\r\n        // </Link>\r\n      )}\r\n    </React.Fragment>\r\n  ));\r\n};\r\n\r\nconst ExerciseListComponent = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const { moveToExerciseCreate } = useCustomExercise();\r\n  const { effectException } = useCustomLogin();\r\n  const navigate = useNavigate();\r\n\r\n  const [exercise, setExercise] = useState([]);\r\n\r\n  const [currentMonth, setCurrentMonth] = useState(\"\");\r\n  const [currentYear, setCurrentYear] = useState(\"\");\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [fullcurrentDate, setFullCurrentDate] = useState(\"\");\r\n\r\n  const [searchMonth, setSearchMonth] = useState(0);\r\n  const [searchYear, setSearchYear] = useState(0);\r\n  const [beforeDateItemArray, setBeforeDateItemArray] = useState([]);\r\n  const [afterDateItemArray, setAfterDateItemArray] = useState([]);\r\n  const [dateItem, setDateItem] = useState([]);\r\n  const [lastDay, setLastDay] = useState(\"\");\r\n  const [firstDay, setFirstDay] = useState(\"\");\r\n  const [nextDay, setNextDay] = useState(\"\");\r\n  const [limitDay, setLimitDay] = useState(\"\");\r\n  const [check, setCheck] = useState(0);\r\n  const [make, setMake] = useState(false);\r\n  let searchParamsYear = searchParams.get(\"year\");\r\n  let searchParamsMonth = searchParams.get(\"month\");\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(\"useLayoutEffect()  진입\");\r\n    setDateItem(() => []);\r\n    setMake(() => false);\r\n    let date = new Date();\r\n\r\n    let basicYear = date.getFullYear();\r\n    let basicMonth = date.getMonth() + 1;\r\n    basicMonth = basicMonth < 10 ? \"0\" + basicMonth : basicMonth;\r\n    date = `${basicYear}-${basicMonth}-01`;\r\n\r\n    if (searchParamsYear !== null && searchParamsMonth !== null) {\r\n      console.log(\r\n        \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n        searchParamsYear\r\n      );\r\n      console.log(\r\n        \"useLayoutEffect() 쿼리파라미터 존재할경우 진입 -> \",\r\n        searchParamsMonth\r\n      );\r\n      setSearchMonth(() => Number(searchParamsMonth));\r\n      setSearchYear(() => searchParamsYear);\r\n\r\n      date = new Date(`${searchParamsYear}-${searchParamsMonth}-01`);\r\n      console.log(\"date-> \", date);\r\n    }\r\n    setCurrentDate(() => date);\r\n    const newdate = new Date(date);\r\n    setCurrentYear(\"\" + newdate.getFullYear());\r\n    setCurrentMonth(newdate.getMonth() + 1);\r\n    setFullCurrentDate(() => newdate);\r\n  }, [searchParamsYear, searchParamsMonth]);\r\n\r\n  useEffect(() => {\r\n    if (fullcurrentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() fullcurrentDate 존재할경우 =>  \",\r\n        fullcurrentDate\r\n      );\r\n\r\n      const { firstDay, nextDay, limitDay, lastDay } =\r\n        makeCalendar(fullcurrentDate);\r\n\r\n      setLastDay(lastDay);\r\n      setFirstDay(firstDay);\r\n      setNextDay(nextDay);\r\n      setLimitDay(limitDay);\r\n    } //if\r\n\r\n    return () => {\r\n      console.log(\"useEffect() makeCalendar() 반환변수들 초기화\");\r\n\r\n      setLastDay(() => \"\");\r\n      setFirstDay(() => \"\");\r\n      setNextDay(() => \"\");\r\n      setLimitDay(() => \"\");\r\n    };\r\n  }, [fullcurrentDate]);\r\n\r\n  //달력에서 이전빈칸\r\n  useEffect(() => {\r\n    console.log(\"useEffect() 달력 데이터넣기 진입\");\r\n\r\n    if (make === true) {\r\n      console.log(\"useEffect() 달력 데이터넣기 진입 make상태가 true진입\");\r\n\r\n      let dateItem = [];\r\n\r\n      for (let i = 1, j = 0; i <= lastDay; i++, j++) {\r\n        console.log(\"useEffect() 달력 데이터넣기 for문 진입\");\r\n\r\n        let currentYear = new Date(fullcurrentDate).getFullYear();\r\n        let currentMonth = new Date(fullcurrentDate).getMonth() + 1;\r\n        currentMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\r\n        let ichange = i < 10 ? \"0\" + i : i;\r\n        let dateobject = `${currentYear}-${currentMonth}-${ichange}`;\r\n        console.log(\"dateobject-> \", dateobject);\r\n        dateItem[j] = {\r\n          dateitem: i,\r\n          dateobject: dateobject,\r\n          exercise: exercise.filter((a) => a.dateobject === dateobject),\r\n        };\r\n      }\r\n      setDateItem(() => dateItem);\r\n\r\n      const beforeDateItem = firstDay - 0;\r\n      let beforeDateItemArray = [];\r\n\r\n      if (beforeDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= beforeDateItem; i++, j++) {\r\n          beforeDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setBeforeDateItemArray(() => beforeDateItemArray);\r\n\r\n      //달력에서 이후빈칸\r\n      const afterDateItem = nextDay - limitDay;\r\n      let afterDateItemArray = [];\r\n\r\n      if (afterDateItem !== 0) {\r\n        for (let i = 1, j = 0; i <= afterDateItem; i++, j++) {\r\n          afterDateItemArray[j] = i;\r\n        }\r\n      }\r\n      setAfterDateItemArray(() => afterDateItemArray);\r\n    }\r\n  }, [make]);\r\n\r\n  useEffect(() => {\r\n    if (currentDate !== \"\") {\r\n      console.log(\r\n        \"useEffect() 진입 axios 비동기요청 currentDate 존재할경우 ->\",\r\n        currentDate\r\n      );\r\n      const getExerciseListEI = async () => {\r\n        getExerciseList({ currentDate })\r\n          .then((result) => {\r\n            console.log(\"ExerciseListComponent.js then()진입 \", result);\r\n            if (!result.error) {\r\n              setExercise(() => result);\r\n              setMake(() => true);\r\n            } else {\r\n              setMake(() => true);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"ExerciseListComponent.js catch()진입 \", err);\r\n            effectException(err);\r\n          });\r\n      }; //getExerciseListEI\r\n      getExerciseListEI();\r\n    } //if\r\n  }, [currentDate]);\r\n\r\n  // 이전달 이동\r\n  const BeforeMonthMove = (currentDate) => {\r\n    console.log(\"BeforeMonthMove() 진입  => \", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n    let beforechangeDate = new Date(tempdate.setMonth(tempdate.getMonth() - 1));\r\n    let beforecurrentYear = new Date(beforechangeDate).getFullYear();\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforecurrentYear => \",\r\n      beforecurrentYear\r\n    );\r\n\r\n    let beforechangeMonth = new Date(beforechangeDate).getMonth() + 1;\r\n    beforechangeMonth =\r\n      beforechangeMonth < 10 ? \"0\" + beforechangeMonth : beforechangeMonth;\r\n    console.log(\r\n      \"BeforeMonthMove() 진입 beforechangeMonth => \",\r\n      beforechangeMonth\r\n    );\r\n\r\n    navigate(`?year=${beforecurrentYear}&month=${beforechangeMonth}`);\r\n  };\r\n\r\n  //다음달이동\r\n  const NextMonthMove = (currentDate) => {\r\n    console.log(\"NextMonthMove() 진입 currentDate ->\", currentDate);\r\n    const tempdate = new Date(currentDate);\r\n\r\n    let afterchangeDate = new Date(tempdate.setMonth(tempdate.getMonth()));\r\n    console.log(\"NextMonthMove() 진입 afterchangeDate ->\", afterchangeDate);\r\n\r\n    let aftercurrentYear = new Date(afterchangeDate).getFullYear();\r\n    console.log(\"NextMonthMove() 진입 aftercurrentYear ->\", aftercurrentYear);\r\n\r\n    let afterchangeMonth = new Date(afterchangeDate).getMonth() + 2;\r\n    afterchangeMonth =\r\n      afterchangeMonth < 10 ? \"0\" + afterchangeMonth : afterchangeMonth;\r\n    console.log(\"NextMonthMove() 진입 afterchangeMonth ->\", afterchangeMonth);\r\n\r\n    navigate(`?year=${aftercurrentYear}&month=${afterchangeMonth}`);\r\n  };\r\n\r\n  const createHandler = (dateitem) => {\r\n    console.log(\r\n      \"ExerciseListComponent.js createHandler() dateitme => \",\r\n      dateitem\r\n    );\r\n    const paramMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth;\r\n    dateitem = dateitem < 10 ? \"0\" + dateitem : dateitem;\r\n    const paramdate = `${currentYear}-${paramMonth}-${dateitem}`;\r\n    console.log(\r\n      \"ExerciseListComponent.js createHandler() paramdate => \",\r\n      paramdate\r\n    );\r\n\r\n    const getChooseExerciseEI = async () => {\r\n      await getChooseExercise(paramdate).then((result) => {\r\n        console.log(\r\n          \"ExerciseListComponent.js createHandler() axios 결과 then() -> \",\r\n          result\r\n        ); //\"1234\"\r\n        if (result.result !== \"\" || result.result !== null) {\r\n          console.log(\"if문 진입\");\r\n          if (result.result.length === 3) {\r\n            console.log(\"갯수 3일경우 진입\");\r\n\r\n            alert(paramdate + \"일자 운동을 모두 작성했습니다.\");\r\n            return;\r\n          } else {\r\n            console.log(\"갯수 3이아닐경우 진입\");\r\n\r\n            moveToExerciseCreate(paramdate);\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    getChooseExerciseEI();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {\" \"}\r\n      <section className=\"py-5\">\r\n        <div className=\"calrap\" style={{ margin: \"0 auto\" }}>\r\n          <div className=\"calheader\">\r\n            <div className=\"calbtn calprevDay\">\r\n              <button onClick={() => BeforeMonthMove(currentDate)}>이전</button>\r\n            </div>\r\n            <h2 className=\"caldateTitle\">\r\n              {currentYear}년 {currentMonth}월\r\n            </h2>\r\n            <div className=\"calbtn calnextDay\">\r\n              <button onClick={() => NextMonthMove(currentDate)}>이후</button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <h6 style={{ textAlign: \"right\", color: \"tomato\" }}>\r\n            <i>일자 클릭시 운동등록페이지로 이동합니다!</i>\r\n          </h6>\r\n          <br />\r\n\r\n          <div className=\"calgrid caldateHead\">\r\n            <div key={\"0\"}>일</div>\r\n            <div key={\"1\"}>월</div>\r\n            <div key={\"2\"}>화</div>\r\n            <div key={\"3\"}>수</div>\r\n            <div key={\"4\"}>목</div>\r\n            <div key={\"5\"}>금</div>\r\n            <div key={\"6\"}>토</div>\r\n          </div>\r\n\r\n          <div className=\"calgrid caldateBoard\">\r\n            {beforeDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n\r\n            {dateItem.map((i, index) => (\r\n              <div key={index}>\r\n                {i.exercise && i.exercise.length !== 0 ? (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => createHandler(i.dateitem)}\r\n                      style={{ all: \"unset\" }}\r\n                    >\r\n                      {i.dateitem}\r\n                    </button>\r\n                    <Link\r\n                      to={`../read/${i.dateobject}`}\r\n                      style={{ textDecoration: \"none\", color: \"black\" }}\r\n                    >\r\n                      &nbsp;&nbsp;모두보기 <br />\r\n                      <br />\r\n                    </Link>\r\n                    <CalendarItem key={index} i={i} />\r\n                  </>\r\n                ) : (\r\n                  <Link\r\n                    to={`../create/${i.dateobject}`}\r\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  >\r\n                    {i.dateitem}\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            ))}\r\n            {afterDateItemArray.map((i, index) => (\r\n              <div key={index}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseListComponent;\r\n","import LayoutIndex from \"../../components/layout/LayoutIndex\";\r\nimport ExerciseListComponent from \"../../components/exercise/ExerciseListComponent\";\r\nconst ExerciseListPage = () => {\r\n  return (\r\n    <>\r\n      <LayoutIndex>\r\n        <ExerciseListComponent />\r\n      </LayoutIndex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseListPage;\r\n"],"names":["apiKey","process","console","log","navigatorFn","navigator","geolocation","_loadedCoords","_loadedCoords2","saveCoords","coordsObj","localStorage","setItem","JSON","stringify","handleSuccess","position","_position$coords","_position$coords2","latitude","coords","longitude","handleError","askForCoords","getCurrentPosition","loadedCoords","getItem","parse","dfs_xy_conv","code","v1","v2","DEGRAD","Math","PI","RADDEG","re","slat1","slat2","olon","olat","sn","tan","cos","sf","pow","ro","rs","ra","theta","floor","sin","xn","yn","sqrt","alat","atan","abs","atan2","alon","Number","weatherapi","async","weatherDate","weatherTime","_ref","weatherapiresult","xyresult","_result$data","_result$data$response","_result$data$response2","_result$data$response3","result","axios","get","params","serviceKey","numOfRows","pageNo","dataType","base_date","base_time","nx","x","ny","y","data","response","body","items","item","e","Footer","_jsx","Navbar","className","children","Container","Brand","_jsxs","style","fontSize","textAlign","alt","src","width","height","props","loginState","isLogin","useCustomLogin","modalVisible","setModalVisible","useState","msg","setMsg","msgList","setMsgList","chatroomname","setChatroomname","chatroompassword","setChatroompassword","refChatRoom","useRef","refChatRoompassword","moveToLogin","refModalBody","socket","setSocket","useEffect","on","_refModalBody$current2","prev","type","id","current","scrollIntoView","behavior","block","_refModalBody$current","message","username","socketidcheck","off","_Fragment","expand","display","alignItems","justifyContent","fluid","Image","Collapse","Nav","Link","href","Form","onSubmit","preventDefault","alert","undefined","io","transports","autoConnect","connect","sendData","emit","chatStartClick","InputGroup","size","Text","Control","name","onChange","target","value","ref","Button","variant","Modal","Dialog","Header","Title","onClick","window","confirm","Body","overflow","map","v","i","listStyle","flex","padding","backgroundColor","marginTop","fontWeight","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","handleSubmitChat","handleMsg","BasicMenu","date","setDate","Date","getNum","param","defaultValue","parseInt","useCustomMove","navigate","useNavigate","refresh","setRefresh","queryParams","useSearchParams","page","queryDefault","createSearchParams","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","moveToModify","num","pathname","search","moveToRead","moveToCreate","useCustomExercise","exerciseState","useSelector","state","exerciseSlice","dispatch","useDispatch","postExerciseC","diaryParam","picture","postExerciseAsync","deleteExerciseC","deleteExerciseAsync","patchExerciseC","_ref2","exerciseParam","patchExerciseAsync","moveToExerciseRead","dateobject","moveToExerciseModify","_ref3","whenchoose","moveToExerciseCreate","replace","getExerciseListC","getExerciseListAsync","moveToExerciseList","whenchooseReturn","chooseReturn","choose","CalendarItem","exercise","index","React","rounded","ExerciseListComponent","searchParams","effectException","setExercise","currentMonth","setCurrentMonth","currentYear","setCurrentYear","currentDate","setCurrentDate","fullcurrentDate","setFullCurrentDate","searchMonth","setSearchMonth","searchYear","setSearchYear","beforeDateItemArray","setBeforeDateItemArray","afterDateItemArray","setAfterDateItemArray","dateItem","setDateItem","lastDay","setLastDay","firstDay","setFirstDay","nextDay","setNextDay","limitDay","setLimitDay","check","setCheck","make","setMake","searchParamsYear","searchParamsMonth","useLayoutEffect","basicYear","getFullYear","basicMonth","getMonth","newdate","d","getDay","getDate","ceil","makeCalendar","j","dateitem","filter","a","beforeDateItem","afterDateItem","getExerciseList","then","error","catch","err","getExerciseListEI","margin","tempdate","beforechangeDate","setMonth","beforecurrentYear","beforechangeMonth","BeforeMonthMove","afterchangeDate","aftercurrentYear","afterchangeMonth","NextMonthMove","length","paramdate","getChooseExercise","getChooseExerciseEI","createHandler","all","to","textDecoration","ExerciseListPage","LayoutIndex"],"sourceRoot":""}